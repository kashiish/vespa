// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/admin/v1alpha/resources.proto

#include "google/analytics/admin/v1alpha/resources.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<12> scc_info_ChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Account_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Property_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_GoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto;
namespace google {
namespace analytics {
namespace admin {
namespace v1alpha {
class AccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Account> _instance;
} _Account_default_instance_;
class PropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Property> _instance;
} _Property_default_instance_;
class AndroidAppDataStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AndroidAppDataStream> _instance;
} _AndroidAppDataStream_default_instance_;
class IosAppDataStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IosAppDataStream> _instance;
} _IosAppDataStream_default_instance_;
class WebDataStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebDataStream> _instance;
} _WebDataStream_default_instance_;
class UserLinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLink> _instance;
} _UserLink_default_instance_;
class AuditUserLinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuditUserLink> _instance;
} _AuditUserLink_default_instance_;
class EnhancedMeasurementSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnhancedMeasurementSettings> _instance;
} _EnhancedMeasurementSettings_default_instance_;
class FirebaseLinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FirebaseLink> _instance;
} _FirebaseLink_default_instance_;
class GlobalSiteTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalSiteTag> _instance;
} _GlobalSiteTag_default_instance_;
class GoogleAdsLinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoogleAdsLink> _instance;
} _GoogleAdsLink_default_instance_;
class DataSharingSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataSharingSettings> _instance;
} _DataSharingSettings_default_instance_;
class AccountSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountSummary> _instance;
} _AccountSummary_default_instance_;
class PropertySummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertySummary> _instance;
} _PropertySummary_default_instance_;
class MeasurementProtocolSecretDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeasurementProtocolSecret> _instance;
} _MeasurementProtocolSecret_default_instance_;
class ChangeHistoryEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeHistoryEvent> _instance;
} _ChangeHistoryEvent_default_instance_;
class ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeHistoryChange_ChangeHistoryResource> _instance;
  const ::google::analytics::admin::v1alpha::Account* account_;
  const ::google::analytics::admin::v1alpha::Property* property_;
  const ::google::analytics::admin::v1alpha::WebDataStream* web_data_stream_;
  const ::google::analytics::admin::v1alpha::AndroidAppDataStream* android_app_data_stream_;
  const ::google::analytics::admin::v1alpha::IosAppDataStream* ios_app_data_stream_;
  const ::google::analytics::admin::v1alpha::FirebaseLink* firebase_link_;
  const ::google::analytics::admin::v1alpha::GoogleAdsLink* google_ads_link_;
  const ::google::analytics::admin::v1alpha::GoogleSignalsSettings* google_signals_settings_;
  const ::google::analytics::admin::v1alpha::ConversionEvent* conversion_event_;
  const ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* measurement_protocol_secret_;
  const ::google::analytics::admin::v1alpha::CustomDimension* custom_dimension_;
  const ::google::analytics::admin::v1alpha::CustomMetric* custom_metric_;
} _ChangeHistoryChange_ChangeHistoryResource_default_instance_;
class ChangeHistoryChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeHistoryChange> _instance;
} _ChangeHistoryChange_default_instance_;
class ConversionEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConversionEvent> _instance;
} _ConversionEvent_default_instance_;
class GoogleSignalsSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoogleSignalsSettings> _instance;
} _GoogleSignalsSettings_default_instance_;
class CustomDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomDimension> _instance;
} _CustomDimension_default_instance_;
class CustomMetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomMetric> _instance;
} _CustomMetric_default_instance_;
}  // namespace v1alpha
}  // namespace admin
}  // namespace analytics
}  // namespace google
static void InitDefaultsAccount_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_Account_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::Account();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::Account::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Account_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccount_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsProperty_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_Property_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::Property();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::Property::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Property_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProperty_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsAndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_AndroidAppDataStream_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::AndroidAppDataStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::AndroidAppDataStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsIosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_IosAppDataStream_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::IosAppDataStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::IosAppDataStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsWebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_WebDataStream_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::WebDataStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::WebDataStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_UserLink_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::UserLink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::UserLink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsAuditUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_AuditUserLink_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::AuditUserLink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::AuditUserLink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuditUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuditUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsEnhancedMeasurementSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_EnhancedMeasurementSettings_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnhancedMeasurementSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnhancedMeasurementSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsFirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_FirebaseLink_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::FirebaseLink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::FirebaseLink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsGlobalSiteTag_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_GlobalSiteTag_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::GlobalSiteTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::GlobalSiteTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GlobalSiteTag_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGlobalSiteTag_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsGoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_GoogleAdsLink_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::GoogleAdsLink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::GoogleAdsLink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsDataSharingSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_DataSharingSettings_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::DataSharingSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::DataSharingSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataSharingSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataSharingSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsAccountSummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_AccountSummary_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::AccountSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::AccountSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AccountSummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccountSummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_PropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,}};

static void InitDefaultsPropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_PropertySummary_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::PropertySummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::PropertySummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsMeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_MeasurementProtocolSecret_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::MeasurementProtocolSecret();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::MeasurementProtocolSecret::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsChangeHistoryEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_ChangeHistoryEvent_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::ChangeHistoryEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::ChangeHistoryEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ChangeHistoryEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsChangeHistoryEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_ChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,}};

static void InitDefaultsChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<12> scc_info_ChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 12, InitDefaultsChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Account_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_Property_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_WebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_AndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_IosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_FirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_GoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_GoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_ConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_MeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_CustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,
      &scc_info_CustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,}};

static void InitDefaultsChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_ChangeHistoryChange_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::ChangeHistoryChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::ChangeHistoryChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_ChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base,}};

static void InitDefaultsConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_ConversionEvent_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::ConversionEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::ConversionEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsGoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_GoogleSignalsSettings_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::GoogleSignalsSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::GoogleSignalsSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsCustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_CustomDimension_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::CustomDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::CustomDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

static void InitDefaultsCustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::analytics::admin::v1alpha::_CustomMetric_default_instance_;
    new (ptr) ::google::analytics::admin::v1alpha::CustomMetric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::analytics::admin::v1alpha::CustomMetric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto}, {}};

void InitDefaults_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Account_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Property_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuditUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnhancedMeasurementSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GlobalSiteTag_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataSharingSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountSummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeHistoryEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[10];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, region_code_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Account, deleted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, parent_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, industry_category_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, time_zone_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, currency_code_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, delete_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::Property, expire_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, firebase_app_id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, package_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AndroidAppDataStream, display_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, firebase_app_id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, bundle_id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::IosAppDataStream, display_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, measurement_id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, firebase_app_id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, default_uri_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::WebDataStream, display_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::UserLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::UserLink, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::UserLink, email_address_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::UserLink, direct_roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AuditUserLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AuditUserLink, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AuditUserLink, email_address_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AuditUserLink, direct_roles_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AuditUserLink, effective_roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, stream_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, page_views_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, scrolls_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, outbound_clicks_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, site_search_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, video_engagement_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, file_downloads_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, page_loads_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, page_changes_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, search_query_parameter_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings, uri_query_parameter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::FirebaseLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::FirebaseLink, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::FirebaseLink, project_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::FirebaseLink, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::FirebaseLink, maximum_user_access_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GlobalSiteTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GlobalSiteTag, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GlobalSiteTag, snippet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, customer_id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, can_manage_clients_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, ads_personalization_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, email_address_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleAdsLink, update_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, sharing_with_google_support_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, sharing_with_google_assigned_sales_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, sharing_with_google_any_sales_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, sharing_with_google_products_enabled_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::DataSharingSettings, sharing_with_others_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AccountSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AccountSummary, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AccountSummary, account_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AccountSummary, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::AccountSummary, property_summaries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::PropertySummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::PropertySummary, property_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::PropertySummary, display_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::MeasurementProtocolSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::MeasurementProtocolSecret, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::MeasurementProtocolSecret, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::MeasurementProtocolSecret, secret_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, id_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, change_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, actor_type_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, user_actor_email_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, changes_filtered_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryEvent, changes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, account_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, property_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, web_data_stream_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, android_app_data_stream_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, ios_app_data_stream_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, firebase_link_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, google_ads_link_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, google_signals_settings_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, conversion_event_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, measurement_protocol_secret_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, custom_dimension_),
  offsetof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResourceDefaultTypeInternal, custom_metric_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource, resource_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange, resource_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange, action_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange, resource_before_change_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ChangeHistoryChange, resource_after_change_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ConversionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ConversionEvent, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ConversionEvent, event_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ConversionEvent, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::ConversionEvent, is_deletable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleSignalsSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleSignalsSettings, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleSignalsSettings, state_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::GoogleSignalsSettings, consent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, parameter_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, description_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, scope_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomDimension, disallow_ads_personalization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, parameter_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, display_name_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, description_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, measurement_unit_),
  PROTOBUF_FIELD_OFFSET(::google::analytics::admin::v1alpha::CustomMetric, scope_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::analytics::admin::v1alpha::Account)},
  { 11, -1, sizeof(::google::analytics::admin::v1alpha::Property)},
  { 26, -1, sizeof(::google::analytics::admin::v1alpha::AndroidAppDataStream)},
  { 37, -1, sizeof(::google::analytics::admin::v1alpha::IosAppDataStream)},
  { 48, -1, sizeof(::google::analytics::admin::v1alpha::WebDataStream)},
  { 60, -1, sizeof(::google::analytics::admin::v1alpha::UserLink)},
  { 68, -1, sizeof(::google::analytics::admin::v1alpha::AuditUserLink)},
  { 77, -1, sizeof(::google::analytics::admin::v1alpha::EnhancedMeasurementSettings)},
  { 94, -1, sizeof(::google::analytics::admin::v1alpha::FirebaseLink)},
  { 103, -1, sizeof(::google::analytics::admin::v1alpha::GlobalSiteTag)},
  { 110, -1, sizeof(::google::analytics::admin::v1alpha::GoogleAdsLink)},
  { 122, -1, sizeof(::google::analytics::admin::v1alpha::DataSharingSettings)},
  { 133, -1, sizeof(::google::analytics::admin::v1alpha::AccountSummary)},
  { 142, -1, sizeof(::google::analytics::admin::v1alpha::PropertySummary)},
  { 149, -1, sizeof(::google::analytics::admin::v1alpha::MeasurementProtocolSecret)},
  { 157, -1, sizeof(::google::analytics::admin::v1alpha::ChangeHistoryEvent)},
  { 168, -1, sizeof(::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource)},
  { 186, -1, sizeof(::google::analytics::admin::v1alpha::ChangeHistoryChange)},
  { 195, -1, sizeof(::google::analytics::admin::v1alpha::ConversionEvent)},
  { 204, -1, sizeof(::google::analytics::admin::v1alpha::GoogleSignalsSettings)},
  { 212, -1, sizeof(::google::analytics::admin::v1alpha::CustomDimension)},
  { 223, -1, sizeof(::google::analytics::admin::v1alpha::CustomMetric)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_Property_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_AndroidAppDataStream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_IosAppDataStream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_WebDataStream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_UserLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_AuditUserLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_EnhancedMeasurementSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_FirebaseLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_GlobalSiteTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_GoogleAdsLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_DataSharingSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_AccountSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_PropertySummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_MeasurementProtocolSecret_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_ChangeHistoryEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_ChangeHistoryChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_ConversionEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_GoogleSignalsSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_CustomDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::analytics::admin::v1alpha::_CustomMetric_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto = {
  {}, AddDescriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto, "google/analytics/admin/v1alpha/resources.proto", schemas,
  file_default_instances, TableStruct_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto::offsets,
  file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto, 22, file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto, file_level_service_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto,
};

const char descriptor_table_protodef_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[] =
  "\n.google/analytics/admin/v1alpha/resourc"
  "es.proto\022\036google.analytics.admin.v1alpha"
  "\032\037google/api/field_behavior.proto\032\031googl"
  "e/api/resource.proto\032\037google/protobuf/ti"
  "mestamp.proto\032\036google/protobuf/wrappers."
  "proto\"\216\002\n\007Account\022\021\n\004name\030\001 \001(\tB\003\340A\003\0224\n\013"
  "create_time\030\002 \001(\0132\032.google.protobuf.Time"
  "stampB\003\340A\003\0224\n\013update_time\030\003 \001(\0132\032.google"
  ".protobuf.TimestampB\003\340A\003\022\031\n\014display_name"
  "\030\004 \001(\tB\003\340A\002\022\023\n\013region_code\030\005 \001(\t\022\024\n\007dele"
  "ted\030\006 \001(\010B\003\340A\003:>\352A;\n%analyticsadmin.goog"
  "leapis.com/Account\022\022accounts/{account}\"\345"
  "\003\n\010Property\022\021\n\004name\030\001 \001(\tB\003\340A\003\0224\n\013create"
  "_time\030\003 \001(\0132\032.google.protobuf.TimestampB"
  "\003\340A\003\0224\n\013update_time\030\004 \001(\0132\032.google.proto"
  "buf.TimestampB\003\340A\003\022\023\n\006parent\030\002 \001(\tB\003\340A\005\022"
  "\031\n\014display_name\030\005 \001(\tB\003\340A\002\022K\n\021industry_c"
  "ategory\030\006 \001(\01620.google.analytics.admin.v"
  "1alpha.IndustryCategory\022\026\n\ttime_zone\030\007 \001"
  "(\tB\003\340A\002\022\025\n\rcurrency_code\030\010 \001(\t\0224\n\013delete"
  "_time\030\013 \001(\0132\032.google.protobuf.TimestampB"
  "\003\340A\003\0224\n\013expire_time\030\014 \001(\0132\032.google.proto"
  "buf.TimestampB\003\340A\003:B\352A\?\n&analyticsadmin."
  "googleapis.com/Property\022\025properties/{pro"
  "perty}\"\344\002\n\024AndroidAppDataStream\022\021\n\004name\030"
  "\001 \001(\tB\003\340A\003\022\034\n\017firebase_app_id\030\002 \001(\tB\003\340A\003"
  "\0224\n\013create_time\030\003 \001(\0132\032.google.protobuf."
  "TimestampB\003\340A\003\0224\n\013update_time\030\004 \001(\0132\032.go"
  "ogle.protobuf.TimestampB\003\340A\003\022\031\n\014package_"
  "name\030\005 \001(\tB\003\340A\005\022\024\n\014display_name\030\006 \001(\t:~\352"
  "A{\n2analyticsadmin.googleapis.com/Androi"
  "dAppDataStream\022Eproperties/{property}/an"
  "droidAppDataStreams/{android_app_data_st"
  "ream}\"\324\002\n\020IosAppDataStream\022\021\n\004name\030\001 \001(\t"
  "B\003\340A\003\022\034\n\017firebase_app_id\030\002 \001(\tB\003\340A\003\0224\n\013c"
  "reate_time\030\003 \001(\0132\032.google.protobuf.Times"
  "tampB\003\340A\003\0224\n\013update_time\030\004 \001(\0132\032.google."
  "protobuf.TimestampB\003\340A\003\022\031\n\tbundle_id\030\005 \001"
  "(\tB\006\340A\005\340A\002\022\024\n\014display_name\030\006 \001(\t:r\352Ao\n.a"
  "nalyticsadmin.googleapis.com/IosAppDataS"
  "tream\022=properties/{property}/iosAppDataS"
  "treams/{ios_app_data_stream}\"\350\002\n\rWebData"
  "Stream\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\033\n\016measurement"
  "_id\030\002 \001(\tB\003\340A\003\022\034\n\017firebase_app_id\030\003 \001(\tB"
  "\003\340A\003\0224\n\013create_time\030\004 \001(\0132\032.google.proto"
  "buf.TimestampB\003\340A\003\0224\n\013update_time\030\005 \001(\0132"
  "\032.google.protobuf.TimestampB\003\340A\003\022\030\n\013defa"
  "ult_uri\030\006 \001(\tB\003\340A\005\022\031\n\014display_name\030\007 \001(\t"
  "B\003\340A\002:h\352Ae\n+analyticsadmin.googleapis.co"
  "m/WebDataStream\0226properties/{property}/w"
  "ebDataStreams/{web_data_stream}\"\324\001\n\010User"
  "Link\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\032\n\remail_address"
  "\030\002 \001(\tB\003\340A\005\022\024\n\014direct_roles\030\003 \003(\t:\202\001\352A\177\n"
  "&analyticsadmin.googleapis.com/UserLink\022"
  "(accounts/{account}/userLinks/{user_link"
  "}\022+properties/{property}/userLinks/{user"
  "_link}\"c\n\rAuditUserLink\022\014\n\004name\030\001 \001(\t\022\025\n"
  "\remail_address\030\002 \001(\t\022\024\n\014direct_roles\030\003 \003"
  "(\t\022\027\n\017effective_roles\030\004 \003(\t\"\231\004\n\033Enhanced"
  "MeasurementSettings\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\026"
  "\n\016stream_enabled\030\002 \001(\010\022\037\n\022page_views_ena"
  "bled\030\003 \001(\010B\003\340A\003\022\027\n\017scrolls_enabled\030\004 \001(\010"
  "\022\037\n\027outbound_clicks_enabled\030\005 \001(\010\022\033\n\023sit"
  "e_search_enabled\030\007 \001(\010\022 \n\030video_engageme"
  "nt_enabled\030\t \001(\010\022\036\n\026file_downloads_enabl"
  "ed\030\n \001(\010\022\037\n\022page_loads_enabled\030\014 \001(\010B\003\340A"
  "\003\022\034\n\024page_changes_enabled\030\r \001(\010\022#\n\026searc"
  "h_query_parameter\030\020 \001(\tB\003\340A\002\022\033\n\023uri_quer"
  "y_parameter\030\021 \001(\t:\223\001\352A\217\001\n9analyticsadmin"
  ".googleapis.com/EnhancedMeasurementSetti"
  "ngs\022Rproperties/{property}/webDataStream"
  "s/{web_data_stream}/enhancedMeasurementS"
  "ettings\"\243\002\n\014FirebaseLink\022\021\n\004name\030\001 \001(\tB\003"
  "\340A\003\022\024\n\007project\030\002 \001(\tB\003\340A\005\0224\n\013create_time"
  "\030\003 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\022"
  "N\n\023maximum_user_access\030\004 \001(\01621.google.an"
  "alytics.admin.v1alpha.MaximumUserAccess:"
  "d\352Aa\n*analyticsadmin.googleapis.com/Fire"
  "baseLink\0223properties/{property}/firebase"
  "Links/{firebase_link}\"\217\001\n\rGlobalSiteTag\022"
  "\021\n\004name\030\001 \001(\tB\003\340A\003\022\024\n\007snippet\030\002 \001(\tB\003\340A\005"
  ":U\352AR\n+analyticsadmin.googleapis.com/Glo"
  "balSiteTag\022#properties/{property}/global"
  "SiteTag\"\220\003\n\rGoogleAdsLink\022\021\n\004name\030\001 \001(\tB"
  "\003\340A\003\022\030\n\013customer_id\030\003 \001(\tB\003\340A\005\022\037\n\022can_ma"
  "nage_clients\030\004 \001(\010B\003\340A\003\022\?\n\033ads_personali"
  "zation_enabled\030\005 \001(\0132\032.google.protobuf.B"
  "oolValue\022\032\n\remail_address\030\006 \001(\tB\003\340A\003\0224\n\013"
  "create_time\030\007 \001(\0132\032.google.protobuf.Time"
  "stampB\003\340A\003\0224\n\013update_time\030\010 \001(\0132\032.google"
  ".protobuf.TimestampB\003\340A\003:h\352Ae\n+analytics"
  "admin.googleapis.com/GoogleAdsLink\0226prop"
  "erties/{property}/googleAdsLinks/{google"
  "_ads_link}\"\353\002\n\023DataSharingSettings\022\021\n\004na"
  "me\030\001 \001(\tB\003\340A\003\022+\n#sharing_with_google_sup"
  "port_enabled\030\002 \001(\010\0222\n*sharing_with_googl"
  "e_assigned_sales_enabled\030\003 \001(\010\022-\n%sharin"
  "g_with_google_any_sales_enabled\030\004 \001(\010\022,\n"
  "$sharing_with_google_products_enabled\030\005 "
  "\001(\010\022#\n\033sharing_with_others_enabled\030\006 \001(\010"
  ":^\352A[\n1analyticsadmin.googleapis.com/Dat"
  "aSharingSettings\022&accounts/{account}/dat"
  "aSharingSettings\"\225\002\n\016AccountSummary\022\014\n\004n"
  "ame\030\001 \001(\t\022;\n\007account\030\002 \001(\tB*\372A\'\n%analyti"
  "csadmin.googleapis.com/Account\022\024\n\014displa"
  "y_name\030\003 \001(\t\022K\n\022property_summaries\030\004 \003(\013"
  "2/.google.analytics.admin.v1alpha.Proper"
  "tySummary:U\352AR\n,analyticsadmin.googleapi"
  "s.com/AccountSummary\022\"accountSummaries/{"
  "account_summary}\"f\n\017PropertySummary\022=\n\010p"
  "roperty\030\001 \001(\tB+\372A(\n&analyticsadmin.googl"
  "eapis.com/Property\022\024\n\014display_name\030\002 \001(\t"
  "\"\225\002\n\031MeasurementProtocolSecret\022\021\n\004name\030\001"
  " \001(\tB\003\340A\003\022\031\n\014display_name\030\002 \001(\tB\003\340A\002\022\031\n\014"
  "secret_value\030\003 \001(\tB\003\340A\003:\256\001\352A\252\001\n7analytic"
  "sadmin.googleapis.com/MeasurementProtoco"
  "lSecret\022oproperties/{property}/webDataSt"
  "reams/{web_data_stream}/measurementProto"
  "colSecrets/{measurement_protocol_secret}"
  "\"\212\002\n\022ChangeHistoryEvent\022\n\n\002id\030\001 \001(\t\022/\n\013c"
  "hange_time\030\002 \001(\0132\032.google.protobuf.Times"
  "tamp\022=\n\nactor_type\030\003 \001(\0162).google.analyt"
  "ics.admin.v1alpha.ActorType\022\030\n\020user_acto"
  "r_email\030\004 \001(\t\022\030\n\020changes_filtered\030\005 \001(\010\022"
  "D\n\007changes\030\006 \003(\01323.google.analytics.admi"
  "n.v1alpha.ChangeHistoryChange\"\372\t\n\023Change"
  "HistoryChange\022\020\n\010resource\030\001 \001(\t\022:\n\006actio"
  "n\030\002 \001(\0162*.google.analytics.admin.v1alpha"
  ".ActionType\022i\n\026resource_before_change\030\003 "
  "\001(\0132I.google.analytics.admin.v1alpha.Cha"
  "ngeHistoryChange.ChangeHistoryResource\022h"
  "\n\025resource_after_change\030\004 \001(\0132I.google.a"
  "nalytics.admin.v1alpha.ChangeHistoryChan"
  "ge.ChangeHistoryResource\032\277\007\n\025ChangeHisto"
  "ryResource\022:\n\007account\030\001 \001(\0132\'.google.ana"
  "lytics.admin.v1alpha.AccountH\000\022<\n\010proper"
  "ty\030\002 \001(\0132(.google.analytics.admin.v1alph"
  "a.PropertyH\000\022H\n\017web_data_stream\030\003 \001(\0132-."
  "google.analytics.admin.v1alpha.WebDataSt"
  "reamH\000\022W\n\027android_app_data_stream\030\004 \001(\0132"
  "4.google.analytics.admin.v1alpha.Android"
  "AppDataStreamH\000\022O\n\023ios_app_data_stream\030\005"
  " \001(\01320.google.analytics.admin.v1alpha.Io"
  "sAppDataStreamH\000\022E\n\rfirebase_link\030\006 \001(\0132"
  ",.google.analytics.admin.v1alpha.Firebas"
  "eLinkH\000\022H\n\017google_ads_link\030\007 \001(\0132-.googl"
  "e.analytics.admin.v1alpha.GoogleAdsLinkH"
  "\000\022X\n\027google_signals_settings\030\010 \001(\01325.goo"
  "gle.analytics.admin.v1alpha.GoogleSignal"
  "sSettingsH\000\022K\n\020conversion_event\030\013 \001(\0132/."
  "google.analytics.admin.v1alpha.Conversio"
  "nEventH\000\022`\n\033measurement_protocol_secret\030"
  "\014 \001(\01329.google.analytics.admin.v1alpha.M"
  "easurementProtocolSecretH\000\022K\n\020custom_dim"
  "ension\030\r \001(\0132/.google.analytics.admin.v1"
  "alpha.CustomDimensionH\000\022E\n\rcustom_metric"
  "\030\016 \001(\0132,.google.analytics.admin.v1alpha."
  "CustomMetricH\000B\n\n\010resource\"\375\001\n\017Conversio"
  "nEvent\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\027\n\nevent_name\030"
  "\002 \001(\tB\003\340A\005\0224\n\013create_time\030\003 \001(\0132\032.google"
  ".protobuf.TimestampB\003\340A\003\022\031\n\014is_deletable"
  "\030\004 \001(\010B\003\340A\003:m\352Aj\n-analyticsadmin.googlea"
  "pis.com/ConversionEvent\0229properties/{pro"
  "perty}/conversionEvents/{conversion_even"
  "t}\"\240\002\n\025GoogleSignalsSettings\022\021\n\004name\030\001 \001"
  "(\tB\003\340A\003\022A\n\005state\030\003 \001(\01622.google.analytic"
  "s.admin.v1alpha.GoogleSignalsState\022J\n\007co"
  "nsent\030\004 \001(\01624.google.analytics.admin.v1a"
  "lpha.GoogleSignalsConsentB\003\340A\003:e\352Ab\n3ana"
  "lyticsadmin.googleapis.com/GoogleSignals"
  "Settings\022+properties/{property}/googleSi"
  "gnalsSettings\"\237\003\n\017CustomDimension\022\021\n\004nam"
  "e\030\001 \001(\tB\003\340A\003\022\036\n\016parameter_name\030\002 \001(\tB\006\340A"
  "\002\340A\005\022\031\n\014display_name\030\003 \001(\tB\003\340A\002\022\030\n\013descr"
  "iption\030\004 \001(\tB\003\340A\001\022U\n\005scope\030\005 \001(\0162>.googl"
  "e.analytics.admin.v1alpha.CustomDimensio"
  "n.DimensionScopeB\006\340A\002\340A\005\022)\n\034disallow_ads"
  "_personalization\030\006 \001(\010B\003\340A\001\"F\n\016Dimension"
  "Scope\022\037\n\033DIMENSION_SCOPE_UNSPECIFIED\020\000\022\t"
  "\n\005EVENT\020\001\022\010\n\004USER\020\002:Z\352AW\n-analyticsadmin"
  ".googleapis.com/CustomDimension\022&propert"
  "ies/{property}/customDimensions\"\357\004\n\014Cust"
  "omMetric\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\036\n\016parameter"
  "_name\030\002 \001(\tB\006\340A\002\340A\005\022\031\n\014display_name\030\003 \001("
  "\tB\003\340A\002\022\030\n\013description\030\004 \001(\tB\003\340A\001\022^\n\020meas"
  "urement_unit\030\005 \001(\0162<.google.analytics.ad"
  "min.v1alpha.CustomMetric.MeasurementUnit"
  "B\006\340A\002\340A\005\022O\n\005scope\030\006 \001(\01628.google.analyti"
  "cs.admin.v1alpha.CustomMetric.MetricScop"
  "eB\006\340A\002\340A\005\"\267\001\n\017MeasurementUnit\022 \n\034MEASURE"
  "MENT_UNIT_UNSPECIFIED\020\000\022\014\n\010STANDARD\020\001\022\014\n"
  "\010CURRENCY\020\002\022\010\n\004FEET\020\003\022\n\n\006METERS\020\004\022\016\n\nKIL"
  "OMETERS\020\005\022\t\n\005MILES\020\006\022\020\n\014MILLISECONDS\020\007\022\013"
  "\n\007SECONDS\020\010\022\013\n\007MINUTES\020\t\022\t\n\005HOURS\020\n\"6\n\013M"
  "etricScope\022\034\n\030METRIC_SCOPE_UNSPECIFIED\020\000"
  "\022\t\n\005EVENT\020\001:T\352AQ\n*analyticsadmin.googlea"
  "pis.com/CustomMetric\022#properties/{proper"
  "ty}/customMetrics*\247\001\n\021MaximumUserAccess\022"
  "#\n\037MAXIMUM_USER_ACCESS_UNSPECIFIED\020\000\022\r\n\t"
  "NO_ACCESS\020\001\022\024\n\020READ_AND_ANALYZE\020\002\022\"\n\036EDI"
  "TOR_WITHOUT_LINK_MANAGEMENT\020\003\022$\n EDITOR_"
  "INCLUDING_LINK_MANAGEMENT\020\004*\252\004\n\020Industry"
  "Category\022!\n\035INDUSTRY_CATEGORY_UNSPECIFIE"
  "D\020\000\022\016\n\nAUTOMOTIVE\020\001\022#\n\037BUSINESS_AND_INDU"
  "STRIAL_MARKETS\020\002\022\013\n\007FINANCE\020\003\022\016\n\nHEALTHC"
  "ARE\020\004\022\016\n\nTECHNOLOGY\020\005\022\n\n\006TRAVEL\020\006\022\t\n\005OTH"
  "ER\020\007\022\032\n\026ARTS_AND_ENTERTAINMENT\020\010\022\026\n\022BEAU"
  "TY_AND_FITNESS\020\t\022\030\n\024BOOKS_AND_LITERATURE"
  "\020\n\022\022\n\016FOOD_AND_DRINK\020\013\022\t\n\005GAMES\020\014\022\027\n\023HOB"
  "BIES_AND_LEISURE\020\r\022\023\n\017HOME_AND_GARDEN\020\016\022"
  "\030\n\024INTERNET_AND_TELECOM\020\017\022\026\n\022LAW_AND_GOV"
  "ERNMENT\020\020\022\010\n\004NEWS\020\021\022\026\n\022ONLINE_COMMUNITIE"
  "S\020\022\022\026\n\022PEOPLE_AND_SOCIETY\020\023\022\024\n\020PETS_AND_"
  "ANIMALS\020\024\022\017\n\013REAL_ESTATE\020\025\022\r\n\tREFERENCE\020"
  "\026\022\013\n\007SCIENCE\020\027\022\n\n\006SPORTS\020\030\022\026\n\022JOBS_AND_E"
  "DUCATION\020\031\022\014\n\010SHOPPING\020\032*J\n\tActorType\022\032\n"
  "\026ACTOR_TYPE_UNSPECIFIED\020\000\022\010\n\004USER\020\001\022\n\n\006S"
  "YSTEM\020\002\022\013\n\007SUPPORT\020\003*P\n\nActionType\022\033\n\027AC"
  "TION_TYPE_UNSPECIFIED\020\000\022\013\n\007CREATED\020\001\022\013\n\007"
  "UPDATED\020\002\022\013\n\007DELETED\020\003*\324\002\n\031ChangeHistory"
  "ResourceType\022,\n(CHANGE_HISTORY_RESOURCE_"
  "TYPE_UNSPECIFIED\020\000\022\013\n\007ACCOUNT\020\001\022\014\n\010PROPE"
  "RTY\020\002\022\023\n\017WEB_DATA_STREAM\020\003\022\033\n\027ANDROID_AP"
  "P_DATA_STREAM\020\004\022\027\n\023IOS_APP_DATA_STREAM\020\005"
  "\022\021\n\rFIREBASE_LINK\020\006\022\023\n\017GOOGLE_ADS_LINK\020\007"
  "\022\033\n\027GOOGLE_SIGNALS_SETTINGS\020\010\022\024\n\020CONVERS"
  "ION_EVENT\020\t\022\037\n\033MEASUREMENT_PROTOCOL_SECR"
  "ET\020\n\022\024\n\020CUSTOM_DIMENSION\020\013\022\021\n\rCUSTOM_MET"
  "RIC\020\014*s\n\022GoogleSignalsState\022$\n GOOGLE_SI"
  "GNALS_STATE_UNSPECIFIED\020\000\022\032\n\026GOOGLE_SIGN"
  "ALS_ENABLED\020\001\022\033\n\027GOOGLE_SIGNALS_DISABLED"
  "\020\002*\216\001\n\024GoogleSignalsConsent\022&\n\"GOOGLE_SI"
  "GNALS_CONSENT_UNSPECIFIED\020\000\022$\n GOOGLE_SI"
  "GNALS_CONSENT_CONSENTED\020\002\022(\n$GOOGLE_SIGN"
  "ALS_CONSENT_NOT_CONSENTED\020\001B{\n\"com.googl"
  "e.analytics.admin.v1alphaB\016ResourcesProt"
  "oP\001ZCgoogle.golang.org/genproto/googleap"
  "is/analytics/admin/v1alpha;adminb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto = {
  false, InitDefaults_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto, 
  descriptor_table_protodef_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto,
  "google/analytics/admin/v1alpha/resources.proto", &assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto, 9520,
};

void AddDescriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[4] =
  {
    ::AddDescriptors_google_2fapi_2ffield_5fbehavior_2eproto,
    ::AddDescriptors_google_2fapi_2fresource_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto, deps, 4);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto = []() { AddDescriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto(); return true; }();
namespace google {
namespace analytics {
namespace admin {
namespace v1alpha {
const ::google::protobuf::EnumDescriptor* CustomDimension_DimensionScope_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[0];
}
bool CustomDimension_DimensionScope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CustomDimension_DimensionScope CustomDimension::DIMENSION_SCOPE_UNSPECIFIED;
const CustomDimension_DimensionScope CustomDimension::EVENT;
const CustomDimension_DimensionScope CustomDimension::USER;
const CustomDimension_DimensionScope CustomDimension::DimensionScope_MIN;
const CustomDimension_DimensionScope CustomDimension::DimensionScope_MAX;
const int CustomDimension::DimensionScope_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CustomMetric_MeasurementUnit_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[1];
}
bool CustomMetric_MeasurementUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CustomMetric_MeasurementUnit CustomMetric::MEASUREMENT_UNIT_UNSPECIFIED;
const CustomMetric_MeasurementUnit CustomMetric::STANDARD;
const CustomMetric_MeasurementUnit CustomMetric::CURRENCY;
const CustomMetric_MeasurementUnit CustomMetric::FEET;
const CustomMetric_MeasurementUnit CustomMetric::METERS;
const CustomMetric_MeasurementUnit CustomMetric::KILOMETERS;
const CustomMetric_MeasurementUnit CustomMetric::MILES;
const CustomMetric_MeasurementUnit CustomMetric::MILLISECONDS;
const CustomMetric_MeasurementUnit CustomMetric::SECONDS;
const CustomMetric_MeasurementUnit CustomMetric::MINUTES;
const CustomMetric_MeasurementUnit CustomMetric::HOURS;
const CustomMetric_MeasurementUnit CustomMetric::MeasurementUnit_MIN;
const CustomMetric_MeasurementUnit CustomMetric::MeasurementUnit_MAX;
const int CustomMetric::MeasurementUnit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CustomMetric_MetricScope_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[2];
}
bool CustomMetric_MetricScope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CustomMetric_MetricScope CustomMetric::METRIC_SCOPE_UNSPECIFIED;
const CustomMetric_MetricScope CustomMetric::EVENT;
const CustomMetric_MetricScope CustomMetric::MetricScope_MIN;
const CustomMetric_MetricScope CustomMetric::MetricScope_MAX;
const int CustomMetric::MetricScope_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MaximumUserAccess_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[3];
}
bool MaximumUserAccess_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* IndustryCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[4];
}
bool IndustryCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[5];
}
bool ActorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[6];
}
bool ActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChangeHistoryResourceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[7];
}
bool ChangeHistoryResourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GoogleSignalsState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[8];
}
bool GoogleSignalsState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GoogleSignalsConsent_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[9];
}
bool GoogleSignalsConsent_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Account::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_Account_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_Account_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class Account::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const Account* msg);
  static const ::google::protobuf::Timestamp& update_time(const Account* msg);
};

const ::google::protobuf::Timestamp&
Account::HasBitSetters::create_time(const Account* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
Account::HasBitSetters::update_time(const Account* msg) {
  return *msg->update_time_;
}
void Account::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void Account::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account::kNameFieldNumber;
const int Account::kCreateTimeFieldNumber;
const int Account::kUpdateTimeFieldNumber;
const int Account::kDisplayNameFieldNumber;
const int Account::kRegionCodeFieldNumber;
const int Account::kDeletedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account::Account()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.Account)
}
Account::Account(const Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  region_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region_code().size() > 0) {
    region_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_code_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  deleted_ = from.deleted_;
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.Account)
}

void Account::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Account_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deleted_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(deleted_));
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.Account)
  SharedDtor();
}

void Account::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Account& Account::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Account_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  deleted_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Account::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Account*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Account.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string display_name = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Account.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string region_code = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Account.region_code");
        object = msg->mutable_region_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool deleted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_deleted(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.Account)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Account.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 4 [(.google.api.field_behavior) = REQUIRED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Account.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region_code().data(), static_cast<int>(this->region_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Account.region_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool deleted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.Account)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Account.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::update_time(this), output);
  }

  // string display_name = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Account.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->display_name(), output);
  }

  // string region_code = 5;
  if (this->region_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_code().data(), static_cast<int>(this->region_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Account.region_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->region_code(), output);
  }

  // bool deleted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->deleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->deleted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.Account)
}

::google::protobuf::uint8* Account::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Account.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::update_time(this), target);
  }

  // string display_name = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Account.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->display_name(), target);
  }

  // string region_code = 5;
  if (this->region_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region_code().data(), static_cast<int>(this->region_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Account.region_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->region_code(), target);
  }

  // bool deleted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->deleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->deleted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.Account)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 4 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string region_code = 5;
  if (this->region_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region_code());
  }

  // .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // bool deleted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->deleted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::google::protobuf::DynamicCastToGenerated<Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.region_code().size() > 0) {

    region_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_code_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.deleted() != 0) {
    set_deleted(from.deleted());
  }
}

void Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::Swap(Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account::InternalSwap(Account* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_code_.Swap(&other->region_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(deleted_, other->deleted_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Property::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_Property_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_Property_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_Property_default_instance_._instance.get_mutable()->delete_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_Property_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class Property::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const Property* msg);
  static const ::google::protobuf::Timestamp& update_time(const Property* msg);
  static const ::google::protobuf::Timestamp& delete_time(const Property* msg);
  static const ::google::protobuf::Timestamp& expire_time(const Property* msg);
};

const ::google::protobuf::Timestamp&
Property::HasBitSetters::create_time(const Property* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
Property::HasBitSetters::update_time(const Property* msg) {
  return *msg->update_time_;
}
const ::google::protobuf::Timestamp&
Property::HasBitSetters::delete_time(const Property* msg) {
  return *msg->delete_time_;
}
const ::google::protobuf::Timestamp&
Property::HasBitSetters::expire_time(const Property* msg) {
  return *msg->expire_time_;
}
void Property::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void Property::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
void Property::clear_delete_time() {
  if (GetArenaNoVirtual() == nullptr && delete_time_ != nullptr) {
    delete delete_time_;
  }
  delete_time_ = nullptr;
}
void Property::clear_expire_time() {
  if (GetArenaNoVirtual() == nullptr && expire_time_ != nullptr) {
    delete expire_time_;
  }
  expire_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kCreateTimeFieldNumber;
const int Property::kUpdateTimeFieldNumber;
const int Property::kParentFieldNumber;
const int Property::kDisplayNameFieldNumber;
const int Property::kIndustryCategoryFieldNumber;
const int Property::kTimeZoneFieldNumber;
const int Property::kCurrencyCodeFieldNumber;
const int Property::kDeleteTimeFieldNumber;
const int Property::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.Property)
}
Property::Property(const Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time_zone().size() > 0) {
    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  currency_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_code().size() > 0) {
    currency_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_code_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  if (from.has_delete_time()) {
    delete_time_ = new ::google::protobuf::Timestamp(*from.delete_time_);
  } else {
    delete_time_ = nullptr;
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = nullptr;
  }
  industry_category_ = from.industry_category_;
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.Property)
}

void Property::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Property_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&industry_category_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(industry_category_));
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (this != internal_default_instance()) delete delete_time_;
  if (this != internal_default_instance()) delete expire_time_;
}

void Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Property& Property::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Property_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && delete_time_ != nullptr) {
    delete delete_time_;
  }
  delete_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && expire_time_ != nullptr) {
    delete expire_time_;
  }
  expire_time_ = nullptr;
  industry_category_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Property::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Property*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Property.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Property.parent");
        object = msg->mutable_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string display_name = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Property.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.analytics.admin.v1alpha.IndustryCategory industry_category = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_industry_category(static_cast<::google::analytics::admin::v1alpha::IndustryCategory>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string time_zone = 7 [(.google.api.field_behavior) = REQUIRED];
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Property.time_zone");
        object = msg->mutable_time_zone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string currency_code = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.Property.currency_code");
        object = msg->mutable_currency_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp delete_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_delete_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp expire_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_expire_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.Property)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Property.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Property.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 5 [(.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Property.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.IndustryCategory industry_category = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_industry_category(static_cast< ::google::analytics::admin::v1alpha::IndustryCategory >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time_zone = 7 [(.google.api.field_behavior) = REQUIRED];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_zone().data(), static_cast<int>(this->time_zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Property.time_zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_code = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_code().data(), static_cast<int>(this->currency_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.Property.currency_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp delete_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.Property)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parent(), output);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update_time(this), output);
  }

  // string display_name = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->display_name(), output);
  }

  // .google.analytics.admin.v1alpha.IndustryCategory industry_category = 6;
  if (this->industry_category() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->industry_category(), output);
  }

  // string time_zone = 7 [(.google.api.field_behavior) = REQUIRED];
  if (this->time_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_zone().data(), static_cast<int>(this->time_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.time_zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->time_zone(), output);
  }

  // string currency_code = 8;
  if (this->currency_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_code().data(), static_cast<int>(this->currency_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.currency_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->currency_code(), output);
  }

  // .google.protobuf.Timestamp delete_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_delete_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::delete_time(this), output);
  }

  // .google.protobuf.Timestamp expire_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::expire_time(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parent(), target);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update_time(this), target);
  }

  // string display_name = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->display_name(), target);
  }

  // .google.analytics.admin.v1alpha.IndustryCategory industry_category = 6;
  if (this->industry_category() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->industry_category(), target);
  }

  // string time_zone = 7 [(.google.api.field_behavior) = REQUIRED];
  if (this->time_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_zone().data(), static_cast<int>(this->time_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.time_zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->time_zone(), target);
  }

  // string currency_code = 8;
  if (this->currency_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_code().data(), static_cast<int>(this->currency_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.Property.currency_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->currency_code(), target);
  }

  // .google.protobuf.Timestamp delete_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_delete_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::delete_time(this), target);
  }

  // .google.protobuf.Timestamp expire_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::expire_time(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.Property)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string display_name = 5 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string time_zone = 7 [(.google.api.field_behavior) = REQUIRED];
  if (this->time_zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_zone());
  }

  // string currency_code = 8;
  if (this->currency_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_code());
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.protobuf.Timestamp delete_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_delete_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *delete_time_);
  }

  // .google.protobuf.Timestamp expire_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  // .google.analytics.admin.v1alpha.IndustryCategory industry_category = 6;
  if (this->industry_category() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->industry_category());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::google::protobuf::DynamicCastToGenerated<Property>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.time_zone().size() > 0) {

    time_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_zone_);
  }
  if (from.currency_code().size() > 0) {

    currency_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_code_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.has_delete_time()) {
    mutable_delete_time()->::google::protobuf::Timestamp::MergeFrom(from.delete_time());
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
  if (from.industry_category() != 0) {
    set_industry_category(from.industry_category());
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_zone_.Swap(&other->time_zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_code_.Swap(&other->currency_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(delete_time_, other->delete_time_);
  swap(expire_time_, other->expire_time_);
  swap(industry_category_, other->industry_category_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AndroidAppDataStream::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_AndroidAppDataStream_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_AndroidAppDataStream_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class AndroidAppDataStream::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const AndroidAppDataStream* msg);
  static const ::google::protobuf::Timestamp& update_time(const AndroidAppDataStream* msg);
};

const ::google::protobuf::Timestamp&
AndroidAppDataStream::HasBitSetters::create_time(const AndroidAppDataStream* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
AndroidAppDataStream::HasBitSetters::update_time(const AndroidAppDataStream* msg) {
  return *msg->update_time_;
}
void AndroidAppDataStream::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void AndroidAppDataStream::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AndroidAppDataStream::kNameFieldNumber;
const int AndroidAppDataStream::kFirebaseAppIdFieldNumber;
const int AndroidAppDataStream::kCreateTimeFieldNumber;
const int AndroidAppDataStream::kUpdateTimeFieldNumber;
const int AndroidAppDataStream::kPackageNameFieldNumber;
const int AndroidAppDataStream::kDisplayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AndroidAppDataStream::AndroidAppDataStream()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.AndroidAppDataStream)
}
AndroidAppDataStream::AndroidAppDataStream(const AndroidAppDataStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  firebase_app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.firebase_app_id().size() > 0) {
    firebase_app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firebase_app_id_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_name().size() > 0) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.AndroidAppDataStream)
}

void AndroidAppDataStream::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
}

AndroidAppDataStream::~AndroidAppDataStream() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.AndroidAppDataStream)
  SharedDtor();
}

void AndroidAppDataStream::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void AndroidAppDataStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AndroidAppDataStream& AndroidAppDataStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AndroidAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void AndroidAppDataStream::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AndroidAppDataStream::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AndroidAppDataStream*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AndroidAppDataStream.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AndroidAppDataStream.firebase_app_id");
        object = msg->mutable_firebase_app_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string package_name = 5 [(.google.api.field_behavior) = IMMUTABLE];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AndroidAppDataStream.package_name");
        object = msg->mutable_package_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AndroidAppDataStream.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AndroidAppDataStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AndroidAppDataStream.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firebase_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AndroidAppDataStream.firebase_app_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_name = 5 [(.google.api.field_behavior) = IMMUTABLE];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AndroidAppDataStream.package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AndroidAppDataStream.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.AndroidAppDataStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.AndroidAppDataStream)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AndroidAppDataStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.firebase_app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->firebase_app_id(), output);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update_time(this), output);
  }

  // string package_name = 5 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->package_name(), output);
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->display_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.AndroidAppDataStream)
}

::google::protobuf::uint8* AndroidAppDataStream::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.firebase_app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->firebase_app_id(), target);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update_time(this), target);
  }

  // string package_name = 5 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->package_name(), target);
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AndroidAppDataStream.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->display_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.AndroidAppDataStream)
  return target;
}

size_t AndroidAppDataStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firebase_app_id());
  }

  // string package_name = 5 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AndroidAppDataStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  GOOGLE_DCHECK_NE(&from, this);
  const AndroidAppDataStream* source =
      ::google::protobuf::DynamicCastToGenerated<AndroidAppDataStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.AndroidAppDataStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.AndroidAppDataStream)
    MergeFrom(*source);
  }
}

void AndroidAppDataStream::MergeFrom(const AndroidAppDataStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.firebase_app_id().size() > 0) {

    firebase_app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firebase_app_id_);
  }
  if (from.package_name().size() > 0) {

    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
}

void AndroidAppDataStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AndroidAppDataStream::CopyFrom(const AndroidAppDataStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.AndroidAppDataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidAppDataStream::IsInitialized() const {
  return true;
}

void AndroidAppDataStream::Swap(AndroidAppDataStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AndroidAppDataStream::InternalSwap(AndroidAppDataStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  firebase_app_id_.Swap(&other->firebase_app_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_name_.Swap(&other->package_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
}

::google::protobuf::Metadata AndroidAppDataStream::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IosAppDataStream::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_IosAppDataStream_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_IosAppDataStream_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class IosAppDataStream::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const IosAppDataStream* msg);
  static const ::google::protobuf::Timestamp& update_time(const IosAppDataStream* msg);
};

const ::google::protobuf::Timestamp&
IosAppDataStream::HasBitSetters::create_time(const IosAppDataStream* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
IosAppDataStream::HasBitSetters::update_time(const IosAppDataStream* msg) {
  return *msg->update_time_;
}
void IosAppDataStream::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void IosAppDataStream::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IosAppDataStream::kNameFieldNumber;
const int IosAppDataStream::kFirebaseAppIdFieldNumber;
const int IosAppDataStream::kCreateTimeFieldNumber;
const int IosAppDataStream::kUpdateTimeFieldNumber;
const int IosAppDataStream::kBundleIdFieldNumber;
const int IosAppDataStream::kDisplayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IosAppDataStream::IosAppDataStream()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.IosAppDataStream)
}
IosAppDataStream::IosAppDataStream(const IosAppDataStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  firebase_app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.firebase_app_id().size() > 0) {
    firebase_app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firebase_app_id_);
  }
  bundle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bundle_id().size() > 0) {
    bundle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundle_id_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.IosAppDataStream)
}

void IosAppDataStream::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
}

IosAppDataStream::~IosAppDataStream() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.IosAppDataStream)
  SharedDtor();
}

void IosAppDataStream::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void IosAppDataStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IosAppDataStream& IosAppDataStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IosAppDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void IosAppDataStream::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.IosAppDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IosAppDataStream::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IosAppDataStream*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.IosAppDataStream.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.IosAppDataStream.firebase_app_id");
        object = msg->mutable_firebase_app_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string bundle_id = 5 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.IosAppDataStream.bundle_id");
        object = msg->mutable_bundle_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.IosAppDataStream.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IosAppDataStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.IosAppDataStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.IosAppDataStream.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firebase_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.IosAppDataStream.firebase_app_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bundle_id = 5 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bundle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bundle_id().data(), static_cast<int>(this->bundle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.IosAppDataStream.bundle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.IosAppDataStream.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.IosAppDataStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.IosAppDataStream)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IosAppDataStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.IosAppDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.firebase_app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->firebase_app_id(), output);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::update_time(this), output);
  }

  // string bundle_id = 5 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
  if (this->bundle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bundle_id().data(), static_cast<int>(this->bundle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.bundle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bundle_id(), output);
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->display_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.IosAppDataStream)
}

::google::protobuf::uint8* IosAppDataStream::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.IosAppDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.firebase_app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->firebase_app_id(), target);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::update_time(this), target);
  }

  // string bundle_id = 5 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
  if (this->bundle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bundle_id().data(), static_cast<int>(this->bundle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.bundle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bundle_id(), target);
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.IosAppDataStream.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->display_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.IosAppDataStream)
  return target;
}

size_t IosAppDataStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.IosAppDataStream)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string firebase_app_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firebase_app_id());
  }

  // string bundle_id = 5 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED];
  if (this->bundle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bundle_id());
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IosAppDataStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.IosAppDataStream)
  GOOGLE_DCHECK_NE(&from, this);
  const IosAppDataStream* source =
      ::google::protobuf::DynamicCastToGenerated<IosAppDataStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.IosAppDataStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.IosAppDataStream)
    MergeFrom(*source);
  }
}

void IosAppDataStream::MergeFrom(const IosAppDataStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.IosAppDataStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.firebase_app_id().size() > 0) {

    firebase_app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firebase_app_id_);
  }
  if (from.bundle_id().size() > 0) {

    bundle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundle_id_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
}

void IosAppDataStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.IosAppDataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IosAppDataStream::CopyFrom(const IosAppDataStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.IosAppDataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IosAppDataStream::IsInitialized() const {
  return true;
}

void IosAppDataStream::Swap(IosAppDataStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IosAppDataStream::InternalSwap(IosAppDataStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  firebase_app_id_.Swap(&other->firebase_app_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bundle_id_.Swap(&other->bundle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
}

::google::protobuf::Metadata IosAppDataStream::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WebDataStream::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_WebDataStream_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_WebDataStream_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class WebDataStream::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const WebDataStream* msg);
  static const ::google::protobuf::Timestamp& update_time(const WebDataStream* msg);
};

const ::google::protobuf::Timestamp&
WebDataStream::HasBitSetters::create_time(const WebDataStream* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
WebDataStream::HasBitSetters::update_time(const WebDataStream* msg) {
  return *msg->update_time_;
}
void WebDataStream::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void WebDataStream::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebDataStream::kNameFieldNumber;
const int WebDataStream::kMeasurementIdFieldNumber;
const int WebDataStream::kFirebaseAppIdFieldNumber;
const int WebDataStream::kCreateTimeFieldNumber;
const int WebDataStream::kUpdateTimeFieldNumber;
const int WebDataStream::kDefaultUriFieldNumber;
const int WebDataStream::kDisplayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebDataStream::WebDataStream()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.WebDataStream)
}
WebDataStream::WebDataStream(const WebDataStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  measurement_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.measurement_id().size() > 0) {
    measurement_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.measurement_id_);
  }
  firebase_app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.firebase_app_id().size() > 0) {
    firebase_app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firebase_app_id_);
  }
  default_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_uri().size() > 0) {
    default_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_uri_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.WebDataStream)
}

void WebDataStream::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  measurement_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(update_time_));
}

WebDataStream::~WebDataStream() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.WebDataStream)
  SharedDtor();
}

void WebDataStream::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  measurement_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void WebDataStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WebDataStream& WebDataStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WebDataStream_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void WebDataStream::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.WebDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  measurement_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firebase_app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WebDataStream::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WebDataStream*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.WebDataStream.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string measurement_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.WebDataStream.measurement_id");
        object = msg->mutable_measurement_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string firebase_app_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.WebDataStream.firebase_app_id");
        object = msg->mutable_firebase_app_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string default_uri = 6 [(.google.api.field_behavior) = IMMUTABLE];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.WebDataStream.default_uri");
        object = msg->mutable_default_uri();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 7 [(.google.api.field_behavior) = REQUIRED];
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.WebDataStream.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WebDataStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.WebDataStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.WebDataStream.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string measurement_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_measurement_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->measurement_id().data(), static_cast<int>(this->measurement_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.WebDataStream.measurement_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string firebase_app_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firebase_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.WebDataStream.firebase_app_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_uri = 6 [(.google.api.field_behavior) = IMMUTABLE];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_uri().data(), static_cast<int>(this->default_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.WebDataStream.default_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 7 [(.google.api.field_behavior) = REQUIRED];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.WebDataStream.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.WebDataStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.WebDataStream)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WebDataStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.WebDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string measurement_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->measurement_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->measurement_id().data(), static_cast<int>(this->measurement_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.measurement_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->measurement_id(), output);
  }

  // string firebase_app_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.firebase_app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->firebase_app_id(), output);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::update_time(this), output);
  }

  // string default_uri = 6 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->default_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_uri().data(), static_cast<int>(this->default_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.default_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->default_uri(), output);
  }

  // string display_name = 7 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->display_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.WebDataStream)
}

::google::protobuf::uint8* WebDataStream::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.WebDataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string measurement_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->measurement_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->measurement_id().data(), static_cast<int>(this->measurement_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.measurement_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->measurement_id(), target);
  }

  // string firebase_app_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firebase_app_id().data(), static_cast<int>(this->firebase_app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.firebase_app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->firebase_app_id(), target);
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::update_time(this), target);
  }

  // string default_uri = 6 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->default_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_uri().data(), static_cast<int>(this->default_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.default_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->default_uri(), target);
  }

  // string display_name = 7 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.WebDataStream.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->display_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.WebDataStream)
  return target;
}

size_t WebDataStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.WebDataStream)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string measurement_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->measurement_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->measurement_id());
  }

  // string firebase_app_id = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->firebase_app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firebase_app_id());
  }

  // string default_uri = 6 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->default_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_uri());
  }

  // string display_name = 7 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // .google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebDataStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.WebDataStream)
  GOOGLE_DCHECK_NE(&from, this);
  const WebDataStream* source =
      ::google::protobuf::DynamicCastToGenerated<WebDataStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.WebDataStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.WebDataStream)
    MergeFrom(*source);
  }
}

void WebDataStream::MergeFrom(const WebDataStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.WebDataStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.measurement_id().size() > 0) {

    measurement_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.measurement_id_);
  }
  if (from.firebase_app_id().size() > 0) {

    firebase_app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firebase_app_id_);
  }
  if (from.default_uri().size() > 0) {

    default_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_uri_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
}

void WebDataStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.WebDataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebDataStream::CopyFrom(const WebDataStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.WebDataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebDataStream::IsInitialized() const {
  return true;
}

void WebDataStream::Swap(WebDataStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebDataStream::InternalSwap(WebDataStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  measurement_id_.Swap(&other->measurement_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  firebase_app_id_.Swap(&other->firebase_app_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_uri_.Swap(&other->default_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
}

::google::protobuf::Metadata WebDataStream::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserLink::InitAsDefaultInstance() {
}
class UserLink::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLink::kNameFieldNumber;
const int UserLink::kEmailAddressFieldNumber;
const int UserLink::kDirectRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLink::UserLink()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.UserLink)
}
UserLink::UserLink(const UserLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      direct_roles_(from.direct_roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email_address().size() > 0) {
    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.UserLink)
}

void UserLink::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserLink::~UserLink() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.UserLink)
  SharedDtor();
}

void UserLink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserLink& UserLink::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void UserLink::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.UserLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  direct_roles_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserLink::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserLink*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.UserLink.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string email_address = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.UserLink.email_address");
        object = msg->mutable_email_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string direct_roles = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.UserLink.direct_roles");
          object = msg->add_direct_roles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.UserLink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.UserLink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email_address = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email_address().data(), static_cast<int>(this->email_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.UserLink.email_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string direct_roles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_direct_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->direct_roles(this->direct_roles_size() - 1).data(),
            static_cast<int>(this->direct_roles(this->direct_roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.UserLink.direct_roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.UserLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.UserLink)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.UserLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.UserLink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string email_address = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->email_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.UserLink.email_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email_address(), output);
  }

  // repeated string direct_roles = 3;
  for (int i = 0, n = this->direct_roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direct_roles(i).data(), static_cast<int>(this->direct_roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.UserLink.direct_roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->direct_roles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.UserLink)
}

::google::protobuf::uint8* UserLink::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.UserLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.UserLink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string email_address = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->email_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.UserLink.email_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email_address(), target);
  }

  // repeated string direct_roles = 3;
  for (int i = 0, n = this->direct_roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direct_roles(i).data(), static_cast<int>(this->direct_roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.UserLink.direct_roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->direct_roles(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.UserLink)
  return target;
}

size_t UserLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.UserLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string direct_roles = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->direct_roles_size());
  for (int i = 0, n = this->direct_roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->direct_roles(i));
  }

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string email_address = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->email_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.UserLink)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLink* source =
      ::google::protobuf::DynamicCastToGenerated<UserLink>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.UserLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.UserLink)
    MergeFrom(*source);
  }
}

void UserLink::MergeFrom(const UserLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.UserLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  direct_roles_.MergeFrom(from.direct_roles_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.email_address().size() > 0) {

    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
}

void UserLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.UserLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLink::CopyFrom(const UserLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.UserLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLink::IsInitialized() const {
  return true;
}

void UserLink::Swap(UserLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLink::InternalSwap(UserLink* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  direct_roles_.InternalSwap(CastToBase(&other->direct_roles_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_address_.Swap(&other->email_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UserLink::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AuditUserLink::InitAsDefaultInstance() {
}
class AuditUserLink::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuditUserLink::kNameFieldNumber;
const int AuditUserLink::kEmailAddressFieldNumber;
const int AuditUserLink::kDirectRolesFieldNumber;
const int AuditUserLink::kEffectiveRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuditUserLink::AuditUserLink()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.AuditUserLink)
}
AuditUserLink::AuditUserLink(const AuditUserLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      direct_roles_(from.direct_roles_),
      effective_roles_(from.effective_roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email_address().size() > 0) {
    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.AuditUserLink)
}

void AuditUserLink::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AuditUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuditUserLink::~AuditUserLink() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.AuditUserLink)
  SharedDtor();
}

void AuditUserLink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuditUserLink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuditUserLink& AuditUserLink::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AuditUserLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void AuditUserLink::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.AuditUserLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  direct_roles_.Clear();
  effective_roles_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AuditUserLink::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AuditUserLink*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AuditUserLink.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string email_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AuditUserLink.email_address");
        object = msg->mutable_email_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string direct_roles = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AuditUserLink.direct_roles");
          object = msg->add_direct_roles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated string effective_roles = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AuditUserLink.effective_roles");
          object = msg->add_effective_roles();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuditUserLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.AuditUserLink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AuditUserLink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email_address().data(), static_cast<int>(this->email_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AuditUserLink.email_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string direct_roles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_direct_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->direct_roles(this->direct_roles_size() - 1).data(),
            static_cast<int>(this->direct_roles(this->direct_roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AuditUserLink.direct_roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string effective_roles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_effective_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->effective_roles(this->effective_roles_size() - 1).data(),
            static_cast<int>(this->effective_roles(this->effective_roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AuditUserLink.effective_roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.AuditUserLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.AuditUserLink)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AuditUserLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.AuditUserLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string email_address = 2;
  if (this->email_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.email_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email_address(), output);
  }

  // repeated string direct_roles = 3;
  for (int i = 0, n = this->direct_roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direct_roles(i).data(), static_cast<int>(this->direct_roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.direct_roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->direct_roles(i), output);
  }

  // repeated string effective_roles = 4;
  for (int i = 0, n = this->effective_roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effective_roles(i).data(), static_cast<int>(this->effective_roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.effective_roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->effective_roles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.AuditUserLink)
}

::google::protobuf::uint8* AuditUserLink::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.AuditUserLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string email_address = 2;
  if (this->email_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.email_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email_address(), target);
  }

  // repeated string direct_roles = 3;
  for (int i = 0, n = this->direct_roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direct_roles(i).data(), static_cast<int>(this->direct_roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.direct_roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->direct_roles(i), target);
  }

  // repeated string effective_roles = 4;
  for (int i = 0, n = this->effective_roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effective_roles(i).data(), static_cast<int>(this->effective_roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AuditUserLink.effective_roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->effective_roles(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.AuditUserLink)
  return target;
}

size_t AuditUserLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.AuditUserLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string direct_roles = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->direct_roles_size());
  for (int i = 0, n = this->direct_roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->direct_roles(i));
  }

  // repeated string effective_roles = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->effective_roles_size());
  for (int i = 0, n = this->effective_roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->effective_roles(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string email_address = 2;
  if (this->email_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuditUserLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.AuditUserLink)
  GOOGLE_DCHECK_NE(&from, this);
  const AuditUserLink* source =
      ::google::protobuf::DynamicCastToGenerated<AuditUserLink>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.AuditUserLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.AuditUserLink)
    MergeFrom(*source);
  }
}

void AuditUserLink::MergeFrom(const AuditUserLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.AuditUserLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  direct_roles_.MergeFrom(from.direct_roles_);
  effective_roles_.MergeFrom(from.effective_roles_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.email_address().size() > 0) {

    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
}

void AuditUserLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.AuditUserLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuditUserLink::CopyFrom(const AuditUserLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.AuditUserLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuditUserLink::IsInitialized() const {
  return true;
}

void AuditUserLink::Swap(AuditUserLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuditUserLink::InternalSwap(AuditUserLink* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  direct_roles_.InternalSwap(CastToBase(&other->direct_roles_));
  effective_roles_.InternalSwap(CastToBase(&other->effective_roles_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_address_.Swap(&other->email_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AuditUserLink::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EnhancedMeasurementSettings::InitAsDefaultInstance() {
}
class EnhancedMeasurementSettings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnhancedMeasurementSettings::kNameFieldNumber;
const int EnhancedMeasurementSettings::kStreamEnabledFieldNumber;
const int EnhancedMeasurementSettings::kPageViewsEnabledFieldNumber;
const int EnhancedMeasurementSettings::kScrollsEnabledFieldNumber;
const int EnhancedMeasurementSettings::kOutboundClicksEnabledFieldNumber;
const int EnhancedMeasurementSettings::kSiteSearchEnabledFieldNumber;
const int EnhancedMeasurementSettings::kVideoEngagementEnabledFieldNumber;
const int EnhancedMeasurementSettings::kFileDownloadsEnabledFieldNumber;
const int EnhancedMeasurementSettings::kPageLoadsEnabledFieldNumber;
const int EnhancedMeasurementSettings::kPageChangesEnabledFieldNumber;
const int EnhancedMeasurementSettings::kSearchQueryParameterFieldNumber;
const int EnhancedMeasurementSettings::kUriQueryParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnhancedMeasurementSettings::EnhancedMeasurementSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
}
EnhancedMeasurementSettings::EnhancedMeasurementSettings(const EnhancedMeasurementSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  search_query_parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.search_query_parameter().size() > 0) {
    search_query_parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_query_parameter_);
  }
  uri_query_parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri_query_parameter().size() > 0) {
    uri_query_parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_query_parameter_);
  }
  ::memcpy(&stream_enabled_, &from.stream_enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_changes_enabled_) -
    reinterpret_cast<char*>(&stream_enabled_)) + sizeof(page_changes_enabled_));
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
}

void EnhancedMeasurementSettings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EnhancedMeasurementSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_query_parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_query_parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stream_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_changes_enabled_) -
      reinterpret_cast<char*>(&stream_enabled_)) + sizeof(page_changes_enabled_));
}

EnhancedMeasurementSettings::~EnhancedMeasurementSettings() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  SharedDtor();
}

void EnhancedMeasurementSettings::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_query_parameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_query_parameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnhancedMeasurementSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnhancedMeasurementSettings& EnhancedMeasurementSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EnhancedMeasurementSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void EnhancedMeasurementSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_query_parameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_query_parameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stream_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_changes_enabled_) -
      reinterpret_cast<char*>(&stream_enabled_)) + sizeof(page_changes_enabled_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EnhancedMeasurementSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EnhancedMeasurementSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.EnhancedMeasurementSettings.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool stream_enabled = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stream_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool page_views_enabled = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_page_views_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool scrolls_enabled = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_scrolls_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool outbound_clicks_enabled = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_outbound_clicks_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool site_search_enabled = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_site_search_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool video_engagement_enabled = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_video_engagement_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool file_downloads_enabled = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_file_downloads_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool page_loads_enabled = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_page_loads_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool page_changes_enabled = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_page_changes_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string search_query_parameter = 16 [(.google.api.field_behavior) = REQUIRED];
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.EnhancedMeasurementSettings.search_query_parameter");
        object = msg->mutable_search_query_parameter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string uri_query_parameter = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.EnhancedMeasurementSettings.uri_query_parameter");
        object = msg->mutable_uri_query_parameter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EnhancedMeasurementSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stream_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stream_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool page_views_enabled = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &page_views_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool scrolls_enabled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scrolls_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool outbound_clicks_enabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &outbound_clicks_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool site_search_enabled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &site_search_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool video_engagement_enabled = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &video_engagement_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool file_downloads_enabled = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &file_downloads_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool page_loads_enabled = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &page_loads_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool page_changes_enabled = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &page_changes_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string search_query_parameter = 16 [(.google.api.field_behavior) = REQUIRED];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_query_parameter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_query_parameter().data(), static_cast<int>(this->search_query_parameter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.search_query_parameter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri_query_parameter = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri_query_parameter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri_query_parameter().data(), static_cast<int>(this->uri_query_parameter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.uri_query_parameter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EnhancedMeasurementSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool stream_enabled = 2;
  if (this->stream_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stream_enabled(), output);
  }

  // bool page_views_enabled = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->page_views_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->page_views_enabled(), output);
  }

  // bool scrolls_enabled = 4;
  if (this->scrolls_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->scrolls_enabled(), output);
  }

  // bool outbound_clicks_enabled = 5;
  if (this->outbound_clicks_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->outbound_clicks_enabled(), output);
  }

  // bool site_search_enabled = 7;
  if (this->site_search_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->site_search_enabled(), output);
  }

  // bool video_engagement_enabled = 9;
  if (this->video_engagement_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->video_engagement_enabled(), output);
  }

  // bool file_downloads_enabled = 10;
  if (this->file_downloads_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->file_downloads_enabled(), output);
  }

  // bool page_loads_enabled = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->page_loads_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->page_loads_enabled(), output);
  }

  // bool page_changes_enabled = 13;
  if (this->page_changes_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->page_changes_enabled(), output);
  }

  // string search_query_parameter = 16 [(.google.api.field_behavior) = REQUIRED];
  if (this->search_query_parameter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_query_parameter().data(), static_cast<int>(this->search_query_parameter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.search_query_parameter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->search_query_parameter(), output);
  }

  // string uri_query_parameter = 17;
  if (this->uri_query_parameter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_query_parameter().data(), static_cast<int>(this->uri_query_parameter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.uri_query_parameter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->uri_query_parameter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
}

::google::protobuf::uint8* EnhancedMeasurementSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool stream_enabled = 2;
  if (this->stream_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stream_enabled(), target);
  }

  // bool page_views_enabled = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->page_views_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->page_views_enabled(), target);
  }

  // bool scrolls_enabled = 4;
  if (this->scrolls_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->scrolls_enabled(), target);
  }

  // bool outbound_clicks_enabled = 5;
  if (this->outbound_clicks_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->outbound_clicks_enabled(), target);
  }

  // bool site_search_enabled = 7;
  if (this->site_search_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->site_search_enabled(), target);
  }

  // bool video_engagement_enabled = 9;
  if (this->video_engagement_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->video_engagement_enabled(), target);
  }

  // bool file_downloads_enabled = 10;
  if (this->file_downloads_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->file_downloads_enabled(), target);
  }

  // bool page_loads_enabled = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->page_loads_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->page_loads_enabled(), target);
  }

  // bool page_changes_enabled = 13;
  if (this->page_changes_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->page_changes_enabled(), target);
  }

  // string search_query_parameter = 16 [(.google.api.field_behavior) = REQUIRED];
  if (this->search_query_parameter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_query_parameter().data(), static_cast<int>(this->search_query_parameter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.search_query_parameter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->search_query_parameter(), target);
  }

  // string uri_query_parameter = 17;
  if (this->uri_query_parameter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_query_parameter().data(), static_cast<int>(this->uri_query_parameter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.EnhancedMeasurementSettings.uri_query_parameter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->uri_query_parameter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  return target;
}

size_t EnhancedMeasurementSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string search_query_parameter = 16 [(.google.api.field_behavior) = REQUIRED];
  if (this->search_query_parameter().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_query_parameter());
  }

  // string uri_query_parameter = 17;
  if (this->uri_query_parameter().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri_query_parameter());
  }

  // bool stream_enabled = 2;
  if (this->stream_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool page_views_enabled = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->page_views_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool scrolls_enabled = 4;
  if (this->scrolls_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool outbound_clicks_enabled = 5;
  if (this->outbound_clicks_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool site_search_enabled = 7;
  if (this->site_search_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool video_engagement_enabled = 9;
  if (this->video_engagement_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool file_downloads_enabled = 10;
  if (this->file_downloads_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool page_loads_enabled = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->page_loads_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool page_changes_enabled = 13;
  if (this->page_changes_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnhancedMeasurementSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const EnhancedMeasurementSettings* source =
      ::google::protobuf::DynamicCastToGenerated<EnhancedMeasurementSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
    MergeFrom(*source);
  }
}

void EnhancedMeasurementSettings::MergeFrom(const EnhancedMeasurementSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.search_query_parameter().size() > 0) {

    search_query_parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_query_parameter_);
  }
  if (from.uri_query_parameter().size() > 0) {

    uri_query_parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_query_parameter_);
  }
  if (from.stream_enabled() != 0) {
    set_stream_enabled(from.stream_enabled());
  }
  if (from.page_views_enabled() != 0) {
    set_page_views_enabled(from.page_views_enabled());
  }
  if (from.scrolls_enabled() != 0) {
    set_scrolls_enabled(from.scrolls_enabled());
  }
  if (from.outbound_clicks_enabled() != 0) {
    set_outbound_clicks_enabled(from.outbound_clicks_enabled());
  }
  if (from.site_search_enabled() != 0) {
    set_site_search_enabled(from.site_search_enabled());
  }
  if (from.video_engagement_enabled() != 0) {
    set_video_engagement_enabled(from.video_engagement_enabled());
  }
  if (from.file_downloads_enabled() != 0) {
    set_file_downloads_enabled(from.file_downloads_enabled());
  }
  if (from.page_loads_enabled() != 0) {
    set_page_loads_enabled(from.page_loads_enabled());
  }
  if (from.page_changes_enabled() != 0) {
    set_page_changes_enabled(from.page_changes_enabled());
  }
}

void EnhancedMeasurementSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnhancedMeasurementSettings::CopyFrom(const EnhancedMeasurementSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.EnhancedMeasurementSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnhancedMeasurementSettings::IsInitialized() const {
  return true;
}

void EnhancedMeasurementSettings::Swap(EnhancedMeasurementSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnhancedMeasurementSettings::InternalSwap(EnhancedMeasurementSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  search_query_parameter_.Swap(&other->search_query_parameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uri_query_parameter_.Swap(&other->uri_query_parameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stream_enabled_, other->stream_enabled_);
  swap(page_views_enabled_, other->page_views_enabled_);
  swap(scrolls_enabled_, other->scrolls_enabled_);
  swap(outbound_clicks_enabled_, other->outbound_clicks_enabled_);
  swap(site_search_enabled_, other->site_search_enabled_);
  swap(video_engagement_enabled_, other->video_engagement_enabled_);
  swap(file_downloads_enabled_, other->file_downloads_enabled_);
  swap(page_loads_enabled_, other->page_loads_enabled_);
  swap(page_changes_enabled_, other->page_changes_enabled_);
}

::google::protobuf::Metadata EnhancedMeasurementSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FirebaseLink::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_FirebaseLink_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class FirebaseLink::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const FirebaseLink* msg);
};

const ::google::protobuf::Timestamp&
FirebaseLink::HasBitSetters::create_time(const FirebaseLink* msg) {
  return *msg->create_time_;
}
void FirebaseLink::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FirebaseLink::kNameFieldNumber;
const int FirebaseLink::kProjectFieldNumber;
const int FirebaseLink::kCreateTimeFieldNumber;
const int FirebaseLink::kMaximumUserAccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FirebaseLink::FirebaseLink()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.FirebaseLink)
}
FirebaseLink::FirebaseLink(const FirebaseLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  maximum_user_access_ = from.maximum_user_access_;
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.FirebaseLink)
}

void FirebaseLink::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_user_access_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(maximum_user_access_));
}

FirebaseLink::~FirebaseLink() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.FirebaseLink)
  SharedDtor();
}

void FirebaseLink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
}

void FirebaseLink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FirebaseLink& FirebaseLink::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FirebaseLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void FirebaseLink::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.FirebaseLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  maximum_user_access_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FirebaseLink::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FirebaseLink*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.FirebaseLink.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string project = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.FirebaseLink.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.MaximumUserAccess maximum_user_access = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_maximum_user_access(static_cast<::google::analytics::admin::v1alpha::MaximumUserAccess>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FirebaseLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.FirebaseLink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.FirebaseLink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.FirebaseLink.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.MaximumUserAccess maximum_user_access = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_maximum_user_access(static_cast< ::google::analytics::admin::v1alpha::MaximumUserAccess >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.FirebaseLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.FirebaseLink)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FirebaseLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.FirebaseLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.FirebaseLink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string project = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.FirebaseLink.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project(), output);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::create_time(this), output);
  }

  // .google.analytics.admin.v1alpha.MaximumUserAccess maximum_user_access = 4;
  if (this->maximum_user_access() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->maximum_user_access(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.FirebaseLink)
}

::google::protobuf::uint8* FirebaseLink::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.FirebaseLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.FirebaseLink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string project = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.FirebaseLink.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project(), target);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::create_time(this), target);
  }

  // .google.analytics.admin.v1alpha.MaximumUserAccess maximum_user_access = 4;
  if (this->maximum_user_access() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->maximum_user_access(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.FirebaseLink)
  return target;
}

size_t FirebaseLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.FirebaseLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string project = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.analytics.admin.v1alpha.MaximumUserAccess maximum_user_access = 4;
  if (this->maximum_user_access() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->maximum_user_access());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FirebaseLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.FirebaseLink)
  GOOGLE_DCHECK_NE(&from, this);
  const FirebaseLink* source =
      ::google::protobuf::DynamicCastToGenerated<FirebaseLink>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.FirebaseLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.FirebaseLink)
    MergeFrom(*source);
  }
}

void FirebaseLink::MergeFrom(const FirebaseLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.FirebaseLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.maximum_user_access() != 0) {
    set_maximum_user_access(from.maximum_user_access());
  }
}

void FirebaseLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.FirebaseLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FirebaseLink::CopyFrom(const FirebaseLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.FirebaseLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FirebaseLink::IsInitialized() const {
  return true;
}

void FirebaseLink::Swap(FirebaseLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FirebaseLink::InternalSwap(FirebaseLink* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(maximum_user_access_, other->maximum_user_access_);
}

::google::protobuf::Metadata FirebaseLink::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GlobalSiteTag::InitAsDefaultInstance() {
}
class GlobalSiteTag::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalSiteTag::kNameFieldNumber;
const int GlobalSiteTag::kSnippetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalSiteTag::GlobalSiteTag()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.GlobalSiteTag)
}
GlobalSiteTag::GlobalSiteTag(const GlobalSiteTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.snippet().size() > 0) {
    snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.GlobalSiteTag)
}

void GlobalSiteTag::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GlobalSiteTag_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GlobalSiteTag::~GlobalSiteTag() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.GlobalSiteTag)
  SharedDtor();
}

void GlobalSiteTag::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GlobalSiteTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalSiteTag& GlobalSiteTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GlobalSiteTag_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void GlobalSiteTag::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GlobalSiteTag::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GlobalSiteTag*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.GlobalSiteTag.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string snippet = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.GlobalSiteTag.snippet");
        object = msg->mutable_snippet();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GlobalSiteTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.GlobalSiteTag.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string snippet = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snippet()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snippet().data(), static_cast<int>(this->snippet().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.GlobalSiteTag.snippet"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.GlobalSiteTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.GlobalSiteTag)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GlobalSiteTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GlobalSiteTag.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string snippet = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->snippet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GlobalSiteTag.snippet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->snippet(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.GlobalSiteTag)
}

::google::protobuf::uint8* GlobalSiteTag::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GlobalSiteTag.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string snippet = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->snippet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GlobalSiteTag.snippet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->snippet(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.GlobalSiteTag)
  return target;
}

size_t GlobalSiteTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string snippet = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->snippet().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snippet());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalSiteTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalSiteTag* source =
      ::google::protobuf::DynamicCastToGenerated<GlobalSiteTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.GlobalSiteTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.GlobalSiteTag)
    MergeFrom(*source);
  }
}

void GlobalSiteTag::MergeFrom(const GlobalSiteTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.snippet().size() > 0) {

    snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
  }
}

void GlobalSiteTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalSiteTag::CopyFrom(const GlobalSiteTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.GlobalSiteTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalSiteTag::IsInitialized() const {
  return true;
}

void GlobalSiteTag::Swap(GlobalSiteTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalSiteTag::InternalSwap(GlobalSiteTag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  snippet_.Swap(&other->snippet_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GlobalSiteTag::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GoogleAdsLink::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_GoogleAdsLink_default_instance_._instance.get_mutable()->ads_personalization_enabled_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::google::analytics::admin::v1alpha::_GoogleAdsLink_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::analytics::admin::v1alpha::_GoogleAdsLink_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class GoogleAdsLink::HasBitSetters {
 public:
  static const ::google::protobuf::BoolValue& ads_personalization_enabled(const GoogleAdsLink* msg);
  static const ::google::protobuf::Timestamp& create_time(const GoogleAdsLink* msg);
  static const ::google::protobuf::Timestamp& update_time(const GoogleAdsLink* msg);
};

const ::google::protobuf::BoolValue&
GoogleAdsLink::HasBitSetters::ads_personalization_enabled(const GoogleAdsLink* msg) {
  return *msg->ads_personalization_enabled_;
}
const ::google::protobuf::Timestamp&
GoogleAdsLink::HasBitSetters::create_time(const GoogleAdsLink* msg) {
  return *msg->create_time_;
}
const ::google::protobuf::Timestamp&
GoogleAdsLink::HasBitSetters::update_time(const GoogleAdsLink* msg) {
  return *msg->update_time_;
}
void GoogleAdsLink::clear_ads_personalization_enabled() {
  if (GetArenaNoVirtual() == nullptr && ads_personalization_enabled_ != nullptr) {
    delete ads_personalization_enabled_;
  }
  ads_personalization_enabled_ = nullptr;
}
void GoogleAdsLink::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void GoogleAdsLink::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoogleAdsLink::kNameFieldNumber;
const int GoogleAdsLink::kCustomerIdFieldNumber;
const int GoogleAdsLink::kCanManageClientsFieldNumber;
const int GoogleAdsLink::kAdsPersonalizationEnabledFieldNumber;
const int GoogleAdsLink::kEmailAddressFieldNumber;
const int GoogleAdsLink::kCreateTimeFieldNumber;
const int GoogleAdsLink::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoogleAdsLink::GoogleAdsLink()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.GoogleAdsLink)
}
GoogleAdsLink::GoogleAdsLink(const GoogleAdsLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  customer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_id().size() > 0) {
    customer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_id_);
  }
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email_address().size() > 0) {
    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  if (from.has_ads_personalization_enabled()) {
    ads_personalization_enabled_ = new ::google::protobuf::BoolValue(*from.ads_personalization_enabled_);
  } else {
    ads_personalization_enabled_ = nullptr;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  can_manage_clients_ = from.can_manage_clients_;
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.GoogleAdsLink)
}

void GoogleAdsLink::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ads_personalization_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_manage_clients_) -
      reinterpret_cast<char*>(&ads_personalization_enabled_)) + sizeof(can_manage_clients_));
}

GoogleAdsLink::~GoogleAdsLink() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.GoogleAdsLink)
  SharedDtor();
}

void GoogleAdsLink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ads_personalization_enabled_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void GoogleAdsLink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoogleAdsLink& GoogleAdsLink::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GoogleAdsLink_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void GoogleAdsLink::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && ads_personalization_enabled_ != nullptr) {
    delete ads_personalization_enabled_;
  }
  ads_personalization_enabled_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  can_manage_clients_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GoogleAdsLink::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GoogleAdsLink*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.GoogleAdsLink.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string customer_id = 3 [(.google.api.field_behavior) = IMMUTABLE];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.GoogleAdsLink.customer_id");
        object = msg->mutable_customer_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool can_manage_clients = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_can_manage_clients(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.BoolValue ads_personalization_enabled = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BoolValue::_InternalParse;
        object = msg->mutable_ads_personalization_enabled();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string email_address = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.GoogleAdsLink.email_address");
        object = msg->mutable_email_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_update_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GoogleAdsLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.GoogleAdsLink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_id = 3 [(.google.api.field_behavior) = IMMUTABLE];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_id().data(), static_cast<int>(this->customer_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.GoogleAdsLink.customer_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool can_manage_clients = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_manage_clients_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue ads_personalization_enabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ads_personalization_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email_address = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email_address().data(), static_cast<int>(this->email_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.GoogleAdsLink.email_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.GoogleAdsLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.GoogleAdsLink)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GoogleAdsLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleAdsLink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string customer_id = 3 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->customer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_id().data(), static_cast<int>(this->customer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleAdsLink.customer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->customer_id(), output);
  }

  // bool can_manage_clients = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->can_manage_clients() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->can_manage_clients(), output);
  }

  // .google.protobuf.BoolValue ads_personalization_enabled = 5;
  if (this->has_ads_personalization_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::ads_personalization_enabled(this), output);
  }

  // string email_address = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->email_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleAdsLink.email_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->email_address(), output);
  }

  // .google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::create_time(this), output);
  }

  // .google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::update_time(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.GoogleAdsLink)
}

::google::protobuf::uint8* GoogleAdsLink::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleAdsLink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string customer_id = 3 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->customer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_id().data(), static_cast<int>(this->customer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleAdsLink.customer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->customer_id(), target);
  }

  // bool can_manage_clients = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->can_manage_clients() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->can_manage_clients(), target);
  }

  // .google.protobuf.BoolValue ads_personalization_enabled = 5;
  if (this->has_ads_personalization_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::ads_personalization_enabled(this), target);
  }

  // string email_address = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->email_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleAdsLink.email_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->email_address(), target);
  }

  // .google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::create_time(this), target);
  }

  // .google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::update_time(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.GoogleAdsLink)
  return target;
}

size_t GoogleAdsLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string customer_id = 3 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->customer_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_id());
  }

  // string email_address = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->email_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email_address());
  }

  // .google.protobuf.BoolValue ads_personalization_enabled = 5;
  if (this->has_ads_personalization_enabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ads_personalization_enabled_);
  }

  // .google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // bool can_manage_clients = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->can_manage_clients() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoogleAdsLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  GOOGLE_DCHECK_NE(&from, this);
  const GoogleAdsLink* source =
      ::google::protobuf::DynamicCastToGenerated<GoogleAdsLink>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.GoogleAdsLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.GoogleAdsLink)
    MergeFrom(*source);
  }
}

void GoogleAdsLink::MergeFrom(const GoogleAdsLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.customer_id().size() > 0) {

    customer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_id_);
  }
  if (from.email_address().size() > 0) {

    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  if (from.has_ads_personalization_enabled()) {
    mutable_ads_personalization_enabled()->::google::protobuf::BoolValue::MergeFrom(from.ads_personalization_enabled());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.can_manage_clients() != 0) {
    set_can_manage_clients(from.can_manage_clients());
  }
}

void GoogleAdsLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoogleAdsLink::CopyFrom(const GoogleAdsLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.GoogleAdsLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoogleAdsLink::IsInitialized() const {
  return true;
}

void GoogleAdsLink::Swap(GoogleAdsLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoogleAdsLink::InternalSwap(GoogleAdsLink* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  customer_id_.Swap(&other->customer_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_address_.Swap(&other->email_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ads_personalization_enabled_, other->ads_personalization_enabled_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(can_manage_clients_, other->can_manage_clients_);
}

::google::protobuf::Metadata GoogleAdsLink::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DataSharingSettings::InitAsDefaultInstance() {
}
class DataSharingSettings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSharingSettings::kNameFieldNumber;
const int DataSharingSettings::kSharingWithGoogleSupportEnabledFieldNumber;
const int DataSharingSettings::kSharingWithGoogleAssignedSalesEnabledFieldNumber;
const int DataSharingSettings::kSharingWithGoogleAnySalesEnabledFieldNumber;
const int DataSharingSettings::kSharingWithGoogleProductsEnabledFieldNumber;
const int DataSharingSettings::kSharingWithOthersEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSharingSettings::DataSharingSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.DataSharingSettings)
}
DataSharingSettings::DataSharingSettings(const DataSharingSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&sharing_with_google_support_enabled_, &from.sharing_with_google_support_enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&sharing_with_others_enabled_) -
    reinterpret_cast<char*>(&sharing_with_google_support_enabled_)) + sizeof(sharing_with_others_enabled_));
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.DataSharingSettings)
}

void DataSharingSettings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DataSharingSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sharing_with_google_support_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sharing_with_others_enabled_) -
      reinterpret_cast<char*>(&sharing_with_google_support_enabled_)) + sizeof(sharing_with_others_enabled_));
}

DataSharingSettings::~DataSharingSettings() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.DataSharingSettings)
  SharedDtor();
}

void DataSharingSettings::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataSharingSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataSharingSettings& DataSharingSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DataSharingSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void DataSharingSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.DataSharingSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sharing_with_google_support_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sharing_with_others_enabled_) -
      reinterpret_cast<char*>(&sharing_with_google_support_enabled_)) + sizeof(sharing_with_others_enabled_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DataSharingSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DataSharingSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.DataSharingSettings.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool sharing_with_google_support_enabled = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sharing_with_google_support_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool sharing_with_google_assigned_sales_enabled = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_sharing_with_google_assigned_sales_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool sharing_with_google_any_sales_enabled = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_sharing_with_google_any_sales_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool sharing_with_google_products_enabled = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_sharing_with_google_products_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool sharing_with_others_enabled = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_sharing_with_others_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DataSharingSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.DataSharingSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.DataSharingSettings.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sharing_with_google_support_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sharing_with_google_support_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sharing_with_google_assigned_sales_enabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sharing_with_google_assigned_sales_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sharing_with_google_any_sales_enabled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sharing_with_google_any_sales_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sharing_with_google_products_enabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sharing_with_google_products_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sharing_with_others_enabled = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sharing_with_others_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.DataSharingSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.DataSharingSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DataSharingSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.DataSharingSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.DataSharingSettings.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool sharing_with_google_support_enabled = 2;
  if (this->sharing_with_google_support_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->sharing_with_google_support_enabled(), output);
  }

  // bool sharing_with_google_assigned_sales_enabled = 3;
  if (this->sharing_with_google_assigned_sales_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sharing_with_google_assigned_sales_enabled(), output);
  }

  // bool sharing_with_google_any_sales_enabled = 4;
  if (this->sharing_with_google_any_sales_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sharing_with_google_any_sales_enabled(), output);
  }

  // bool sharing_with_google_products_enabled = 5;
  if (this->sharing_with_google_products_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->sharing_with_google_products_enabled(), output);
  }

  // bool sharing_with_others_enabled = 6;
  if (this->sharing_with_others_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->sharing_with_others_enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.DataSharingSettings)
}

::google::protobuf::uint8* DataSharingSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.DataSharingSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.DataSharingSettings.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool sharing_with_google_support_enabled = 2;
  if (this->sharing_with_google_support_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->sharing_with_google_support_enabled(), target);
  }

  // bool sharing_with_google_assigned_sales_enabled = 3;
  if (this->sharing_with_google_assigned_sales_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sharing_with_google_assigned_sales_enabled(), target);
  }

  // bool sharing_with_google_any_sales_enabled = 4;
  if (this->sharing_with_google_any_sales_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sharing_with_google_any_sales_enabled(), target);
  }

  // bool sharing_with_google_products_enabled = 5;
  if (this->sharing_with_google_products_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->sharing_with_google_products_enabled(), target);
  }

  // bool sharing_with_others_enabled = 6;
  if (this->sharing_with_others_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->sharing_with_others_enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.DataSharingSettings)
  return target;
}

size_t DataSharingSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.DataSharingSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool sharing_with_google_support_enabled = 2;
  if (this->sharing_with_google_support_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool sharing_with_google_assigned_sales_enabled = 3;
  if (this->sharing_with_google_assigned_sales_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool sharing_with_google_any_sales_enabled = 4;
  if (this->sharing_with_google_any_sales_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool sharing_with_google_products_enabled = 5;
  if (this->sharing_with_google_products_enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool sharing_with_others_enabled = 6;
  if (this->sharing_with_others_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSharingSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.DataSharingSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSharingSettings* source =
      ::google::protobuf::DynamicCastToGenerated<DataSharingSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.DataSharingSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.DataSharingSettings)
    MergeFrom(*source);
  }
}

void DataSharingSettings::MergeFrom(const DataSharingSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.DataSharingSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sharing_with_google_support_enabled() != 0) {
    set_sharing_with_google_support_enabled(from.sharing_with_google_support_enabled());
  }
  if (from.sharing_with_google_assigned_sales_enabled() != 0) {
    set_sharing_with_google_assigned_sales_enabled(from.sharing_with_google_assigned_sales_enabled());
  }
  if (from.sharing_with_google_any_sales_enabled() != 0) {
    set_sharing_with_google_any_sales_enabled(from.sharing_with_google_any_sales_enabled());
  }
  if (from.sharing_with_google_products_enabled() != 0) {
    set_sharing_with_google_products_enabled(from.sharing_with_google_products_enabled());
  }
  if (from.sharing_with_others_enabled() != 0) {
    set_sharing_with_others_enabled(from.sharing_with_others_enabled());
  }
}

void DataSharingSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.DataSharingSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSharingSettings::CopyFrom(const DataSharingSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.DataSharingSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSharingSettings::IsInitialized() const {
  return true;
}

void DataSharingSettings::Swap(DataSharingSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSharingSettings::InternalSwap(DataSharingSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sharing_with_google_support_enabled_, other->sharing_with_google_support_enabled_);
  swap(sharing_with_google_assigned_sales_enabled_, other->sharing_with_google_assigned_sales_enabled_);
  swap(sharing_with_google_any_sales_enabled_, other->sharing_with_google_any_sales_enabled_);
  swap(sharing_with_google_products_enabled_, other->sharing_with_google_products_enabled_);
  swap(sharing_with_others_enabled_, other->sharing_with_others_enabled_);
}

::google::protobuf::Metadata DataSharingSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AccountSummary::InitAsDefaultInstance() {
}
class AccountSummary::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountSummary::kNameFieldNumber;
const int AccountSummary::kAccountFieldNumber;
const int AccountSummary::kDisplayNameFieldNumber;
const int AccountSummary::kPropertySummariesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountSummary::AccountSummary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.AccountSummary)
}
AccountSummary::AccountSummary(const AccountSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      property_summaries_(from.property_summaries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.AccountSummary)
}

void AccountSummary::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AccountSummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountSummary::~AccountSummary() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.AccountSummary)
  SharedDtor();
}

void AccountSummary::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountSummary& AccountSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AccountSummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void AccountSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.AccountSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_summaries_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AccountSummary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AccountSummary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AccountSummary.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AccountSummary.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.AccountSummary.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .google.analytics.admin.v1alpha.PropertySummary property_summaries = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::analytics::admin::v1alpha::PropertySummary::_InternalParse;
          object = msg->add_property_summaries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AccountSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.AccountSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AccountSummary.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2 [(.google.api.resource_reference) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AccountSummary.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.AccountSummary.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.analytics.admin.v1alpha.PropertySummary property_summaries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property_summaries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.AccountSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.AccountSummary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AccountSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.AccountSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AccountSummary.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string account = 2 [(.google.api.resource_reference) = {
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AccountSummary.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AccountSummary.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_name(), output);
  }

  // repeated .google.analytics.admin.v1alpha.PropertySummary property_summaries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_summaries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->property_summaries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.AccountSummary)
}

::google::protobuf::uint8* AccountSummary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.AccountSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AccountSummary.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string account = 2 [(.google.api.resource_reference) = {
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AccountSummary.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.AccountSummary.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_name(), target);
  }

  // repeated .google.analytics.admin.v1alpha.PropertySummary property_summaries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_summaries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->property_summaries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.AccountSummary)
  return target;
}

size_t AccountSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.AccountSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.analytics.admin.v1alpha.PropertySummary property_summaries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->property_summaries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_summaries(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string account = 2 [(.google.api.resource_reference) = {
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.AccountSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountSummary* source =
      ::google::protobuf::DynamicCastToGenerated<AccountSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.AccountSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.AccountSummary)
    MergeFrom(*source);
  }
}

void AccountSummary::MergeFrom(const AccountSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.AccountSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_summaries_.MergeFrom(from.property_summaries_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
}

void AccountSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.AccountSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountSummary::CopyFrom(const AccountSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.AccountSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountSummary::IsInitialized() const {
  return true;
}

void AccountSummary::Swap(AccountSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountSummary::InternalSwap(AccountSummary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&property_summaries_)->InternalSwap(CastToBase(&other->property_summaries_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AccountSummary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PropertySummary::InitAsDefaultInstance() {
}
class PropertySummary::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertySummary::kPropertyFieldNumber;
const int PropertySummary::kDisplayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertySummary::PropertySummary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.PropertySummary)
}
PropertySummary::PropertySummary(const PropertySummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property().size() > 0) {
    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.PropertySummary)
}

void PropertySummary::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PropertySummary::~PropertySummary() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.PropertySummary)
  SharedDtor();
}

void PropertySummary::SharedDtor() {
  property_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PropertySummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PropertySummary& PropertySummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PropertySummary_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void PropertySummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.PropertySummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PropertySummary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PropertySummary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string property = 1 [(.google.api.resource_reference) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.PropertySummary.property");
        object = msg->mutable_property();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.PropertySummary.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PropertySummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.PropertySummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string property = 1 [(.google.api.resource_reference) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->property().data(), static_cast<int>(this->property().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.PropertySummary.property"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.PropertySummary.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.PropertySummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.PropertySummary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PropertySummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.PropertySummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string property = 1 [(.google.api.resource_reference) = {
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property().data(), static_cast<int>(this->property().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.PropertySummary.property");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->property(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.PropertySummary.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.PropertySummary)
}

::google::protobuf::uint8* PropertySummary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.PropertySummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string property = 1 [(.google.api.resource_reference) = {
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property().data(), static_cast<int>(this->property().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.PropertySummary.property");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->property(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.PropertySummary.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.PropertySummary)
  return target;
}

size_t PropertySummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.PropertySummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string property = 1 [(.google.api.resource_reference) = {
  if (this->property().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->property());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropertySummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.PropertySummary)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertySummary* source =
      ::google::protobuf::DynamicCastToGenerated<PropertySummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.PropertySummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.PropertySummary)
    MergeFrom(*source);
  }
}

void PropertySummary::MergeFrom(const PropertySummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.PropertySummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property().size() > 0) {

    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
}

void PropertySummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.PropertySummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertySummary::CopyFrom(const PropertySummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.PropertySummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertySummary::IsInitialized() const {
  return true;
}

void PropertySummary::Swap(PropertySummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertySummary::InternalSwap(PropertySummary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  property_.Swap(&other->property_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PropertySummary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MeasurementProtocolSecret::InitAsDefaultInstance() {
}
class MeasurementProtocolSecret::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasurementProtocolSecret::kNameFieldNumber;
const int MeasurementProtocolSecret::kDisplayNameFieldNumber;
const int MeasurementProtocolSecret::kSecretValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasurementProtocolSecret::MeasurementProtocolSecret()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
}
MeasurementProtocolSecret::MeasurementProtocolSecret(const MeasurementProtocolSecret& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  secret_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret_value().size() > 0) {
    secret_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_value_);
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
}

void MeasurementProtocolSecret::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MeasurementProtocolSecret::~MeasurementProtocolSecret() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  SharedDtor();
}

void MeasurementProtocolSecret::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeasurementProtocolSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MeasurementProtocolSecret& MeasurementProtocolSecret::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MeasurementProtocolSecret_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void MeasurementProtocolSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MeasurementProtocolSecret::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MeasurementProtocolSecret*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.MeasurementProtocolSecret.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.MeasurementProtocolSecret.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string secret_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.MeasurementProtocolSecret.secret_value");
        object = msg->mutable_secret_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MeasurementProtocolSecret::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.MeasurementProtocolSecret.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.MeasurementProtocolSecret.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret_value().data(), static_cast<int>(this->secret_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.MeasurementProtocolSecret.secret_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MeasurementProtocolSecret::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.MeasurementProtocolSecret.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.MeasurementProtocolSecret.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // string secret_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->secret_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_value().data(), static_cast<int>(this->secret_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.MeasurementProtocolSecret.secret_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->secret_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
}

::google::protobuf::uint8* MeasurementProtocolSecret::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.MeasurementProtocolSecret.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.MeasurementProtocolSecret.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // string secret_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->secret_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_value().data(), static_cast<int>(this->secret_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.MeasurementProtocolSecret.secret_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->secret_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  return target;
}

size_t MeasurementProtocolSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string secret_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->secret_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeasurementProtocolSecret::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasurementProtocolSecret* source =
      ::google::protobuf::DynamicCastToGenerated<MeasurementProtocolSecret>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
    MergeFrom(*source);
  }
}

void MeasurementProtocolSecret::MergeFrom(const MeasurementProtocolSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.secret_value().size() > 0) {

    secret_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_value_);
  }
}

void MeasurementProtocolSecret::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasurementProtocolSecret::CopyFrom(const MeasurementProtocolSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.MeasurementProtocolSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasurementProtocolSecret::IsInitialized() const {
  return true;
}

void MeasurementProtocolSecret::Swap(MeasurementProtocolSecret* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasurementProtocolSecret::InternalSwap(MeasurementProtocolSecret* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secret_value_.Swap(&other->secret_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MeasurementProtocolSecret::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChangeHistoryEvent::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_ChangeHistoryEvent_default_instance_._instance.get_mutable()->change_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class ChangeHistoryEvent::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& change_time(const ChangeHistoryEvent* msg);
};

const ::google::protobuf::Timestamp&
ChangeHistoryEvent::HasBitSetters::change_time(const ChangeHistoryEvent* msg) {
  return *msg->change_time_;
}
void ChangeHistoryEvent::clear_change_time() {
  if (GetArenaNoVirtual() == nullptr && change_time_ != nullptr) {
    delete change_time_;
  }
  change_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeHistoryEvent::kIdFieldNumber;
const int ChangeHistoryEvent::kChangeTimeFieldNumber;
const int ChangeHistoryEvent::kActorTypeFieldNumber;
const int ChangeHistoryEvent::kUserActorEmailFieldNumber;
const int ChangeHistoryEvent::kChangesFilteredFieldNumber;
const int ChangeHistoryEvent::kChangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeHistoryEvent::ChangeHistoryEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.ChangeHistoryEvent)
}
ChangeHistoryEvent::ChangeHistoryEvent(const ChangeHistoryEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      changes_(from.changes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  user_actor_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_actor_email().size() > 0) {
    user_actor_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_actor_email_);
  }
  if (from.has_change_time()) {
    change_time_ = new ::google::protobuf::Timestamp(*from.change_time_);
  } else {
    change_time_ = nullptr;
  }
  ::memcpy(&actor_type_, &from.actor_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&changes_filtered_) -
    reinterpret_cast<char*>(&actor_type_)) + sizeof(changes_filtered_));
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.ChangeHistoryEvent)
}

void ChangeHistoryEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ChangeHistoryEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_actor_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changes_filtered_) -
      reinterpret_cast<char*>(&change_time_)) + sizeof(changes_filtered_));
}

ChangeHistoryEvent::~ChangeHistoryEvent() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  SharedDtor();
}

void ChangeHistoryEvent::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_actor_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete change_time_;
}

void ChangeHistoryEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeHistoryEvent& ChangeHistoryEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChangeHistoryEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ChangeHistoryEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changes_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_actor_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && change_time_ != nullptr) {
    delete change_time_;
  }
  change_time_ = nullptr;
  ::memset(&actor_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changes_filtered_) -
      reinterpret_cast<char*>(&actor_type_)) + sizeof(changes_filtered_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeHistoryEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChangeHistoryEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.ChangeHistoryEvent.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp change_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_change_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.ActorType actor_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_actor_type(static_cast<::google::analytics::admin::v1alpha::ActorType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string user_actor_email = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.ChangeHistoryEvent.user_actor_email");
        object = msg->mutable_user_actor_email();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool changes_filtered = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_changes_filtered(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.analytics.admin.v1alpha.ChangeHistoryChange changes = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::analytics::admin::v1alpha::ChangeHistoryChange::_InternalParse;
          object = msg->add_changes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeHistoryEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.ChangeHistoryEvent.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp change_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_change_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.ActorType actor_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_actor_type(static_cast< ::google::analytics::admin::v1alpha::ActorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_actor_email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_actor_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_actor_email().data(), static_cast<int>(this->user_actor_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.ChangeHistoryEvent.user_actor_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool changes_filtered = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &changes_filtered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.analytics.admin.v1alpha.ChangeHistoryChange changes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeHistoryEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ChangeHistoryEvent.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .google.protobuf.Timestamp change_time = 2;
  if (this->has_change_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::change_time(this), output);
  }

  // .google.analytics.admin.v1alpha.ActorType actor_type = 3;
  if (this->actor_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->actor_type(), output);
  }

  // string user_actor_email = 4;
  if (this->user_actor_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_actor_email().data(), static_cast<int>(this->user_actor_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ChangeHistoryEvent.user_actor_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_actor_email(), output);
  }

  // bool changes_filtered = 5;
  if (this->changes_filtered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->changes_filtered(), output);
  }

  // repeated .google.analytics.admin.v1alpha.ChangeHistoryChange changes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->changes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.ChangeHistoryEvent)
}

::google::protobuf::uint8* ChangeHistoryEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ChangeHistoryEvent.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .google.protobuf.Timestamp change_time = 2;
  if (this->has_change_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::change_time(this), target);
  }

  // .google.analytics.admin.v1alpha.ActorType actor_type = 3;
  if (this->actor_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->actor_type(), target);
  }

  // string user_actor_email = 4;
  if (this->user_actor_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_actor_email().data(), static_cast<int>(this->user_actor_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ChangeHistoryEvent.user_actor_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_actor_email(), target);
  }

  // bool changes_filtered = 5;
  if (this->changes_filtered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->changes_filtered(), target);
  }

  // repeated .google.analytics.admin.v1alpha.ChangeHistoryChange changes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->changes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  return target;
}

size_t ChangeHistoryEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.analytics.admin.v1alpha.ChangeHistoryChange changes = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->changes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->changes(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string user_actor_email = 4;
  if (this->user_actor_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_actor_email());
  }

  // .google.protobuf.Timestamp change_time = 2;
  if (this->has_change_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *change_time_);
  }

  // .google.analytics.admin.v1alpha.ActorType actor_type = 3;
  if (this->actor_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->actor_type());
  }

  // bool changes_filtered = 5;
  if (this->changes_filtered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeHistoryEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeHistoryEvent* source =
      ::google::protobuf::DynamicCastToGenerated<ChangeHistoryEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.ChangeHistoryEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.ChangeHistoryEvent)
    MergeFrom(*source);
  }
}

void ChangeHistoryEvent::MergeFrom(const ChangeHistoryEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changes_.MergeFrom(from.changes_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.user_actor_email().size() > 0) {

    user_actor_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_actor_email_);
  }
  if (from.has_change_time()) {
    mutable_change_time()->::google::protobuf::Timestamp::MergeFrom(from.change_time());
  }
  if (from.actor_type() != 0) {
    set_actor_type(from.actor_type());
  }
  if (from.changes_filtered() != 0) {
    set_changes_filtered(from.changes_filtered());
  }
}

void ChangeHistoryEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeHistoryEvent::CopyFrom(const ChangeHistoryEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.ChangeHistoryEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeHistoryEvent::IsInitialized() const {
  return true;
}

void ChangeHistoryEvent::Swap(ChangeHistoryEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeHistoryEvent::InternalSwap(ChangeHistoryEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&changes_)->InternalSwap(CastToBase(&other->changes_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_actor_email_.Swap(&other->user_actor_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(change_time_, other->change_time_);
  swap(actor_type_, other->actor_type_);
  swap(changes_filtered_, other->changes_filtered_);
}

::google::protobuf::Metadata ChangeHistoryEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChangeHistoryChange_ChangeHistoryResource::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.account_ = const_cast< ::google::analytics::admin::v1alpha::Account*>(
      ::google::analytics::admin::v1alpha::Account::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.property_ = const_cast< ::google::analytics::admin::v1alpha::Property*>(
      ::google::analytics::admin::v1alpha::Property::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.web_data_stream_ = const_cast< ::google::analytics::admin::v1alpha::WebDataStream*>(
      ::google::analytics::admin::v1alpha::WebDataStream::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.android_app_data_stream_ = const_cast< ::google::analytics::admin::v1alpha::AndroidAppDataStream*>(
      ::google::analytics::admin::v1alpha::AndroidAppDataStream::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.ios_app_data_stream_ = const_cast< ::google::analytics::admin::v1alpha::IosAppDataStream*>(
      ::google::analytics::admin::v1alpha::IosAppDataStream::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.firebase_link_ = const_cast< ::google::analytics::admin::v1alpha::FirebaseLink*>(
      ::google::analytics::admin::v1alpha::FirebaseLink::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.google_ads_link_ = const_cast< ::google::analytics::admin::v1alpha::GoogleAdsLink*>(
      ::google::analytics::admin::v1alpha::GoogleAdsLink::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.google_signals_settings_ = const_cast< ::google::analytics::admin::v1alpha::GoogleSignalsSettings*>(
      ::google::analytics::admin::v1alpha::GoogleSignalsSettings::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.conversion_event_ = const_cast< ::google::analytics::admin::v1alpha::ConversionEvent*>(
      ::google::analytics::admin::v1alpha::ConversionEvent::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.measurement_protocol_secret_ = const_cast< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret*>(
      ::google::analytics::admin::v1alpha::MeasurementProtocolSecret::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.custom_dimension_ = const_cast< ::google::analytics::admin::v1alpha::CustomDimension*>(
      ::google::analytics::admin::v1alpha::CustomDimension::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_ChangeHistoryResource_default_instance_.custom_metric_ = const_cast< ::google::analytics::admin::v1alpha::CustomMetric*>(
      ::google::analytics::admin::v1alpha::CustomMetric::internal_default_instance());
}
class ChangeHistoryChange_ChangeHistoryResource::HasBitSetters {
 public:
  static const ::google::analytics::admin::v1alpha::Account& account(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::Property& property(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::WebDataStream& web_data_stream(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::AndroidAppDataStream& android_app_data_stream(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::IosAppDataStream& ios_app_data_stream(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::FirebaseLink& firebase_link(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::GoogleAdsLink& google_ads_link(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::GoogleSignalsSettings& google_signals_settings(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::ConversionEvent& conversion_event(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::MeasurementProtocolSecret& measurement_protocol_secret(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::CustomDimension& custom_dimension(const ChangeHistoryChange_ChangeHistoryResource* msg);
  static const ::google::analytics::admin::v1alpha::CustomMetric& custom_metric(const ChangeHistoryChange_ChangeHistoryResource* msg);
};

const ::google::analytics::admin::v1alpha::Account&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::account(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.account_;
}
const ::google::analytics::admin::v1alpha::Property&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::property(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.property_;
}
const ::google::analytics::admin::v1alpha::WebDataStream&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::web_data_stream(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.web_data_stream_;
}
const ::google::analytics::admin::v1alpha::AndroidAppDataStream&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::android_app_data_stream(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.android_app_data_stream_;
}
const ::google::analytics::admin::v1alpha::IosAppDataStream&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::ios_app_data_stream(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.ios_app_data_stream_;
}
const ::google::analytics::admin::v1alpha::FirebaseLink&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::firebase_link(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.firebase_link_;
}
const ::google::analytics::admin::v1alpha::GoogleAdsLink&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::google_ads_link(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.google_ads_link_;
}
const ::google::analytics::admin::v1alpha::GoogleSignalsSettings&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::google_signals_settings(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.google_signals_settings_;
}
const ::google::analytics::admin::v1alpha::ConversionEvent&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::conversion_event(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.conversion_event_;
}
const ::google::analytics::admin::v1alpha::MeasurementProtocolSecret&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::measurement_protocol_secret(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.measurement_protocol_secret_;
}
const ::google::analytics::admin::v1alpha::CustomDimension&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::custom_dimension(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.custom_dimension_;
}
const ::google::analytics::admin::v1alpha::CustomMetric&
ChangeHistoryChange_ChangeHistoryResource::HasBitSetters::custom_metric(const ChangeHistoryChange_ChangeHistoryResource* msg) {
  return *msg->resource_.custom_metric_;
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_account(::google::analytics::admin::v1alpha::Account* account) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (account) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      account = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, account, submessage_arena);
    }
    set_has_account();
    resource_.account_ = account;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.account)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_property(::google::analytics::admin::v1alpha::Property* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (property) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      property = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property, submessage_arena);
    }
    set_has_property();
    resource_.property_ = property;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.property)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_web_data_stream(::google::analytics::admin::v1alpha::WebDataStream* web_data_stream) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (web_data_stream) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      web_data_stream = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, web_data_stream, submessage_arena);
    }
    set_has_web_data_stream();
    resource_.web_data_stream_ = web_data_stream;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.web_data_stream)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_android_app_data_stream(::google::analytics::admin::v1alpha::AndroidAppDataStream* android_app_data_stream) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (android_app_data_stream) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      android_app_data_stream = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, android_app_data_stream, submessage_arena);
    }
    set_has_android_app_data_stream();
    resource_.android_app_data_stream_ = android_app_data_stream;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.android_app_data_stream)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_ios_app_data_stream(::google::analytics::admin::v1alpha::IosAppDataStream* ios_app_data_stream) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (ios_app_data_stream) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ios_app_data_stream = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ios_app_data_stream, submessage_arena);
    }
    set_has_ios_app_data_stream();
    resource_.ios_app_data_stream_ = ios_app_data_stream;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.ios_app_data_stream)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_firebase_link(::google::analytics::admin::v1alpha::FirebaseLink* firebase_link) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (firebase_link) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      firebase_link = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, firebase_link, submessage_arena);
    }
    set_has_firebase_link();
    resource_.firebase_link_ = firebase_link;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.firebase_link)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_google_ads_link(::google::analytics::admin::v1alpha::GoogleAdsLink* google_ads_link) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (google_ads_link) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      google_ads_link = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, google_ads_link, submessage_arena);
    }
    set_has_google_ads_link();
    resource_.google_ads_link_ = google_ads_link;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.google_ads_link)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_google_signals_settings(::google::analytics::admin::v1alpha::GoogleSignalsSettings* google_signals_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (google_signals_settings) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      google_signals_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, google_signals_settings, submessage_arena);
    }
    set_has_google_signals_settings();
    resource_.google_signals_settings_ = google_signals_settings;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.google_signals_settings)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_conversion_event(::google::analytics::admin::v1alpha::ConversionEvent* conversion_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (conversion_event) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      conversion_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conversion_event, submessage_arena);
    }
    set_has_conversion_event();
    resource_.conversion_event_ = conversion_event;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.conversion_event)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_measurement_protocol_secret(::google::analytics::admin::v1alpha::MeasurementProtocolSecret* measurement_protocol_secret) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (measurement_protocol_secret) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      measurement_protocol_secret = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, measurement_protocol_secret, submessage_arena);
    }
    set_has_measurement_protocol_secret();
    resource_.measurement_protocol_secret_ = measurement_protocol_secret;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.measurement_protocol_secret)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_custom_dimension(::google::analytics::admin::v1alpha::CustomDimension* custom_dimension) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (custom_dimension) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom_dimension = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, custom_dimension, submessage_arena);
    }
    set_has_custom_dimension();
    resource_.custom_dimension_ = custom_dimension;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.custom_dimension)
}
void ChangeHistoryChange_ChangeHistoryResource::set_allocated_custom_metric(::google::analytics::admin::v1alpha::CustomMetric* custom_metric) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_resource();
  if (custom_metric) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom_metric = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, custom_metric, submessage_arena);
    }
    set_has_custom_metric();
    resource_.custom_metric_ = custom_metric;
  }
  // @@protoc_insertion_point(field_set_allocated:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource.custom_metric)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeHistoryChange_ChangeHistoryResource::kAccountFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kPropertyFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kWebDataStreamFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kAndroidAppDataStreamFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kIosAppDataStreamFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kFirebaseLinkFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kGoogleAdsLinkFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kGoogleSignalsSettingsFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kConversionEventFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kMeasurementProtocolSecretFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kCustomDimensionFieldNumber;
const int ChangeHistoryChange_ChangeHistoryResource::kCustomMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeHistoryChange_ChangeHistoryResource::ChangeHistoryChange_ChangeHistoryResource()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
}
ChangeHistoryChange_ChangeHistoryResource::ChangeHistoryChange_ChangeHistoryResource(const ChangeHistoryChange_ChangeHistoryResource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_resource();
  switch (from.resource_case()) {
    case kAccount: {
      mutable_account()->::google::analytics::admin::v1alpha::Account::MergeFrom(from.account());
      break;
    }
    case kProperty: {
      mutable_property()->::google::analytics::admin::v1alpha::Property::MergeFrom(from.property());
      break;
    }
    case kWebDataStream: {
      mutable_web_data_stream()->::google::analytics::admin::v1alpha::WebDataStream::MergeFrom(from.web_data_stream());
      break;
    }
    case kAndroidAppDataStream: {
      mutable_android_app_data_stream()->::google::analytics::admin::v1alpha::AndroidAppDataStream::MergeFrom(from.android_app_data_stream());
      break;
    }
    case kIosAppDataStream: {
      mutable_ios_app_data_stream()->::google::analytics::admin::v1alpha::IosAppDataStream::MergeFrom(from.ios_app_data_stream());
      break;
    }
    case kFirebaseLink: {
      mutable_firebase_link()->::google::analytics::admin::v1alpha::FirebaseLink::MergeFrom(from.firebase_link());
      break;
    }
    case kGoogleAdsLink: {
      mutable_google_ads_link()->::google::analytics::admin::v1alpha::GoogleAdsLink::MergeFrom(from.google_ads_link());
      break;
    }
    case kGoogleSignalsSettings: {
      mutable_google_signals_settings()->::google::analytics::admin::v1alpha::GoogleSignalsSettings::MergeFrom(from.google_signals_settings());
      break;
    }
    case kConversionEvent: {
      mutable_conversion_event()->::google::analytics::admin::v1alpha::ConversionEvent::MergeFrom(from.conversion_event());
      break;
    }
    case kMeasurementProtocolSecret: {
      mutable_measurement_protocol_secret()->::google::analytics::admin::v1alpha::MeasurementProtocolSecret::MergeFrom(from.measurement_protocol_secret());
      break;
    }
    case kCustomDimension: {
      mutable_custom_dimension()->::google::analytics::admin::v1alpha::CustomDimension::MergeFrom(from.custom_dimension());
      break;
    }
    case kCustomMetric: {
      mutable_custom_metric()->::google::analytics::admin::v1alpha::CustomMetric::MergeFrom(from.custom_metric());
      break;
    }
    case RESOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
}

void ChangeHistoryChange_ChangeHistoryResource::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  clear_has_resource();
}

ChangeHistoryChange_ChangeHistoryResource::~ChangeHistoryChange_ChangeHistoryResource() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  SharedDtor();
}

void ChangeHistoryChange_ChangeHistoryResource::SharedDtor() {
  if (has_resource()) {
    clear_resource();
  }
}

void ChangeHistoryChange_ChangeHistoryResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeHistoryChange_ChangeHistoryResource& ChangeHistoryChange_ChangeHistoryResource::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChangeHistoryChange_ChangeHistoryResource_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ChangeHistoryChange_ChangeHistoryResource::clear_resource() {
// @@protoc_insertion_point(one_of_clear_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  switch (resource_case()) {
    case kAccount: {
      delete resource_.account_;
      break;
    }
    case kProperty: {
      delete resource_.property_;
      break;
    }
    case kWebDataStream: {
      delete resource_.web_data_stream_;
      break;
    }
    case kAndroidAppDataStream: {
      delete resource_.android_app_data_stream_;
      break;
    }
    case kIosAppDataStream: {
      delete resource_.ios_app_data_stream_;
      break;
    }
    case kFirebaseLink: {
      delete resource_.firebase_link_;
      break;
    }
    case kGoogleAdsLink: {
      delete resource_.google_ads_link_;
      break;
    }
    case kGoogleSignalsSettings: {
      delete resource_.google_signals_settings_;
      break;
    }
    case kConversionEvent: {
      delete resource_.conversion_event_;
      break;
    }
    case kMeasurementProtocolSecret: {
      delete resource_.measurement_protocol_secret_;
      break;
    }
    case kCustomDimension: {
      delete resource_.custom_dimension_;
      break;
    }
    case kCustomMetric: {
      delete resource_.custom_metric_;
      break;
    }
    case RESOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESOURCE_NOT_SET;
}


void ChangeHistoryChange_ChangeHistoryResource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_resource();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeHistoryChange_ChangeHistoryResource::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChangeHistoryChange_ChangeHistoryResource*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.analytics.admin.v1alpha.Account account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::Account::_InternalParse;
        object = msg->mutable_account();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.Property property = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::Property::_InternalParse;
        object = msg->mutable_property();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.WebDataStream web_data_stream = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::WebDataStream::_InternalParse;
        object = msg->mutable_web_data_stream();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.AndroidAppDataStream android_app_data_stream = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::AndroidAppDataStream::_InternalParse;
        object = msg->mutable_android_app_data_stream();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.IosAppDataStream ios_app_data_stream = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::IosAppDataStream::_InternalParse;
        object = msg->mutable_ios_app_data_stream();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.FirebaseLink firebase_link = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::FirebaseLink::_InternalParse;
        object = msg->mutable_firebase_link();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.GoogleAdsLink google_ads_link = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::GoogleAdsLink::_InternalParse;
        object = msg->mutable_google_ads_link();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.GoogleSignalsSettings google_signals_settings = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::GoogleSignalsSettings::_InternalParse;
        object = msg->mutable_google_signals_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.ConversionEvent conversion_event = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::ConversionEvent::_InternalParse;
        object = msg->mutable_conversion_event();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.MeasurementProtocolSecret measurement_protocol_secret = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::MeasurementProtocolSecret::_InternalParse;
        object = msg->mutable_measurement_protocol_secret();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.CustomDimension custom_dimension = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::CustomDimension::_InternalParse;
        object = msg->mutable_custom_dimension();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.CustomMetric custom_metric = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::CustomMetric::_InternalParse;
        object = msg->mutable_custom_metric();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeHistoryChange_ChangeHistoryResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.analytics.admin.v1alpha.Account account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.Property property = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.WebDataStream web_data_stream = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_web_data_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.AndroidAppDataStream android_app_data_stream = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_android_app_data_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.IosAppDataStream ios_app_data_stream = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ios_app_data_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.FirebaseLink firebase_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firebase_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.GoogleAdsLink google_ads_link = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_google_ads_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.GoogleSignalsSettings google_signals_settings = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_google_signals_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.ConversionEvent conversion_event = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conversion_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.MeasurementProtocolSecret measurement_protocol_secret = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_measurement_protocol_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.CustomDimension custom_dimension = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_custom_dimension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.CustomMetric custom_metric = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_custom_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeHistoryChange_ChangeHistoryResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.analytics.admin.v1alpha.Account account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::account(this), output);
  }

  // .google.analytics.admin.v1alpha.Property property = 2;
  if (has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::property(this), output);
  }

  // .google.analytics.admin.v1alpha.WebDataStream web_data_stream = 3;
  if (has_web_data_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::web_data_stream(this), output);
  }

  // .google.analytics.admin.v1alpha.AndroidAppDataStream android_app_data_stream = 4;
  if (has_android_app_data_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::android_app_data_stream(this), output);
  }

  // .google.analytics.admin.v1alpha.IosAppDataStream ios_app_data_stream = 5;
  if (has_ios_app_data_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::ios_app_data_stream(this), output);
  }

  // .google.analytics.admin.v1alpha.FirebaseLink firebase_link = 6;
  if (has_firebase_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::firebase_link(this), output);
  }

  // .google.analytics.admin.v1alpha.GoogleAdsLink google_ads_link = 7;
  if (has_google_ads_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::google_ads_link(this), output);
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsSettings google_signals_settings = 8;
  if (has_google_signals_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::google_signals_settings(this), output);
  }

  // .google.analytics.admin.v1alpha.ConversionEvent conversion_event = 11;
  if (has_conversion_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::conversion_event(this), output);
  }

  // .google.analytics.admin.v1alpha.MeasurementProtocolSecret measurement_protocol_secret = 12;
  if (has_measurement_protocol_secret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::measurement_protocol_secret(this), output);
  }

  // .google.analytics.admin.v1alpha.CustomDimension custom_dimension = 13;
  if (has_custom_dimension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::custom_dimension(this), output);
  }

  // .google.analytics.admin.v1alpha.CustomMetric custom_metric = 14;
  if (has_custom_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::custom_metric(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
}

::google::protobuf::uint8* ChangeHistoryChange_ChangeHistoryResource::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.analytics.admin.v1alpha.Account account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::account(this), target);
  }

  // .google.analytics.admin.v1alpha.Property property = 2;
  if (has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::property(this), target);
  }

  // .google.analytics.admin.v1alpha.WebDataStream web_data_stream = 3;
  if (has_web_data_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::web_data_stream(this), target);
  }

  // .google.analytics.admin.v1alpha.AndroidAppDataStream android_app_data_stream = 4;
  if (has_android_app_data_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::android_app_data_stream(this), target);
  }

  // .google.analytics.admin.v1alpha.IosAppDataStream ios_app_data_stream = 5;
  if (has_ios_app_data_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::ios_app_data_stream(this), target);
  }

  // .google.analytics.admin.v1alpha.FirebaseLink firebase_link = 6;
  if (has_firebase_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::firebase_link(this), target);
  }

  // .google.analytics.admin.v1alpha.GoogleAdsLink google_ads_link = 7;
  if (has_google_ads_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::google_ads_link(this), target);
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsSettings google_signals_settings = 8;
  if (has_google_signals_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::google_signals_settings(this), target);
  }

  // .google.analytics.admin.v1alpha.ConversionEvent conversion_event = 11;
  if (has_conversion_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::conversion_event(this), target);
  }

  // .google.analytics.admin.v1alpha.MeasurementProtocolSecret measurement_protocol_secret = 12;
  if (has_measurement_protocol_secret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::measurement_protocol_secret(this), target);
  }

  // .google.analytics.admin.v1alpha.CustomDimension custom_dimension = 13;
  if (has_custom_dimension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::custom_dimension(this), target);
  }

  // .google.analytics.admin.v1alpha.CustomMetric custom_metric = 14;
  if (has_custom_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::custom_metric(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  return target;
}

size_t ChangeHistoryChange_ChangeHistoryResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (resource_case()) {
    // .google.analytics.admin.v1alpha.Account account = 1;
    case kAccount: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.account_);
      break;
    }
    // .google.analytics.admin.v1alpha.Property property = 2;
    case kProperty: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.property_);
      break;
    }
    // .google.analytics.admin.v1alpha.WebDataStream web_data_stream = 3;
    case kWebDataStream: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.web_data_stream_);
      break;
    }
    // .google.analytics.admin.v1alpha.AndroidAppDataStream android_app_data_stream = 4;
    case kAndroidAppDataStream: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.android_app_data_stream_);
      break;
    }
    // .google.analytics.admin.v1alpha.IosAppDataStream ios_app_data_stream = 5;
    case kIosAppDataStream: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.ios_app_data_stream_);
      break;
    }
    // .google.analytics.admin.v1alpha.FirebaseLink firebase_link = 6;
    case kFirebaseLink: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.firebase_link_);
      break;
    }
    // .google.analytics.admin.v1alpha.GoogleAdsLink google_ads_link = 7;
    case kGoogleAdsLink: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.google_ads_link_);
      break;
    }
    // .google.analytics.admin.v1alpha.GoogleSignalsSettings google_signals_settings = 8;
    case kGoogleSignalsSettings: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.google_signals_settings_);
      break;
    }
    // .google.analytics.admin.v1alpha.ConversionEvent conversion_event = 11;
    case kConversionEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.conversion_event_);
      break;
    }
    // .google.analytics.admin.v1alpha.MeasurementProtocolSecret measurement_protocol_secret = 12;
    case kMeasurementProtocolSecret: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.measurement_protocol_secret_);
      break;
    }
    // .google.analytics.admin.v1alpha.CustomDimension custom_dimension = 13;
    case kCustomDimension: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.custom_dimension_);
      break;
    }
    // .google.analytics.admin.v1alpha.CustomMetric custom_metric = 14;
    case kCustomMetric: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resource_.custom_metric_);
      break;
    }
    case RESOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeHistoryChange_ChangeHistoryResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeHistoryChange_ChangeHistoryResource* source =
      ::google::protobuf::DynamicCastToGenerated<ChangeHistoryChange_ChangeHistoryResource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
    MergeFrom(*source);
  }
}

void ChangeHistoryChange_ChangeHistoryResource::MergeFrom(const ChangeHistoryChange_ChangeHistoryResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.resource_case()) {
    case kAccount: {
      mutable_account()->::google::analytics::admin::v1alpha::Account::MergeFrom(from.account());
      break;
    }
    case kProperty: {
      mutable_property()->::google::analytics::admin::v1alpha::Property::MergeFrom(from.property());
      break;
    }
    case kWebDataStream: {
      mutable_web_data_stream()->::google::analytics::admin::v1alpha::WebDataStream::MergeFrom(from.web_data_stream());
      break;
    }
    case kAndroidAppDataStream: {
      mutable_android_app_data_stream()->::google::analytics::admin::v1alpha::AndroidAppDataStream::MergeFrom(from.android_app_data_stream());
      break;
    }
    case kIosAppDataStream: {
      mutable_ios_app_data_stream()->::google::analytics::admin::v1alpha::IosAppDataStream::MergeFrom(from.ios_app_data_stream());
      break;
    }
    case kFirebaseLink: {
      mutable_firebase_link()->::google::analytics::admin::v1alpha::FirebaseLink::MergeFrom(from.firebase_link());
      break;
    }
    case kGoogleAdsLink: {
      mutable_google_ads_link()->::google::analytics::admin::v1alpha::GoogleAdsLink::MergeFrom(from.google_ads_link());
      break;
    }
    case kGoogleSignalsSettings: {
      mutable_google_signals_settings()->::google::analytics::admin::v1alpha::GoogleSignalsSettings::MergeFrom(from.google_signals_settings());
      break;
    }
    case kConversionEvent: {
      mutable_conversion_event()->::google::analytics::admin::v1alpha::ConversionEvent::MergeFrom(from.conversion_event());
      break;
    }
    case kMeasurementProtocolSecret: {
      mutable_measurement_protocol_secret()->::google::analytics::admin::v1alpha::MeasurementProtocolSecret::MergeFrom(from.measurement_protocol_secret());
      break;
    }
    case kCustomDimension: {
      mutable_custom_dimension()->::google::analytics::admin::v1alpha::CustomDimension::MergeFrom(from.custom_dimension());
      break;
    }
    case kCustomMetric: {
      mutable_custom_metric()->::google::analytics::admin::v1alpha::CustomMetric::MergeFrom(from.custom_metric());
      break;
    }
    case RESOURCE_NOT_SET: {
      break;
    }
  }
}

void ChangeHistoryChange_ChangeHistoryResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeHistoryChange_ChangeHistoryResource::CopyFrom(const ChangeHistoryChange_ChangeHistoryResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeHistoryChange_ChangeHistoryResource::IsInitialized() const {
  return true;
}

void ChangeHistoryChange_ChangeHistoryResource::Swap(ChangeHistoryChange_ChangeHistoryResource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeHistoryChange_ChangeHistoryResource::InternalSwap(ChangeHistoryChange_ChangeHistoryResource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(resource_, other->resource_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ChangeHistoryChange_ChangeHistoryResource::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChangeHistoryChange::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_default_instance_._instance.get_mutable()->resource_before_change_ = const_cast< ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource*>(
      ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::internal_default_instance());
  ::google::analytics::admin::v1alpha::_ChangeHistoryChange_default_instance_._instance.get_mutable()->resource_after_change_ = const_cast< ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource*>(
      ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::internal_default_instance());
}
class ChangeHistoryChange::HasBitSetters {
 public:
  static const ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource& resource_before_change(const ChangeHistoryChange* msg);
  static const ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource& resource_after_change(const ChangeHistoryChange* msg);
};

const ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource&
ChangeHistoryChange::HasBitSetters::resource_before_change(const ChangeHistoryChange* msg) {
  return *msg->resource_before_change_;
}
const ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource&
ChangeHistoryChange::HasBitSetters::resource_after_change(const ChangeHistoryChange* msg) {
  return *msg->resource_after_change_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeHistoryChange::kResourceFieldNumber;
const int ChangeHistoryChange::kActionFieldNumber;
const int ChangeHistoryChange::kResourceBeforeChangeFieldNumber;
const int ChangeHistoryChange::kResourceAfterChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeHistoryChange::ChangeHistoryChange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.ChangeHistoryChange)
}
ChangeHistoryChange::ChangeHistoryChange(const ChangeHistoryChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource().size() > 0) {
    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.has_resource_before_change()) {
    resource_before_change_ = new ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource(*from.resource_before_change_);
  } else {
    resource_before_change_ = nullptr;
  }
  if (from.has_resource_after_change()) {
    resource_after_change_ = new ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource(*from.resource_after_change_);
  } else {
    resource_after_change_ = nullptr;
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.ChangeHistoryChange)
}

void ChangeHistoryChange::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_before_change_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&resource_before_change_)) + sizeof(action_));
}

ChangeHistoryChange::~ChangeHistoryChange() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.ChangeHistoryChange)
  SharedDtor();
}

void ChangeHistoryChange::SharedDtor() {
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resource_before_change_;
  if (this != internal_default_instance()) delete resource_after_change_;
}

void ChangeHistoryChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeHistoryChange& ChangeHistoryChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChangeHistoryChange_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ChangeHistoryChange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && resource_before_change_ != nullptr) {
    delete resource_before_change_;
  }
  resource_before_change_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resource_after_change_ != nullptr) {
    delete resource_after_change_;
  }
  resource_after_change_ = nullptr;
  action_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeHistoryChange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChangeHistoryChange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string resource = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.ChangeHistoryChange.resource");
        object = msg->mutable_resource();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.analytics.admin.v1alpha.ActionType action = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_action(static_cast<::google::analytics::admin::v1alpha::ActionType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_before_change = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::_InternalParse;
        object = msg->mutable_resource_before_change();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_after_change = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::_InternalParse;
        object = msg->mutable_resource_after_change();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeHistoryChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource().data(), static_cast<int>(this->resource().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.ChangeHistoryChange.resource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.ActionType action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::google::analytics::admin::v1alpha::ActionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_before_change = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource_before_change()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_after_change = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource_after_change()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.ChangeHistoryChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.ChangeHistoryChange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeHistoryChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource = 1;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ChangeHistoryChange.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource(), output);
  }

  // .google.analytics.admin.v1alpha.ActionType action = 2;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->action(), output);
  }

  // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_before_change = 3;
  if (this->has_resource_before_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::resource_before_change(this), output);
  }

  // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_after_change = 4;
  if (this->has_resource_after_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::resource_after_change(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.ChangeHistoryChange)
}

::google::protobuf::uint8* ChangeHistoryChange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource = 1;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ChangeHistoryChange.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource(), target);
  }

  // .google.analytics.admin.v1alpha.ActionType action = 2;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->action(), target);
  }

  // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_before_change = 3;
  if (this->has_resource_before_change()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::resource_before_change(this), target);
  }

  // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_after_change = 4;
  if (this->has_resource_after_change()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::resource_after_change(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.ChangeHistoryChange)
  return target;
}

size_t ChangeHistoryChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource = 1;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource());
  }

  // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_before_change = 3;
  if (this->has_resource_before_change()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_before_change_);
  }

  // .google.analytics.admin.v1alpha.ChangeHistoryChange.ChangeHistoryResource resource_after_change = 4;
  if (this->has_resource_after_change()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_after_change_);
  }

  // .google.analytics.admin.v1alpha.ActionType action = 2;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeHistoryChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeHistoryChange* source =
      ::google::protobuf::DynamicCastToGenerated<ChangeHistoryChange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.ChangeHistoryChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.ChangeHistoryChange)
    MergeFrom(*source);
  }
}

void ChangeHistoryChange::MergeFrom(const ChangeHistoryChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.has_resource_before_change()) {
    mutable_resource_before_change()->::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::MergeFrom(from.resource_before_change());
  }
  if (from.has_resource_after_change()) {
    mutable_resource_after_change()->::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource::MergeFrom(from.resource_after_change());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void ChangeHistoryChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeHistoryChange::CopyFrom(const ChangeHistoryChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.ChangeHistoryChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeHistoryChange::IsInitialized() const {
  return true;
}

void ChangeHistoryChange::Swap(ChangeHistoryChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeHistoryChange::InternalSwap(ChangeHistoryChange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_.Swap(&other->resource_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_before_change_, other->resource_before_change_);
  swap(resource_after_change_, other->resource_after_change_);
  swap(action_, other->action_);
}

::google::protobuf::Metadata ChangeHistoryChange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConversionEvent::InitAsDefaultInstance() {
  ::google::analytics::admin::v1alpha::_ConversionEvent_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class ConversionEvent::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& create_time(const ConversionEvent* msg);
};

const ::google::protobuf::Timestamp&
ConversionEvent::HasBitSetters::create_time(const ConversionEvent* msg) {
  return *msg->create_time_;
}
void ConversionEvent::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConversionEvent::kNameFieldNumber;
const int ConversionEvent::kEventNameFieldNumber;
const int ConversionEvent::kCreateTimeFieldNumber;
const int ConversionEvent::kIsDeletableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConversionEvent::ConversionEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.ConversionEvent)
}
ConversionEvent::ConversionEvent(const ConversionEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_name().size() > 0) {
    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  is_deletable_ = from.is_deletable_;
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.ConversionEvent)
}

void ConversionEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_deletable_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(is_deletable_));
}

ConversionEvent::~ConversionEvent() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.ConversionEvent)
  SharedDtor();
}

void ConversionEvent::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
}

void ConversionEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConversionEvent& ConversionEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConversionEvent_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ConversionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.ConversionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  is_deletable_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConversionEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConversionEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.ConversionEvent.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string event_name = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.ConversionEvent.event_name");
        object = msg->mutable_event_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_create_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool is_deletable = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_deletable(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConversionEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.ConversionEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.ConversionEvent.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string event_name = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_name().data(), static_cast<int>(this->event_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.ConversionEvent.event_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_deletable = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_deletable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.ConversionEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.ConversionEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConversionEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.ConversionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ConversionEvent.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string event_name = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->event_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ConversionEvent.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->event_name(), output);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::create_time(this), output);
  }

  // bool is_deletable = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->is_deletable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_deletable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.ConversionEvent)
}

::google::protobuf::uint8* ConversionEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.ConversionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ConversionEvent.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string event_name = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->event_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.ConversionEvent.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->event_name(), target);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::create_time(this), target);
  }

  // bool is_deletable = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->is_deletable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_deletable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.ConversionEvent)
  return target;
}

size_t ConversionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.ConversionEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string event_name = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->event_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_name());
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // bool is_deletable = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->is_deletable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConversionEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.ConversionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ConversionEvent* source =
      ::google::protobuf::DynamicCastToGenerated<ConversionEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.ConversionEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.ConversionEvent)
    MergeFrom(*source);
  }
}

void ConversionEvent::MergeFrom(const ConversionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.ConversionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.event_name().size() > 0) {

    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.is_deletable() != 0) {
    set_is_deletable(from.is_deletable());
  }
}

void ConversionEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.ConversionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConversionEvent::CopyFrom(const ConversionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.ConversionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConversionEvent::IsInitialized() const {
  return true;
}

void ConversionEvent::Swap(ConversionEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConversionEvent::InternalSwap(ConversionEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  event_name_.Swap(&other->event_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(is_deletable_, other->is_deletable_);
}

::google::protobuf::Metadata ConversionEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GoogleSignalsSettings::InitAsDefaultInstance() {
}
class GoogleSignalsSettings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoogleSignalsSettings::kNameFieldNumber;
const int GoogleSignalsSettings::kStateFieldNumber;
const int GoogleSignalsSettings::kConsentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoogleSignalsSettings::GoogleSignalsSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.GoogleSignalsSettings)
}
GoogleSignalsSettings::GoogleSignalsSettings(const GoogleSignalsSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&consent_) -
    reinterpret_cast<char*>(&state_)) + sizeof(consent_));
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.GoogleSignalsSettings)
}

void GoogleSignalsSettings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consent_) -
      reinterpret_cast<char*>(&state_)) + sizeof(consent_));
}

GoogleSignalsSettings::~GoogleSignalsSettings() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  SharedDtor();
}

void GoogleSignalsSettings::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GoogleSignalsSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoogleSignalsSettings& GoogleSignalsSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GoogleSignalsSettings_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void GoogleSignalsSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consent_) -
      reinterpret_cast<char*>(&state_)) + sizeof(consent_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GoogleSignalsSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GoogleSignalsSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.GoogleSignalsSettings.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.analytics.admin.v1alpha.GoogleSignalsState state = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_state(static_cast<::google::analytics::admin::v1alpha::GoogleSignalsState>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.analytics.admin.v1alpha.GoogleSignalsConsent consent = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_consent(static_cast<::google::analytics::admin::v1alpha::GoogleSignalsConsent>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GoogleSignalsSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.GoogleSignalsSettings.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.GoogleSignalsState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::analytics::admin::v1alpha::GoogleSignalsState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.GoogleSignalsConsent consent = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_consent(static_cast< ::google::analytics::admin::v1alpha::GoogleSignalsConsent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GoogleSignalsSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleSignalsSettings.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsState state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsConsent consent = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->consent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->consent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.GoogleSignalsSettings)
}

::google::protobuf::uint8* GoogleSignalsSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.GoogleSignalsSettings.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsState state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsConsent consent = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->consent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->consent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  return target;
}

size_t GoogleSignalsSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsState state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // .google.analytics.admin.v1alpha.GoogleSignalsConsent consent = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->consent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->consent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoogleSignalsSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const GoogleSignalsSettings* source =
      ::google::protobuf::DynamicCastToGenerated<GoogleSignalsSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.GoogleSignalsSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.GoogleSignalsSettings)
    MergeFrom(*source);
  }
}

void GoogleSignalsSettings::MergeFrom(const GoogleSignalsSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.consent() != 0) {
    set_consent(from.consent());
  }
}

void GoogleSignalsSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoogleSignalsSettings::CopyFrom(const GoogleSignalsSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.GoogleSignalsSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoogleSignalsSettings::IsInitialized() const {
  return true;
}

void GoogleSignalsSettings::Swap(GoogleSignalsSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoogleSignalsSettings::InternalSwap(GoogleSignalsSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(consent_, other->consent_);
}

::google::protobuf::Metadata GoogleSignalsSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CustomDimension::InitAsDefaultInstance() {
}
class CustomDimension::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomDimension::kNameFieldNumber;
const int CustomDimension::kParameterNameFieldNumber;
const int CustomDimension::kDisplayNameFieldNumber;
const int CustomDimension::kDescriptionFieldNumber;
const int CustomDimension::kScopeFieldNumber;
const int CustomDimension::kDisallowAdsPersonalizationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomDimension::CustomDimension()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.CustomDimension)
}
CustomDimension::CustomDimension(const CustomDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parameter_name().size() > 0) {
    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&scope_, &from.scope_,
    static_cast<size_t>(reinterpret_cast<char*>(&disallow_ads_personalization_) -
    reinterpret_cast<char*>(&scope_)) + sizeof(disallow_ads_personalization_));
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.CustomDimension)
}

void CustomDimension::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scope_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disallow_ads_personalization_) -
      reinterpret_cast<char*>(&scope_)) + sizeof(disallow_ads_personalization_));
}

CustomDimension::~CustomDimension() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.CustomDimension)
  SharedDtor();
}

void CustomDimension::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomDimension& CustomDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CustomDimension_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void CustomDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.CustomDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scope_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disallow_ads_personalization_) -
      reinterpret_cast<char*>(&scope_)) + sizeof(disallow_ads_personalization_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CustomDimension::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CustomDimension*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomDimension.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomDimension.parameter_name");
        object = msg->mutable_parameter_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomDimension.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomDimension.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.analytics.admin.v1alpha.CustomDimension.DimensionScope scope = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_scope(static_cast<::google::analytics::admin::v1alpha::CustomDimension_DimensionScope>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool disallow_ads_personalization = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_disallow_ads_personalization(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CustomDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.CustomDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomDimension.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomDimension.parameter_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomDimension.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomDimension.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.CustomDimension.DimensionScope scope = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scope(static_cast< ::google::analytics::admin::v1alpha::CustomDimension_DimensionScope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disallow_ads_personalization = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disallow_ads_personalization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.CustomDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.CustomDimension)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CustomDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.CustomDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.parameter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parameter_name(), output);
  }

  // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_name(), output);
  }

  // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // .google.analytics.admin.v1alpha.CustomDimension.DimensionScope scope = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->scope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->scope(), output);
  }

  // bool disallow_ads_personalization = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disallow_ads_personalization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->disallow_ads_personalization(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.CustomDimension)
}

::google::protobuf::uint8* CustomDimension::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.CustomDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.parameter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parameter_name(), target);
  }

  // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_name(), target);
  }

  // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomDimension.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // .google.analytics.admin.v1alpha.CustomDimension.DimensionScope scope = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->scope() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->scope(), target);
  }

  // bool disallow_ads_personalization = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disallow_ads_personalization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->disallow_ads_personalization(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.CustomDimension)
  return target;
}

size_t CustomDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.CustomDimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->parameter_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter_name());
  }

  // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.analytics.admin.v1alpha.CustomDimension.DimensionScope scope = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->scope() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scope());
  }

  // bool disallow_ads_personalization = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (this->disallow_ads_personalization() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.CustomDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomDimension* source =
      ::google::protobuf::DynamicCastToGenerated<CustomDimension>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.CustomDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.CustomDimension)
    MergeFrom(*source);
  }
}

void CustomDimension::MergeFrom(const CustomDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.CustomDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parameter_name().size() > 0) {

    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.scope() != 0) {
    set_scope(from.scope());
  }
  if (from.disallow_ads_personalization() != 0) {
    set_disallow_ads_personalization(from.disallow_ads_personalization());
  }
}

void CustomDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.CustomDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomDimension::CopyFrom(const CustomDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.CustomDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomDimension::IsInitialized() const {
  return true;
}

void CustomDimension::Swap(CustomDimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomDimension::InternalSwap(CustomDimension* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parameter_name_.Swap(&other->parameter_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scope_, other->scope_);
  swap(disallow_ads_personalization_, other->disallow_ads_personalization_);
}

::google::protobuf::Metadata CustomDimension::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CustomMetric::InitAsDefaultInstance() {
}
class CustomMetric::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomMetric::kNameFieldNumber;
const int CustomMetric::kParameterNameFieldNumber;
const int CustomMetric::kDisplayNameFieldNumber;
const int CustomMetric::kDescriptionFieldNumber;
const int CustomMetric::kMeasurementUnitFieldNumber;
const int CustomMetric::kScopeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomMetric::CustomMetric()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.analytics.admin.v1alpha.CustomMetric)
}
CustomMetric::CustomMetric(const CustomMetric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parameter_name().size() > 0) {
    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&measurement_unit_, &from.measurement_unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&scope_) -
    reinterpret_cast<char*>(&measurement_unit_)) + sizeof(scope_));
  // @@protoc_insertion_point(copy_constructor:google.analytics.admin.v1alpha.CustomMetric)
}

void CustomMetric::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&measurement_unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scope_) -
      reinterpret_cast<char*>(&measurement_unit_)) + sizeof(scope_));
}

CustomMetric::~CustomMetric() {
  // @@protoc_insertion_point(destructor:google.analytics.admin.v1alpha.CustomMetric)
  SharedDtor();
}

void CustomMetric::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomMetric& CustomMetric::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CustomMetric_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto.base);
  return *internal_default_instance();
}


void CustomMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.analytics.admin.v1alpha.CustomMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&measurement_unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scope_) -
      reinterpret_cast<char*>(&measurement_unit_)) + sizeof(scope_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CustomMetric::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CustomMetric*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomMetric.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomMetric.parameter_name");
        object = msg->mutable_parameter_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomMetric.display_name");
        object = msg->mutable_display_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.analytics.admin.v1alpha.CustomMetric.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.analytics.admin.v1alpha.CustomMetric.MeasurementUnit measurement_unit = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_measurement_unit(static_cast<::google::analytics::admin::v1alpha::CustomMetric_MeasurementUnit>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.analytics.admin.v1alpha.CustomMetric.MetricScope scope = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_scope(static_cast<::google::analytics::admin::v1alpha::CustomMetric_MetricScope>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CustomMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.analytics.admin.v1alpha.CustomMetric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomMetric.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomMetric.parameter_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomMetric.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.analytics.admin.v1alpha.CustomMetric.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.CustomMetric.MeasurementUnit measurement_unit = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_measurement_unit(static_cast< ::google::analytics::admin::v1alpha::CustomMetric_MeasurementUnit >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.analytics.admin.v1alpha.CustomMetric.MetricScope scope = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scope(static_cast< ::google::analytics::admin::v1alpha::CustomMetric_MetricScope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.analytics.admin.v1alpha.CustomMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.analytics.admin.v1alpha.CustomMetric)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CustomMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.analytics.admin.v1alpha.CustomMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.parameter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parameter_name(), output);
  }

  // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_name(), output);
  }

  // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // .google.analytics.admin.v1alpha.CustomMetric.MeasurementUnit measurement_unit = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->measurement_unit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->measurement_unit(), output);
  }

  // .google.analytics.admin.v1alpha.CustomMetric.MetricScope scope = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->scope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->scope(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.analytics.admin.v1alpha.CustomMetric)
}

::google::protobuf::uint8* CustomMetric::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.analytics.admin.v1alpha.CustomMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.parameter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parameter_name(), target);
  }

  // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_name(), target);
  }

  // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.analytics.admin.v1alpha.CustomMetric.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // .google.analytics.admin.v1alpha.CustomMetric.MeasurementUnit measurement_unit = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->measurement_unit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->measurement_unit(), target);
  }

  // .google.analytics.admin.v1alpha.CustomMetric.MetricScope scope = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->scope() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->scope(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.analytics.admin.v1alpha.CustomMetric)
  return target;
}

size_t CustomMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.analytics.admin.v1alpha.CustomMetric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parameter_name = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->parameter_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter_name());
  }

  // string display_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string description = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.analytics.admin.v1alpha.CustomMetric.MeasurementUnit measurement_unit = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->measurement_unit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->measurement_unit());
  }

  // .google.analytics.admin.v1alpha.CustomMetric.MetricScope scope = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
  if (this->scope() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scope());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.analytics.admin.v1alpha.CustomMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomMetric* source =
      ::google::protobuf::DynamicCastToGenerated<CustomMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.analytics.admin.v1alpha.CustomMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.analytics.admin.v1alpha.CustomMetric)
    MergeFrom(*source);
  }
}

void CustomMetric::MergeFrom(const CustomMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.analytics.admin.v1alpha.CustomMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parameter_name().size() > 0) {

    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.measurement_unit() != 0) {
    set_measurement_unit(from.measurement_unit());
  }
  if (from.scope() != 0) {
    set_scope(from.scope());
  }
}

void CustomMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.analytics.admin.v1alpha.CustomMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomMetric::CopyFrom(const CustomMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.analytics.admin.v1alpha.CustomMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomMetric::IsInitialized() const {
  return true;
}

void CustomMetric::Swap(CustomMetric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomMetric::InternalSwap(CustomMetric* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parameter_name_.Swap(&other->parameter_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(measurement_unit_, other->measurement_unit_);
  swap(scope_, other->scope_);
}

::google::protobuf::Metadata CustomMetric::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto);
  return ::file_level_metadata_google_2fanalytics_2fadmin_2fv1alpha_2fresources_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace admin
}  // namespace analytics
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::Account* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::Account >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::Account >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::Property* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::Property >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::Property >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::AndroidAppDataStream* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::AndroidAppDataStream >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::AndroidAppDataStream >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::IosAppDataStream* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::IosAppDataStream >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::IosAppDataStream >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::WebDataStream* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::WebDataStream >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::WebDataStream >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::UserLink* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::UserLink >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::UserLink >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::AuditUserLink* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::AuditUserLink >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::AuditUserLink >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::FirebaseLink* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::FirebaseLink >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::FirebaseLink >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::GlobalSiteTag* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::GlobalSiteTag >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::GlobalSiteTag >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::GoogleAdsLink* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::GoogleAdsLink >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::GoogleAdsLink >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::DataSharingSettings* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::DataSharingSettings >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::DataSharingSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::AccountSummary* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::AccountSummary >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::AccountSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::PropertySummary* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::PropertySummary >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::PropertySummary >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::ChangeHistoryEvent* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::ChangeHistoryEvent >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::ChangeHistoryEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::ChangeHistoryChange_ChangeHistoryResource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::ChangeHistoryChange* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::ChangeHistoryChange >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::ChangeHistoryChange >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::ConversionEvent* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::ConversionEvent >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::ConversionEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::GoogleSignalsSettings* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::GoogleSignalsSettings >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::GoogleSignalsSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::CustomDimension* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::CustomDimension >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::CustomDimension >(arena);
}
template<> PROTOBUF_NOINLINE ::google::analytics::admin::v1alpha::CustomMetric* Arena::CreateMaybeMessage< ::google::analytics::admin::v1alpha::CustomMetric >(Arena* arena) {
  return Arena::CreateInternal< ::google::analytics::admin::v1alpha::CustomMetric >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
