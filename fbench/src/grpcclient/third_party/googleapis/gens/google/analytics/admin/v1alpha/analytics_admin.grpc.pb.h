// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/analytics/admin/v1alpha/analytics_admin.proto
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fanalytics_2fadmin_2fv1alpha_2fanalytics_5fadmin_2eproto__INCLUDED
#define GRPC_google_2fanalytics_2fadmin_2fv1alpha_2fanalytics_5fadmin_2eproto__INCLUDED

#include "google/analytics/admin/v1alpha/analytics_admin.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace google {
namespace analytics {
namespace admin {
namespace v1alpha {

// Service Interface for the Analytics Admin API (GA4).
class AnalyticsAdminService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.analytics.admin.v1alpha.AnalyticsAdminService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Lookup for a single Account.
    virtual ::grpc::Status GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::google::analytics::admin::v1alpha::Account* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>> AsyncGetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>>(AsyncGetAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>> PrepareAsyncGetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>>(PrepareAsyncGetAccountRaw(context, request, cq));
    }
    // Returns all accounts accessible by the caller.
    //
    // Note that these accounts might not currently have GA4 properties.
    // Soft-deleted (ie: "trashed") accounts are excluded by default.
    // Returns an empty list if no relevant accounts are found.
    virtual ::grpc::Status ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountsResponse>> AsyncListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountsResponse>>(AsyncListAccountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountsResponse>> PrepareAsyncListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountsResponse>>(PrepareAsyncListAccountsRaw(context, request, cq));
    }
    // Marks target Account as soft-deleted (ie: "trashed") and returns it.
    //
    // This API does not have a method to restore soft-deleted accounts.
    // However, they can be restored using the Trash Can UI.
    //
    // If the accounts are not restored before the expiration time, the account
    // and all child resources (eg: Properties, GoogleAdsLinks, Streams,
    // UserLinks) will be permanently purged.
    // https://support.google.com/analytics/answer/6154772
    //
    // Returns an error if the target is not found.
    virtual ::grpc::Status DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteAccountRaw(context, request, cq));
    }
    // Updates an account.
    virtual ::grpc::Status UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::google::analytics::admin::v1alpha::Account* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>> AsyncUpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>>(AsyncUpdateAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>> PrepareAsyncUpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>>(PrepareAsyncUpdateAccountRaw(context, request, cq));
    }
    // Requests a ticket for creating an account.
    virtual ::grpc::Status ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>> AsyncProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>>(AsyncProvisionAccountTicketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>> PrepareAsyncProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>>(PrepareAsyncProvisionAccountTicketRaw(context, request, cq));
    }
    // Returns summaries of all accounts accessible by the caller.
    virtual ::grpc::Status ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>> AsyncListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>>(AsyncListAccountSummariesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>> PrepareAsyncListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>>(PrepareAsyncListAccountSummariesRaw(context, request, cq));
    }
    // Lookup for a single "GA4" Property.
    virtual ::grpc::Status GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> AsyncGetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(AsyncGetPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncGetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncGetPropertyRaw(context, request, cq));
    }
    // Returns child Properties under the specified parent Account.
    //
    // Only "GA4" properties will be returned.
    // Properties will be excluded if the caller does not have access.
    // Soft-deleted (ie: "trashed") properties are excluded by default.
    // Returns an empty list if no relevant properties are found.
    virtual ::grpc::Status ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListPropertiesResponse>> AsyncListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListPropertiesResponse>>(AsyncListPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListPropertiesResponse>> PrepareAsyncListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListPropertiesResponse>>(PrepareAsyncListPropertiesRaw(context, request, cq));
    }
    // Creates an "GA4" property with the specified location and attributes.
    virtual ::grpc::Status CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> AsyncCreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(AsyncCreatePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncCreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncCreatePropertyRaw(context, request, cq));
    }
    // Marks target Property as soft-deleted (ie: "trashed") and returns it.
    //
    // This API does not have a method to restore soft-deleted properties.
    // However, they can be restored using the Trash Can UI.
    //
    // If the properties are not restored before the expiration time, the Property
    // and all child resources (eg: GoogleAdsLinks, Streams, UserLinks)
    // will be permanently purged.
    // https://support.google.com/analytics/answer/6154772
    //
    // Returns an error if the target is not found, or is not an GA4 Property.
    virtual ::grpc::Status DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> AsyncDeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(AsyncDeletePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncDeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncDeletePropertyRaw(context, request, cq));
    }
    // Updates a property.
    virtual ::grpc::Status UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> AsyncUpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(AsyncUpdatePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncUpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncUpdatePropertyRaw(context, request, cq));
    }
    // Gets information about a user's link to an account or property.
    virtual ::grpc::Status GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>> AsyncGetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>>(AsyncGetUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>> PrepareAsyncGetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>>(PrepareAsyncGetUserLinkRaw(context, request, cq));
    }
    // Gets information about multiple users' links to an account or property.
    virtual ::grpc::Status BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>> AsyncBatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>>(AsyncBatchGetUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>> PrepareAsyncBatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>>(PrepareAsyncBatchGetUserLinksRaw(context, request, cq));
    }
    // Lists all user links on an account or property.
    virtual ::grpc::Status ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListUserLinksResponse>> AsyncListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListUserLinksResponse>>(AsyncListUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListUserLinksResponse>> PrepareAsyncListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListUserLinksResponse>>(PrepareAsyncListUserLinksRaw(context, request, cq));
    }
    // Lists all user links on an account or property, including implicit ones
    // that come from effective permissions granted by groups or organization
    // admin roles.
    //
    // If a returned user link does not have direct permissions, they cannot
    // be removed from the account or property directly with the DeleteUserLink
    // command. They have to be removed from the group/etc that gives them
    // permissions, which is currently only usable/discoverable in the GA or GMP
    // UIs.
    virtual ::grpc::Status AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>> AsyncAuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>>(AsyncAuditUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>> PrepareAsyncAuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>>(PrepareAsyncAuditUserLinksRaw(context, request, cq));
    }
    // Creates a user link on an account or property.
    //
    // If the user with the specified email already has permissions on the
    // account or property, then the user's existing permissions will be unioned
    // with the permissions specified in the new UserLink.
    virtual ::grpc::Status CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>> AsyncCreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>>(AsyncCreateUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>> PrepareAsyncCreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>>(PrepareAsyncCreateUserLinkRaw(context, request, cq));
    }
    // Creates information about multiple users' links to an account or property.
    //
    // This method is transactional. If any UserLink cannot be created, none of
    // the UserLinks will be created.
    virtual ::grpc::Status BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>> AsyncBatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>>(AsyncBatchCreateUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>> PrepareAsyncBatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>>(PrepareAsyncBatchCreateUserLinksRaw(context, request, cq));
    }
    // Updates a user link on an account or property.
    virtual ::grpc::Status UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>> AsyncUpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>>(AsyncUpdateUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>> PrepareAsyncUpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>>(PrepareAsyncUpdateUserLinkRaw(context, request, cq));
    }
    // Updates information about multiple users' links to an account or property.
    virtual ::grpc::Status BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>> AsyncBatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>>(AsyncBatchUpdateUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>> PrepareAsyncBatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>>(PrepareAsyncBatchUpdateUserLinksRaw(context, request, cq));
    }
    // Deletes a user link on an account or property.
    virtual ::grpc::Status DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteUserLinkRaw(context, request, cq));
    }
    // Deletes information about multiple users' links to an account or property.
    virtual ::grpc::Status BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncBatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncBatchDeleteUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncBatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncBatchDeleteUserLinksRaw(context, request, cq));
    }
    // Lookup for a single WebDataStream
    virtual ::grpc::Status GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>> AsyncGetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>>(AsyncGetWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>> PrepareAsyncGetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>>(PrepareAsyncGetWebDataStreamRaw(context, request, cq));
    }
    // Deletes a web stream on a property.
    virtual ::grpc::Status DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteWebDataStreamRaw(context, request, cq));
    }
    // Updates a web stream on a property.
    virtual ::grpc::Status UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>> AsyncUpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>>(AsyncUpdateWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>> PrepareAsyncUpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>>(PrepareAsyncUpdateWebDataStreamRaw(context, request, cq));
    }
    // Creates a web stream with the specified location and attributes.
    virtual ::grpc::Status CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>> AsyncCreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>>(AsyncCreateWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>> PrepareAsyncCreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>>(PrepareAsyncCreateWebDataStreamRaw(context, request, cq));
    }
    // Returns child web data streams under the specified parent property.
    //
    // Web data streams will be excluded if the caller does not have access.
    // Returns an empty list if no relevant web data streams are found.
    virtual ::grpc::Status ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>> AsyncListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>>(AsyncListWebDataStreamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>> PrepareAsyncListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>>(PrepareAsyncListWebDataStreamsRaw(context, request, cq));
    }
    // Lookup for a single IosAppDataStream
    virtual ::grpc::Status GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>> AsyncGetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>>(AsyncGetIosAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>> PrepareAsyncGetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>>(PrepareAsyncGetIosAppDataStreamRaw(context, request, cq));
    }
    // Deletes an iOS app stream on a property.
    virtual ::grpc::Status DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteIosAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteIosAppDataStreamRaw(context, request, cq));
    }
    // Updates an iOS app stream on a property.
    virtual ::grpc::Status UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>> AsyncUpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>>(AsyncUpdateIosAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>> PrepareAsyncUpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>>(PrepareAsyncUpdateIosAppDataStreamRaw(context, request, cq));
    }
    // Returns child iOS app data streams under the specified parent property.
    //
    // iOS app data streams will be excluded if the caller does not have access.
    // Returns an empty list if no relevant iOS app data streams are found.
    virtual ::grpc::Status ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>> AsyncListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>>(AsyncListIosAppDataStreamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>> PrepareAsyncListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>>(PrepareAsyncListIosAppDataStreamsRaw(context, request, cq));
    }
    // Lookup for a single AndroidAppDataStream
    virtual ::grpc::Status GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> AsyncGetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(AsyncGetAndroidAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> PrepareAsyncGetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(PrepareAsyncGetAndroidAppDataStreamRaw(context, request, cq));
    }
    // Deletes an android app stream on a property.
    virtual ::grpc::Status DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteAndroidAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteAndroidAppDataStreamRaw(context, request, cq));
    }
    // Updates an android app stream on a property.
    virtual ::grpc::Status UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> AsyncUpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(AsyncUpdateAndroidAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> PrepareAsyncUpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(PrepareAsyncUpdateAndroidAppDataStreamRaw(context, request, cq));
    }
    // Returns child android app streams under the specified parent property.
    //
    // Android app streams will be excluded if the caller does not have access.
    // Returns an empty list if no relevant android app streams are found.
    virtual ::grpc::Status ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>> AsyncListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>>(AsyncListAndroidAppDataStreamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>> PrepareAsyncListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>>(PrepareAsyncListAndroidAppDataStreamsRaw(context, request, cq));
    }
    // Returns the singleton enhanced measurement settings for this web stream.
    // Note that the stream must enable enhanced measurement for these settings to
    // take effect.
    virtual ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> AsyncGetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(AsyncGetEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> PrepareAsyncGetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(PrepareAsyncGetEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    // Updates the singleton enhanced measurement settings for this web stream.
    // Note that the stream must enable enhanced measurement for these settings to
    // take effect.
    virtual ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> AsyncUpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(AsyncUpdateEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> PrepareAsyncUpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(PrepareAsyncUpdateEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    // Creates a FirebaseLink.
    //
    // Properties can have at most one FirebaseLink.
    virtual ::grpc::Status CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::google::analytics::admin::v1alpha::FirebaseLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>> AsyncCreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>>(AsyncCreateFirebaseLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>> PrepareAsyncCreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>>(PrepareAsyncCreateFirebaseLinkRaw(context, request, cq));
    }
    // Updates a FirebaseLink on a property
    virtual ::grpc::Status UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::google::analytics::admin::v1alpha::FirebaseLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>> AsyncUpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>>(AsyncUpdateFirebaseLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>> PrepareAsyncUpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>>(PrepareAsyncUpdateFirebaseLinkRaw(context, request, cq));
    }
    // Deletes a FirebaseLink on a property
    virtual ::grpc::Status DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteFirebaseLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteFirebaseLinkRaw(context, request, cq));
    }
    // Lists FirebaseLinks on a property.
    // Properties can have at most one FirebaseLink.
    virtual ::grpc::Status ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>> AsyncListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>>(AsyncListFirebaseLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>> PrepareAsyncListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>>(PrepareAsyncListFirebaseLinksRaw(context, request, cq));
    }
    // Returns the Site Tag for the specified web stream.
    // Site Tags are immutable singletons.
    virtual ::grpc::Status GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GlobalSiteTag>> AsyncGetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GlobalSiteTag>>(AsyncGetGlobalSiteTagRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GlobalSiteTag>> PrepareAsyncGetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GlobalSiteTag>>(PrepareAsyncGetGlobalSiteTagRaw(context, request, cq));
    }
    // Creates a GoogleAdsLink.
    virtual ::grpc::Status CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>> AsyncCreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(AsyncCreateGoogleAdsLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>> PrepareAsyncCreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(PrepareAsyncCreateGoogleAdsLinkRaw(context, request, cq));
    }
    // Updates a GoogleAdsLink on a property
    virtual ::grpc::Status UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>> AsyncUpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(AsyncUpdateGoogleAdsLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>> PrepareAsyncUpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(PrepareAsyncUpdateGoogleAdsLinkRaw(context, request, cq));
    }
    // Deletes a GoogleAdsLink on a property
    virtual ::grpc::Status DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteGoogleAdsLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteGoogleAdsLinkRaw(context, request, cq));
    }
    // Lists GoogleAdsLinks on a property.
    virtual ::grpc::Status ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>> AsyncListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>>(AsyncListGoogleAdsLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>> PrepareAsyncListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>>(PrepareAsyncListGoogleAdsLinksRaw(context, request, cq));
    }
    // Get data sharing settings on an account.
    // Data sharing settings are singletons.
    virtual ::grpc::Status GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::google::analytics::admin::v1alpha::DataSharingSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::DataSharingSettings>> AsyncGetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::DataSharingSettings>>(AsyncGetDataSharingSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::DataSharingSettings>> PrepareAsyncGetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::DataSharingSettings>>(PrepareAsyncGetDataSharingSettingsRaw(context, request, cq));
    }
    // Lookup for a single "GA4" MeasurementProtocolSecret.
    virtual ::grpc::Status GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> AsyncGetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(AsyncGetMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> PrepareAsyncGetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(PrepareAsyncGetMeasurementProtocolSecretRaw(context, request, cq));
    }
    // Returns child MeasurementProtocolSecrets under the specified parent
    // Property.
    virtual ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>> AsyncListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>>(AsyncListMeasurementProtocolSecretsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>> PrepareAsyncListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>>(PrepareAsyncListMeasurementProtocolSecretsRaw(context, request, cq));
    }
    // Creates a measurement protocol secret.
    virtual ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> AsyncCreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(AsyncCreateMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> PrepareAsyncCreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(PrepareAsyncCreateMeasurementProtocolSecretRaw(context, request, cq));
    }
    // Deletes target MeasurementProtocolSecret.
    virtual ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteMeasurementProtocolSecretRaw(context, request, cq));
    }
    // Updates a measurement protocol secret.
    virtual ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> AsyncUpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(AsyncUpdateMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> PrepareAsyncUpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(PrepareAsyncUpdateMeasurementProtocolSecretRaw(context, request, cq));
    }
    // Searches through all changes to an account or its children given the
    // specified set of filters.
    virtual ::grpc::Status SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>> AsyncSearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>>(AsyncSearchChangeHistoryEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>> PrepareAsyncSearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>>(PrepareAsyncSearchChangeHistoryEventsRaw(context, request, cq));
    }
    // Lookup for Google Signals settings for a property.
    virtual ::grpc::Status GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> AsyncGetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(AsyncGetGoogleSignalsSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> PrepareAsyncGetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(PrepareAsyncGetGoogleSignalsSettingsRaw(context, request, cq));
    }
    // Updates Google Signals settings for a property.
    virtual ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> AsyncUpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(AsyncUpdateGoogleSignalsSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> PrepareAsyncUpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(PrepareAsyncUpdateGoogleSignalsSettingsRaw(context, request, cq));
    }
    // Creates a conversion event with the specified attributes.
    virtual ::grpc::Status CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::google::analytics::admin::v1alpha::ConversionEvent* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>> AsyncCreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>>(AsyncCreateConversionEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>> PrepareAsyncCreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>>(PrepareAsyncCreateConversionEventRaw(context, request, cq));
    }
    // Retrieve a single conversion event.
    virtual ::grpc::Status GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::google::analytics::admin::v1alpha::ConversionEvent* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>> AsyncGetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>>(AsyncGetConversionEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>> PrepareAsyncGetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>>(PrepareAsyncGetConversionEventRaw(context, request, cq));
    }
    // Deletes a conversion event in a property.
    virtual ::grpc::Status DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteConversionEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteConversionEventRaw(context, request, cq));
    }
    // Returns a list of conversion events in the specified parent property.
    //
    // Returns an empty list if no conversion events are found.
    virtual ::grpc::Status ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>> AsyncListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>>(AsyncListConversionEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>> PrepareAsyncListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>>(PrepareAsyncListConversionEventsRaw(context, request, cq));
    }
    // Creates a CustomDimension.
    virtual ::grpc::Status CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>> AsyncCreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>>(AsyncCreateCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>> PrepareAsyncCreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>>(PrepareAsyncCreateCustomDimensionRaw(context, request, cq));
    }
    // Updates a CustomDimension on a property.
    virtual ::grpc::Status UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>> AsyncUpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>>(AsyncUpdateCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>> PrepareAsyncUpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>>(PrepareAsyncUpdateCustomDimensionRaw(context, request, cq));
    }
    // Lists CustomDimensions on a property.
    virtual ::grpc::Status ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>> AsyncListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>>(AsyncListCustomDimensionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>> PrepareAsyncListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>>(PrepareAsyncListCustomDimensionsRaw(context, request, cq));
    }
    // Archives a CustomDimension on a property.
    virtual ::grpc::Status ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncArchiveCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncArchiveCustomDimensionRaw(context, request, cq));
    }
    // Lookup for a single CustomDimension.
    virtual ::grpc::Status GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>> AsyncGetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>>(AsyncGetCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>> PrepareAsyncGetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>>(PrepareAsyncGetCustomDimensionRaw(context, request, cq));
    }
    // Creates a CustomMetric.
    virtual ::grpc::Status CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>> AsyncCreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>>(AsyncCreateCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>> PrepareAsyncCreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>>(PrepareAsyncCreateCustomMetricRaw(context, request, cq));
    }
    // Updates a CustomMetric on a property.
    virtual ::grpc::Status UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>> AsyncUpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>>(AsyncUpdateCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>> PrepareAsyncUpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>>(PrepareAsyncUpdateCustomMetricRaw(context, request, cq));
    }
    // Lists CustomMetrics on a property.
    virtual ::grpc::Status ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>> AsyncListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>>(AsyncListCustomMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>> PrepareAsyncListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>>(PrepareAsyncListCustomMetricsRaw(context, request, cq));
    }
    // Archives a CustomMetric on a property.
    virtual ::grpc::Status ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncArchiveCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncArchiveCustomMetricRaw(context, request, cq));
    }
    // Lookup for a single CustomMetric.
    virtual ::grpc::Status GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>> AsyncGetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>>(AsyncGetCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>> PrepareAsyncGetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>>(PrepareAsyncGetCustomMetricRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Lookup for a single Account.
      virtual void GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns all accounts accessible by the caller.
      //
      // Note that these accounts might not currently have GA4 properties.
      // Soft-deleted (ie: "trashed") accounts are excluded by default.
      // Returns an empty list if no relevant accounts are found.
      virtual void ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Marks target Account as soft-deleted (ie: "trashed") and returns it.
      //
      // This API does not have a method to restore soft-deleted accounts.
      // However, they can be restored using the Trash Can UI.
      //
      // If the accounts are not restored before the expiration time, the account
      // and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      // UserLinks) will be permanently purged.
      // https://support.google.com/analytics/answer/6154772
      //
      // Returns an error if the target is not found.
      virtual void DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates an account.
      virtual void UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Requests a ticket for creating an account.
      virtual void ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns summaries of all accounts accessible by the caller.
      virtual void ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single "GA4" Property.
      virtual void GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns child Properties under the specified parent Account.
      //
      // Only "GA4" properties will be returned.
      // Properties will be excluded if the caller does not have access.
      // Soft-deleted (ie: "trashed") properties are excluded by default.
      // Returns an empty list if no relevant properties are found.
      virtual void ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates an "GA4" property with the specified location and attributes.
      virtual void CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Marks target Property as soft-deleted (ie: "trashed") and returns it.
      //
      // This API does not have a method to restore soft-deleted properties.
      // However, they can be restored using the Trash Can UI.
      //
      // If the properties are not restored before the expiration time, the Property
      // and all child resources (eg: GoogleAdsLinks, Streams, UserLinks)
      // will be permanently purged.
      // https://support.google.com/analytics/answer/6154772
      //
      // Returns an error if the target is not found, or is not an GA4 Property.
      virtual void DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a property.
      virtual void UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets information about a user's link to an account or property.
      virtual void GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Gets information about multiple users' links to an account or property.
      virtual void BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all user links on an account or property.
      virtual void ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all user links on an account or property, including implicit ones
      // that come from effective permissions granted by groups or organization
      // admin roles.
      //
      // If a returned user link does not have direct permissions, they cannot
      // be removed from the account or property directly with the DeleteUserLink
      // command. They have to be removed from the group/etc that gives them
      // permissions, which is currently only usable/discoverable in the GA or GMP
      // UIs.
      virtual void AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a user link on an account or property.
      //
      // If the user with the specified email already has permissions on the
      // account or property, then the user's existing permissions will be unioned
      // with the permissions specified in the new UserLink.
      virtual void CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates information about multiple users' links to an account or property.
      //
      // This method is transactional. If any UserLink cannot be created, none of
      // the UserLinks will be created.
      virtual void BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a user link on an account or property.
      virtual void UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates information about multiple users' links to an account or property.
      virtual void BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a user link on an account or property.
      virtual void DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes information about multiple users' links to an account or property.
      virtual void BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single WebDataStream
      virtual void GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a web stream on a property.
      virtual void DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a web stream on a property.
      virtual void UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a web stream with the specified location and attributes.
      virtual void CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns child web data streams under the specified parent property.
      //
      // Web data streams will be excluded if the caller does not have access.
      // Returns an empty list if no relevant web data streams are found.
      virtual void ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single IosAppDataStream
      virtual void GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes an iOS app stream on a property.
      virtual void DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates an iOS app stream on a property.
      virtual void UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns child iOS app data streams under the specified parent property.
      //
      // iOS app data streams will be excluded if the caller does not have access.
      // Returns an empty list if no relevant iOS app data streams are found.
      virtual void ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single AndroidAppDataStream
      virtual void GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes an android app stream on a property.
      virtual void DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates an android app stream on a property.
      virtual void UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns child android app streams under the specified parent property.
      //
      // Android app streams will be excluded if the caller does not have access.
      // Returns an empty list if no relevant android app streams are found.
      virtual void ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns the singleton enhanced measurement settings for this web stream.
      // Note that the stream must enable enhanced measurement for these settings to
      // take effect.
      virtual void GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates the singleton enhanced measurement settings for this web stream.
      // Note that the stream must enable enhanced measurement for these settings to
      // take effect.
      virtual void UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a FirebaseLink.
      //
      // Properties can have at most one FirebaseLink.
      virtual void CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a FirebaseLink on a property
      virtual void UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a FirebaseLink on a property
      virtual void DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists FirebaseLinks on a property.
      // Properties can have at most one FirebaseLink.
      virtual void ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns the Site Tag for the specified web stream.
      // Site Tags are immutable singletons.
      virtual void GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a GoogleAdsLink.
      virtual void CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a GoogleAdsLink on a property
      virtual void UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a GoogleAdsLink on a property
      virtual void DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists GoogleAdsLinks on a property.
      virtual void ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get data sharing settings on an account.
      // Data sharing settings are singletons.
      virtual void GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single "GA4" MeasurementProtocolSecret.
      virtual void GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns child MeasurementProtocolSecrets under the specified parent
      // Property.
      virtual void ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a measurement protocol secret.
      virtual void CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes target MeasurementProtocolSecret.
      virtual void DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a measurement protocol secret.
      virtual void UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Searches through all changes to an account or its children given the
      // specified set of filters.
      virtual void SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for Google Signals settings for a property.
      virtual void GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates Google Signals settings for a property.
      virtual void UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a conversion event with the specified attributes.
      virtual void CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Retrieve a single conversion event.
      virtual void GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a conversion event in a property.
      virtual void DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Returns a list of conversion events in the specified parent property.
      //
      // Returns an empty list if no conversion events are found.
      virtual void ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a CustomDimension.
      virtual void CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a CustomDimension on a property.
      virtual void UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists CustomDimensions on a property.
      virtual void ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Archives a CustomDimension on a property.
      virtual void ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single CustomDimension.
      virtual void GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Creates a CustomMetric.
      virtual void CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a CustomMetric on a property.
      virtual void UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists CustomMetrics on a property.
      virtual void ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Archives a CustomMetric on a property.
      virtual void ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lookup for a single CustomMetric.
      virtual void GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>* AsyncGetAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>* PrepareAsyncGetAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountsResponse>* AsyncListAccountsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountsResponse>* PrepareAsyncListAccountsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>* AsyncUpdateAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Account>* PrepareAsyncUpdateAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* AsyncProvisionAccountTicketRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* PrepareAsyncProvisionAccountTicketRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* AsyncListAccountSummariesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* PrepareAsyncListAccountSummariesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* AsyncGetPropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncGetPropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* AsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* PrepareAsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* AsyncCreatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncCreatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* AsyncDeletePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncDeletePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* AsyncUpdatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncUpdatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>* AsyncGetUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>* PrepareAsyncGetUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* AsyncBatchGetUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* PrepareAsyncBatchGetUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* AsyncListUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* PrepareAsyncListUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* AsyncAuditUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* PrepareAsyncAuditUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>* AsyncCreateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>* PrepareAsyncCreateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* AsyncBatchCreateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* PrepareAsyncBatchCreateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>* AsyncUpdateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::UserLink>* PrepareAsyncUpdateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* AsyncBatchUpdateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* PrepareAsyncBatchUpdateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncBatchDeleteUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncBatchDeleteUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>* AsyncGetWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>* PrepareAsyncGetWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>* AsyncUpdateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>* PrepareAsyncUpdateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>* AsyncCreateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::WebDataStream>* PrepareAsyncCreateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* AsyncListWebDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* PrepareAsyncListWebDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>* AsyncGetIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>* PrepareAsyncGetIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>* AsyncUpdateIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::IosAppDataStream>* PrepareAsyncUpdateIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* AsyncListIosAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* PrepareAsyncListIosAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AsyncGetAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* PrepareAsyncGetAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AsyncUpdateAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* PrepareAsyncUpdateAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* AsyncListAndroidAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* PrepareAsyncListAndroidAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AsyncGetEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* PrepareAsyncGetEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AsyncUpdateEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* PrepareAsyncUpdateEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>* AsyncCreateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>* PrepareAsyncCreateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>* AsyncUpdateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::FirebaseLink>* PrepareAsyncUpdateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* AsyncListFirebaseLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* PrepareAsyncListFirebaseLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GlobalSiteTag>* AsyncGetGlobalSiteTagRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GlobalSiteTag>* PrepareAsyncGetGlobalSiteTagRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AsyncCreateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>* PrepareAsyncCreateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AsyncUpdateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleAdsLink>* PrepareAsyncUpdateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* AsyncListGoogleAdsLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* PrepareAsyncListGoogleAdsLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::DataSharingSettings>* AsyncGetDataSharingSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::DataSharingSettings>* PrepareAsyncGetDataSharingSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AsyncGetMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* PrepareAsyncGetMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* AsyncListMeasurementProtocolSecretsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* PrepareAsyncListMeasurementProtocolSecretsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AsyncCreateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* PrepareAsyncCreateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AsyncUpdateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* PrepareAsyncUpdateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* AsyncSearchChangeHistoryEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* PrepareAsyncSearchChangeHistoryEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AsyncGetGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* PrepareAsyncGetGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AsyncUpdateGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* PrepareAsyncUpdateGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>* AsyncCreateConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>* PrepareAsyncCreateConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>* AsyncGetConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ConversionEvent>* PrepareAsyncGetConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* AsyncListConversionEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* PrepareAsyncListConversionEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>* AsyncCreateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>* PrepareAsyncCreateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>* AsyncUpdateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>* PrepareAsyncUpdateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* AsyncListCustomDimensionsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* PrepareAsyncListCustomDimensionsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncArchiveCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncArchiveCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>* AsyncGetCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomDimension>* PrepareAsyncGetCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>* AsyncCreateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>* PrepareAsyncCreateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>* AsyncUpdateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>* PrepareAsyncUpdateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* AsyncListCustomMetricsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* PrepareAsyncListCustomMetricsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncArchiveCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncArchiveCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>* AsyncGetCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::analytics::admin::v1alpha::CustomMetric>* PrepareAsyncGetCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::google::analytics::admin::v1alpha::Account* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>> AsyncGetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>>(AsyncGetAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>> PrepareAsyncGetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>>(PrepareAsyncGetAccountRaw(context, request, cq));
    }
    ::grpc::Status ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>> AsyncListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>>(AsyncListAccountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>> PrepareAsyncListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>>(PrepareAsyncListAccountsRaw(context, request, cq));
    }
    ::grpc::Status DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteAccountRaw(context, request, cq));
    }
    ::grpc::Status UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::google::analytics::admin::v1alpha::Account* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>> AsyncUpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>>(AsyncUpdateAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>> PrepareAsyncUpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>>(PrepareAsyncUpdateAccountRaw(context, request, cq));
    }
    ::grpc::Status ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>> AsyncProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>>(AsyncProvisionAccountTicketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>> PrepareAsyncProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>>(PrepareAsyncProvisionAccountTicketRaw(context, request, cq));
    }
    ::grpc::Status ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>> AsyncListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>>(AsyncListAccountSummariesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>> PrepareAsyncListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>>(PrepareAsyncListAccountSummariesRaw(context, request, cq));
    }
    ::grpc::Status GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> AsyncGetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(AsyncGetPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncGetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncGetPropertyRaw(context, request, cq));
    }
    ::grpc::Status ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>> AsyncListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>>(AsyncListPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>> PrepareAsyncListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>>(PrepareAsyncListPropertiesRaw(context, request, cq));
    }
    ::grpc::Status CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> AsyncCreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(AsyncCreatePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncCreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncCreatePropertyRaw(context, request, cq));
    }
    ::grpc::Status DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> AsyncDeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(AsyncDeletePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncDeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncDeletePropertyRaw(context, request, cq));
    }
    ::grpc::Status UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::google::analytics::admin::v1alpha::Property* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> AsyncUpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(AsyncUpdatePropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>> PrepareAsyncUpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>>(PrepareAsyncUpdatePropertyRaw(context, request, cq));
    }
    ::grpc::Status GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>> AsyncGetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>>(AsyncGetUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>> PrepareAsyncGetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>>(PrepareAsyncGetUserLinkRaw(context, request, cq));
    }
    ::grpc::Status BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>> AsyncBatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>>(AsyncBatchGetUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>> PrepareAsyncBatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>>(PrepareAsyncBatchGetUserLinksRaw(context, request, cq));
    }
    ::grpc::Status ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>> AsyncListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>>(AsyncListUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>> PrepareAsyncListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>>(PrepareAsyncListUserLinksRaw(context, request, cq));
    }
    ::grpc::Status AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>> AsyncAuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>>(AsyncAuditUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>> PrepareAsyncAuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>>(PrepareAsyncAuditUserLinksRaw(context, request, cq));
    }
    ::grpc::Status CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>> AsyncCreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>>(AsyncCreateUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>> PrepareAsyncCreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>>(PrepareAsyncCreateUserLinkRaw(context, request, cq));
    }
    ::grpc::Status BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>> AsyncBatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>>(AsyncBatchCreateUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>> PrepareAsyncBatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>>(PrepareAsyncBatchCreateUserLinksRaw(context, request, cq));
    }
    ::grpc::Status UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::google::analytics::admin::v1alpha::UserLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>> AsyncUpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>>(AsyncUpdateUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>> PrepareAsyncUpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>>(PrepareAsyncUpdateUserLinkRaw(context, request, cq));
    }
    ::grpc::Status BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>> AsyncBatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>>(AsyncBatchUpdateUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>> PrepareAsyncBatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>>(PrepareAsyncBatchUpdateUserLinksRaw(context, request, cq));
    }
    ::grpc::Status DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteUserLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteUserLinkRaw(context, request, cq));
    }
    ::grpc::Status BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncBatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncBatchDeleteUserLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncBatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncBatchDeleteUserLinksRaw(context, request, cq));
    }
    ::grpc::Status GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>> AsyncGetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>>(AsyncGetWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>> PrepareAsyncGetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>>(PrepareAsyncGetWebDataStreamRaw(context, request, cq));
    }
    ::grpc::Status DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteWebDataStreamRaw(context, request, cq));
    }
    ::grpc::Status UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>> AsyncUpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>>(AsyncUpdateWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>> PrepareAsyncUpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>>(PrepareAsyncUpdateWebDataStreamRaw(context, request, cq));
    }
    ::grpc::Status CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::google::analytics::admin::v1alpha::WebDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>> AsyncCreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>>(AsyncCreateWebDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>> PrepareAsyncCreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>>(PrepareAsyncCreateWebDataStreamRaw(context, request, cq));
    }
    ::grpc::Status ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>> AsyncListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>>(AsyncListWebDataStreamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>> PrepareAsyncListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>>(PrepareAsyncListWebDataStreamsRaw(context, request, cq));
    }
    ::grpc::Status GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>> AsyncGetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>>(AsyncGetIosAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>> PrepareAsyncGetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>>(PrepareAsyncGetIosAppDataStreamRaw(context, request, cq));
    }
    ::grpc::Status DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteIosAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteIosAppDataStreamRaw(context, request, cq));
    }
    ::grpc::Status UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>> AsyncUpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>>(AsyncUpdateIosAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>> PrepareAsyncUpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>>(PrepareAsyncUpdateIosAppDataStreamRaw(context, request, cq));
    }
    ::grpc::Status ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>> AsyncListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>>(AsyncListIosAppDataStreamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>> PrepareAsyncListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>>(PrepareAsyncListIosAppDataStreamsRaw(context, request, cq));
    }
    ::grpc::Status GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> AsyncGetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(AsyncGetAndroidAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> PrepareAsyncGetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(PrepareAsyncGetAndroidAppDataStreamRaw(context, request, cq));
    }
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteAndroidAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteAndroidAppDataStreamRaw(context, request, cq));
    }
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> AsyncUpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(AsyncUpdateAndroidAppDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>> PrepareAsyncUpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>>(PrepareAsyncUpdateAndroidAppDataStreamRaw(context, request, cq));
    }
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>> AsyncListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>>(AsyncListAndroidAppDataStreamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>> PrepareAsyncListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>>(PrepareAsyncListAndroidAppDataStreamsRaw(context, request, cq));
    }
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> AsyncGetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(AsyncGetEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> PrepareAsyncGetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(PrepareAsyncGetEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> AsyncUpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(AsyncUpdateEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>> PrepareAsyncUpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>>(PrepareAsyncUpdateEnhancedMeasurementSettingsRaw(context, request, cq));
    }
    ::grpc::Status CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::google::analytics::admin::v1alpha::FirebaseLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>> AsyncCreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>>(AsyncCreateFirebaseLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>> PrepareAsyncCreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>>(PrepareAsyncCreateFirebaseLinkRaw(context, request, cq));
    }
    ::grpc::Status UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::google::analytics::admin::v1alpha::FirebaseLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>> AsyncUpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>>(AsyncUpdateFirebaseLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>> PrepareAsyncUpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>>(PrepareAsyncUpdateFirebaseLinkRaw(context, request, cq));
    }
    ::grpc::Status DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteFirebaseLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteFirebaseLinkRaw(context, request, cq));
    }
    ::grpc::Status ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>> AsyncListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>>(AsyncListFirebaseLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>> PrepareAsyncListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>>(PrepareAsyncListFirebaseLinksRaw(context, request, cq));
    }
    ::grpc::Status GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>> AsyncGetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>>(AsyncGetGlobalSiteTagRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>> PrepareAsyncGetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>>(PrepareAsyncGetGlobalSiteTagRaw(context, request, cq));
    }
    ::grpc::Status CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>> AsyncCreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(AsyncCreateGoogleAdsLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>> PrepareAsyncCreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(PrepareAsyncCreateGoogleAdsLinkRaw(context, request, cq));
    }
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>> AsyncUpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(AsyncUpdateGoogleAdsLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>> PrepareAsyncUpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>>(PrepareAsyncUpdateGoogleAdsLinkRaw(context, request, cq));
    }
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteGoogleAdsLinkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteGoogleAdsLinkRaw(context, request, cq));
    }
    ::grpc::Status ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>> AsyncListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>>(AsyncListGoogleAdsLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>> PrepareAsyncListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>>(PrepareAsyncListGoogleAdsLinksRaw(context, request, cq));
    }
    ::grpc::Status GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::google::analytics::admin::v1alpha::DataSharingSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>> AsyncGetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>>(AsyncGetDataSharingSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>> PrepareAsyncGetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>>(PrepareAsyncGetDataSharingSettingsRaw(context, request, cq));
    }
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> AsyncGetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(AsyncGetMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> PrepareAsyncGetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(PrepareAsyncGetMeasurementProtocolSecretRaw(context, request, cq));
    }
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>> AsyncListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>>(AsyncListMeasurementProtocolSecretsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>> PrepareAsyncListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>>(PrepareAsyncListMeasurementProtocolSecretsRaw(context, request, cq));
    }
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> AsyncCreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(AsyncCreateMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> PrepareAsyncCreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(PrepareAsyncCreateMeasurementProtocolSecretRaw(context, request, cq));
    }
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteMeasurementProtocolSecretRaw(context, request, cq));
    }
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> AsyncUpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(AsyncUpdateMeasurementProtocolSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>> PrepareAsyncUpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>>(PrepareAsyncUpdateMeasurementProtocolSecretRaw(context, request, cq));
    }
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>> AsyncSearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>>(AsyncSearchChangeHistoryEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>> PrepareAsyncSearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>>(PrepareAsyncSearchChangeHistoryEventsRaw(context, request, cq));
    }
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> AsyncGetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(AsyncGetGoogleSignalsSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> PrepareAsyncGetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(PrepareAsyncGetGoogleSignalsSettingsRaw(context, request, cq));
    }
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> AsyncUpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(AsyncUpdateGoogleSignalsSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>> PrepareAsyncUpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>>(PrepareAsyncUpdateGoogleSignalsSettingsRaw(context, request, cq));
    }
    ::grpc::Status CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::google::analytics::admin::v1alpha::ConversionEvent* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>> AsyncCreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>>(AsyncCreateConversionEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>> PrepareAsyncCreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>>(PrepareAsyncCreateConversionEventRaw(context, request, cq));
    }
    ::grpc::Status GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::google::analytics::admin::v1alpha::ConversionEvent* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>> AsyncGetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>>(AsyncGetConversionEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>> PrepareAsyncGetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>>(PrepareAsyncGetConversionEventRaw(context, request, cq));
    }
    ::grpc::Status DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteConversionEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteConversionEventRaw(context, request, cq));
    }
    ::grpc::Status ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>> AsyncListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>>(AsyncListConversionEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>> PrepareAsyncListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>>(PrepareAsyncListConversionEventsRaw(context, request, cq));
    }
    ::grpc::Status CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>> AsyncCreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>>(AsyncCreateCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>> PrepareAsyncCreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>>(PrepareAsyncCreateCustomDimensionRaw(context, request, cq));
    }
    ::grpc::Status UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>> AsyncUpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>>(AsyncUpdateCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>> PrepareAsyncUpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>>(PrepareAsyncUpdateCustomDimensionRaw(context, request, cq));
    }
    ::grpc::Status ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>> AsyncListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>>(AsyncListCustomDimensionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>> PrepareAsyncListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>>(PrepareAsyncListCustomDimensionsRaw(context, request, cq));
    }
    ::grpc::Status ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncArchiveCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncArchiveCustomDimensionRaw(context, request, cq));
    }
    ::grpc::Status GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::google::analytics::admin::v1alpha::CustomDimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>> AsyncGetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>>(AsyncGetCustomDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>> PrepareAsyncGetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>>(PrepareAsyncGetCustomDimensionRaw(context, request, cq));
    }
    ::grpc::Status CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>> AsyncCreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>>(AsyncCreateCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>> PrepareAsyncCreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>>(PrepareAsyncCreateCustomMetricRaw(context, request, cq));
    }
    ::grpc::Status UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>> AsyncUpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>>(AsyncUpdateCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>> PrepareAsyncUpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>>(PrepareAsyncUpdateCustomMetricRaw(context, request, cq));
    }
    ::grpc::Status ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>> AsyncListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>>(AsyncListCustomMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>> PrepareAsyncListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>>(PrepareAsyncListCustomMetricsRaw(context, request, cq));
    }
    ::grpc::Status ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncArchiveCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncArchiveCustomMetricRaw(context, request, cq));
    }
    ::grpc::Status GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::google::analytics::admin::v1alpha::CustomMetric* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>> AsyncGetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>>(AsyncGetCustomMetricRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>> PrepareAsyncGetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>>(PrepareAsyncGetCustomMetricRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, std::function<void(::grpc::Status)>) override;
      void GetAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAccounts(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, std::function<void(::grpc::Status)>) override;
      void UpdateAccount(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response, std::function<void(::grpc::Status)>) override;
      void ProvisionAccountTicket(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAccountSummaries(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) override;
      void GetProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListProperties(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) override;
      void CreateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) override;
      void DeleteProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, std::function<void(::grpc::Status)>) override;
      void UpdateProperty(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)>) override;
      void GetUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchGetUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void ListUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void AuditUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)>) override;
      void CreateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchCreateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, std::function<void(::grpc::Status)>) override;
      void UpdateUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchUpdateUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteUserLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void BatchDeleteUserLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)>) override;
      void GetWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)>) override;
      void UpdateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, std::function<void(::grpc::Status)>) override;
      void CreateWebDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListWebDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, std::function<void(::grpc::Status)>) override;
      void GetIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, std::function<void(::grpc::Status)>) override;
      void UpdateIosAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListIosAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, std::function<void(::grpc::Status)>) override;
      void GetAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, std::function<void(::grpc::Status)>) override;
      void UpdateAndroidAppDataStream(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAndroidAppDataStreams(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, std::function<void(::grpc::Status)>) override;
      void GetEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, std::function<void(::grpc::Status)>) override;
      void UpdateEnhancedMeasurementSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, std::function<void(::grpc::Status)>) override;
      void CreateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, std::function<void(::grpc::Status)>) override;
      void UpdateFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteFirebaseLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void ListFirebaseLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response, std::function<void(::grpc::Status)>) override;
      void GetGlobalSiteTag(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, std::function<void(::grpc::Status)>) override;
      void CreateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, std::function<void(::grpc::Status)>) override;
      void UpdateGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteGoogleAdsLink(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response, std::function<void(::grpc::Status)>) override;
      void ListGoogleAdsLinks(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response, std::function<void(::grpc::Status)>) override;
      void GetDataSharingSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)>) override;
      void GetMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListMeasurementProtocolSecrets(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)>) override;
      void CreateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, std::function<void(::grpc::Status)>) override;
      void UpdateMeasurementProtocolSecret(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchChangeHistoryEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, std::function<void(::grpc::Status)>) override;
      void GetGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, std::function<void(::grpc::Status)>) override;
      void UpdateGoogleSignalsSettings(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, std::function<void(::grpc::Status)>) override;
      void CreateConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, std::function<void(::grpc::Status)>) override;
      void GetConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteConversionEvent(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListConversionEvents(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)>) override;
      void CreateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)>) override;
      void UpdateCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCustomDimensions(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ArchiveCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, std::function<void(::grpc::Status)>) override;
      void GetCustomDimension(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)>) override;
      void CreateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)>) override;
      void UpdateCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCustomMetrics(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ArchiveCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, std::function<void(::grpc::Status)>) override;
      void GetCustomMetric(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* AsyncGetAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* PrepareAsyncGetAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>* AsyncListAccountsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountsResponse>* PrepareAsyncListAccountsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* AsyncUpdateAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Account>* PrepareAsyncUpdateAccountRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* AsyncProvisionAccountTicketRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* PrepareAsyncProvisionAccountTicketRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* AsyncListAccountSummariesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* PrepareAsyncListAccountSummariesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AsyncGetPropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncGetPropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* AsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* PrepareAsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AsyncCreatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncCreatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AsyncDeletePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncDeletePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* AsyncUpdatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::Property>* PrepareAsyncUpdatePropertyRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AsyncGetUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* PrepareAsyncGetUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* AsyncBatchGetUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* PrepareAsyncBatchGetUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* AsyncListUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* PrepareAsyncListUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* AsyncAuditUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* PrepareAsyncAuditUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AsyncCreateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* PrepareAsyncCreateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* AsyncBatchCreateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* PrepareAsyncBatchCreateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* AsyncUpdateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::UserLink>* PrepareAsyncUpdateUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* AsyncBatchUpdateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* PrepareAsyncBatchUpdateUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteUserLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncBatchDeleteUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncBatchDeleteUserLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AsyncGetWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* PrepareAsyncGetWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AsyncUpdateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* PrepareAsyncUpdateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* AsyncCreateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::WebDataStream>* PrepareAsyncCreateWebDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* AsyncListWebDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* PrepareAsyncListWebDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* AsyncGetIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* PrepareAsyncGetIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* AsyncUpdateIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::IosAppDataStream>* PrepareAsyncUpdateIosAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* AsyncListIosAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* PrepareAsyncListIosAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AsyncGetAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* PrepareAsyncGetAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* AsyncUpdateAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* PrepareAsyncUpdateAndroidAppDataStreamRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* AsyncListAndroidAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* PrepareAsyncListAndroidAppDataStreamsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AsyncGetEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* PrepareAsyncGetEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* AsyncUpdateEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* PrepareAsyncUpdateEnhancedMeasurementSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* AsyncCreateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* PrepareAsyncCreateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* AsyncUpdateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::FirebaseLink>* PrepareAsyncUpdateFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteFirebaseLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* AsyncListFirebaseLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* PrepareAsyncListFirebaseLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>* AsyncGetGlobalSiteTagRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GlobalSiteTag>* PrepareAsyncGetGlobalSiteTagRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AsyncCreateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* PrepareAsyncCreateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* AsyncUpdateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleAdsLink>* PrepareAsyncUpdateGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteGoogleAdsLinkRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* AsyncListGoogleAdsLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* PrepareAsyncListGoogleAdsLinksRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>* AsyncGetDataSharingSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::DataSharingSettings>* PrepareAsyncGetDataSharingSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AsyncGetMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* PrepareAsyncGetMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* AsyncListMeasurementProtocolSecretsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* PrepareAsyncListMeasurementProtocolSecretsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AsyncCreateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* PrepareAsyncCreateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* AsyncUpdateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* PrepareAsyncUpdateMeasurementProtocolSecretRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* AsyncSearchChangeHistoryEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* PrepareAsyncSearchChangeHistoryEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AsyncGetGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* PrepareAsyncGetGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* AsyncUpdateGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* PrepareAsyncUpdateGoogleSignalsSettingsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* AsyncCreateConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* PrepareAsyncCreateConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* AsyncGetConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ConversionEvent>* PrepareAsyncGetConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteConversionEventRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* AsyncListConversionEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* PrepareAsyncListConversionEventsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AsyncCreateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* PrepareAsyncCreateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AsyncUpdateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* PrepareAsyncUpdateCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* AsyncListCustomDimensionsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* PrepareAsyncListCustomDimensionsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncArchiveCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncArchiveCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* AsyncGetCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomDimension>* PrepareAsyncGetCustomDimensionRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AsyncCreateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* PrepareAsyncCreateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AsyncUpdateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* PrepareAsyncUpdateCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* AsyncListCustomMetricsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* PrepareAsyncListCustomMetricsRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncArchiveCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncArchiveCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* AsyncGetCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::analytics::admin::v1alpha::CustomMetric>* PrepareAsyncGetCustomMetricRaw(::grpc::ClientContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAccounts_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_ProvisionAccountTicket_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAccountSummaries_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProperties_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserLink_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchGetUserLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUserLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_AuditUserLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateUserLink_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchCreateUserLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUserLink_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchUpdateUserLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUserLink_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchDeleteUserLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWebDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteWebDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateWebDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateWebDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_ListWebDataStreams_;
    const ::grpc::internal::RpcMethod rpcmethod_GetIosAppDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteIosAppDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateIosAppDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_ListIosAppDataStreams_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAndroidAppDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAndroidAppDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAndroidAppDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAndroidAppDataStreams_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEnhancedMeasurementSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateEnhancedMeasurementSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateFirebaseLink_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateFirebaseLink_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteFirebaseLink_;
    const ::grpc::internal::RpcMethod rpcmethod_ListFirebaseLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGlobalSiteTag_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateGoogleAdsLink_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateGoogleAdsLink_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteGoogleAdsLink_;
    const ::grpc::internal::RpcMethod rpcmethod_ListGoogleAdsLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDataSharingSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMeasurementProtocolSecret_;
    const ::grpc::internal::RpcMethod rpcmethod_ListMeasurementProtocolSecrets_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateMeasurementProtocolSecret_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteMeasurementProtocolSecret_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateMeasurementProtocolSecret_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchChangeHistoryEvents_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGoogleSignalsSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateGoogleSignalsSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateConversionEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConversionEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteConversionEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_ListConversionEvents_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCustomDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCustomDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCustomDimensions_;
    const ::grpc::internal::RpcMethod rpcmethod_ArchiveCustomDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCustomDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCustomMetric_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCustomMetric_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCustomMetrics_;
    const ::grpc::internal::RpcMethod rpcmethod_ArchiveCustomMetric_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCustomMetric_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Lookup for a single Account.
    virtual ::grpc::Status GetAccount(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response);
    // Returns all accounts accessible by the caller.
    //
    // Note that these accounts might not currently have GA4 properties.
    // Soft-deleted (ie: "trashed") accounts are excluded by default.
    // Returns an empty list if no relevant accounts are found.
    virtual ::grpc::Status ListAccounts(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response);
    // Marks target Account as soft-deleted (ie: "trashed") and returns it.
    //
    // This API does not have a method to restore soft-deleted accounts.
    // However, they can be restored using the Trash Can UI.
    //
    // If the accounts are not restored before the expiration time, the account
    // and all child resources (eg: Properties, GoogleAdsLinks, Streams,
    // UserLinks) will be permanently purged.
    // https://support.google.com/analytics/answer/6154772
    //
    // Returns an error if the target is not found.
    virtual ::grpc::Status DeleteAccount(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response);
    // Updates an account.
    virtual ::grpc::Status UpdateAccount(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response);
    // Requests a ticket for creating an account.
    virtual ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response);
    // Returns summaries of all accounts accessible by the caller.
    virtual ::grpc::Status ListAccountSummaries(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response);
    // Lookup for a single "GA4" Property.
    virtual ::grpc::Status GetProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response);
    // Returns child Properties under the specified parent Account.
    //
    // Only "GA4" properties will be returned.
    // Properties will be excluded if the caller does not have access.
    // Soft-deleted (ie: "trashed") properties are excluded by default.
    // Returns an empty list if no relevant properties are found.
    virtual ::grpc::Status ListProperties(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response);
    // Creates an "GA4" property with the specified location and attributes.
    virtual ::grpc::Status CreateProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response);
    // Marks target Property as soft-deleted (ie: "trashed") and returns it.
    //
    // This API does not have a method to restore soft-deleted properties.
    // However, they can be restored using the Trash Can UI.
    //
    // If the properties are not restored before the expiration time, the Property
    // and all child resources (eg: GoogleAdsLinks, Streams, UserLinks)
    // will be permanently purged.
    // https://support.google.com/analytics/answer/6154772
    //
    // Returns an error if the target is not found, or is not an GA4 Property.
    virtual ::grpc::Status DeleteProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response);
    // Updates a property.
    virtual ::grpc::Status UpdateProperty(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response);
    // Gets information about a user's link to an account or property.
    virtual ::grpc::Status GetUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response);
    // Gets information about multiple users' links to an account or property.
    virtual ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response);
    // Lists all user links on an account or property.
    virtual ::grpc::Status ListUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response);
    // Lists all user links on an account or property, including implicit ones
    // that come from effective permissions granted by groups or organization
    // admin roles.
    //
    // If a returned user link does not have direct permissions, they cannot
    // be removed from the account or property directly with the DeleteUserLink
    // command. They have to be removed from the group/etc that gives them
    // permissions, which is currently only usable/discoverable in the GA or GMP
    // UIs.
    virtual ::grpc::Status AuditUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response);
    // Creates a user link on an account or property.
    //
    // If the user with the specified email already has permissions on the
    // account or property, then the user's existing permissions will be unioned
    // with the permissions specified in the new UserLink.
    virtual ::grpc::Status CreateUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response);
    // Creates information about multiple users' links to an account or property.
    //
    // This method is transactional. If any UserLink cannot be created, none of
    // the UserLinks will be created.
    virtual ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response);
    // Updates a user link on an account or property.
    virtual ::grpc::Status UpdateUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response);
    // Updates information about multiple users' links to an account or property.
    virtual ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response);
    // Deletes a user link on an account or property.
    virtual ::grpc::Status DeleteUserLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response);
    // Deletes information about multiple users' links to an account or property.
    virtual ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response);
    // Lookup for a single WebDataStream
    virtual ::grpc::Status GetWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response);
    // Deletes a web stream on a property.
    virtual ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response);
    // Updates a web stream on a property.
    virtual ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response);
    // Creates a web stream with the specified location and attributes.
    virtual ::grpc::Status CreateWebDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response);
    // Returns child web data streams under the specified parent property.
    //
    // Web data streams will be excluded if the caller does not have access.
    // Returns an empty list if no relevant web data streams are found.
    virtual ::grpc::Status ListWebDataStreams(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response);
    // Lookup for a single IosAppDataStream
    virtual ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response);
    // Deletes an iOS app stream on a property.
    virtual ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response);
    // Updates an iOS app stream on a property.
    virtual ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response);
    // Returns child iOS app data streams under the specified parent property.
    //
    // iOS app data streams will be excluded if the caller does not have access.
    // Returns an empty list if no relevant iOS app data streams are found.
    virtual ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response);
    // Lookup for a single AndroidAppDataStream
    virtual ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response);
    // Deletes an android app stream on a property.
    virtual ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response);
    // Updates an android app stream on a property.
    virtual ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response);
    // Returns child android app streams under the specified parent property.
    //
    // Android app streams will be excluded if the caller does not have access.
    // Returns an empty list if no relevant android app streams are found.
    virtual ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response);
    // Returns the singleton enhanced measurement settings for this web stream.
    // Note that the stream must enable enhanced measurement for these settings to
    // take effect.
    virtual ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response);
    // Updates the singleton enhanced measurement settings for this web stream.
    // Note that the stream must enable enhanced measurement for these settings to
    // take effect.
    virtual ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response);
    // Creates a FirebaseLink.
    //
    // Properties can have at most one FirebaseLink.
    virtual ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response);
    // Updates a FirebaseLink on a property
    virtual ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response);
    // Deletes a FirebaseLink on a property
    virtual ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response);
    // Lists FirebaseLinks on a property.
    // Properties can have at most one FirebaseLink.
    virtual ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response);
    // Returns the Site Tag for the specified web stream.
    // Site Tags are immutable singletons.
    virtual ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response);
    // Creates a GoogleAdsLink.
    virtual ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response);
    // Updates a GoogleAdsLink on a property
    virtual ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response);
    // Deletes a GoogleAdsLink on a property
    virtual ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response);
    // Lists GoogleAdsLinks on a property.
    virtual ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response);
    // Get data sharing settings on an account.
    // Data sharing settings are singletons.
    virtual ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response);
    // Lookup for a single "GA4" MeasurementProtocolSecret.
    virtual ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response);
    // Returns child MeasurementProtocolSecrets under the specified parent
    // Property.
    virtual ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response);
    // Creates a measurement protocol secret.
    virtual ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response);
    // Deletes target MeasurementProtocolSecret.
    virtual ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response);
    // Updates a measurement protocol secret.
    virtual ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response);
    // Searches through all changes to an account or its children given the
    // specified set of filters.
    virtual ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response);
    // Lookup for Google Signals settings for a property.
    virtual ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response);
    // Updates Google Signals settings for a property.
    virtual ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response);
    // Creates a conversion event with the specified attributes.
    virtual ::grpc::Status CreateConversionEvent(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response);
    // Retrieve a single conversion event.
    virtual ::grpc::Status GetConversionEvent(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response);
    // Deletes a conversion event in a property.
    virtual ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response);
    // Returns a list of conversion events in the specified parent property.
    //
    // Returns an empty list if no conversion events are found.
    virtual ::grpc::Status ListConversionEvents(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response);
    // Creates a CustomDimension.
    virtual ::grpc::Status CreateCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response);
    // Updates a CustomDimension on a property.
    virtual ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response);
    // Lists CustomDimensions on a property.
    virtual ::grpc::Status ListCustomDimensions(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response);
    // Archives a CustomDimension on a property.
    virtual ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response);
    // Lookup for a single CustomDimension.
    virtual ::grpc::Status GetCustomDimension(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response);
    // Creates a CustomMetric.
    virtual ::grpc::Status CreateCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response);
    // Updates a CustomMetric on a property.
    virtual ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response);
    // Lists CustomMetrics on a property.
    virtual ::grpc::Status ListCustomMetrics(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response);
    // Archives a CustomMetric on a property.
    virtual ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response);
    // Lookup for a single CustomMetric.
    virtual ::grpc::Status GetCustomMetric(::grpc::ServerContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAccount() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAccount(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::Account>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAccounts() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccounts(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAccounts(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListAccountsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteAccount() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAccount(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAccount() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAccount(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::Account>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ProvisionAccountTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ProvisionAccountTicket() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ProvisionAccountTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvisionAccountTicket(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAccountSummaries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAccountSummaries() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListAccountSummaries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccountSummaries(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAccountSummaries(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProperty() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProperty(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::Property>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListProperties() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProperties(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListPropertiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateProperty() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_CreateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProperty(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::Property>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteProperty() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_DeleteProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProperty(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::Property>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateProperty() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_UpdateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProperty(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::Property>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserLink() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::UserLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchGetUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchGetUserLinks() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_BatchGetUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchGetUserLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListUserLinks() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ListUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUserLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListUserLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AuditUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AuditUserLinks() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_AuditUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuditUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuditUserLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateUserLink() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_CreateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUserLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::UserLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchCreateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchCreateUserLinks() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_BatchCreateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchCreateUserLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUserLink() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_UpdateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUserLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::UserLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchUpdateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchUpdateUserLinks() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_BatchUpdateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchUpdateUserLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteUserLink() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_DeleteUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUserLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchDeleteUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchDeleteUserLinks() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_BatchDeleteUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchDeleteUserLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetWebDataStream() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_GetWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWebDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::WebDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteWebDataStream() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_DeleteWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteWebDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateWebDataStream() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_UpdateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateWebDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::WebDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateWebDataStream() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_CreateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWebDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::WebDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListWebDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListWebDataStreams() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_ListWebDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWebDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWebDataStreams(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetIosAppDataStream() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_GetIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIosAppDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::IosAppDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteIosAppDataStream() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_DeleteIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteIosAppDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateIosAppDataStream() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_UpdateIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateIosAppDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::IosAppDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListIosAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListIosAppDataStreams() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_ListIosAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListIosAppDataStreams(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAndroidAppDataStream() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GetAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAndroidAppDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteAndroidAppDataStream() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_DeleteAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAndroidAppDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAndroidAppDataStream() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_UpdateAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAndroidAppDataStream(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::AndroidAppDataStream>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAndroidAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAndroidAppDataStreams() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_ListAndroidAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAndroidAppDataStreams(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_GetEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEnhancedMeasurementSettings(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_UpdateEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateEnhancedMeasurementSettings(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateFirebaseLink() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_CreateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateFirebaseLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::FirebaseLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateFirebaseLink() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_UpdateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateFirebaseLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::FirebaseLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteFirebaseLink() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_DeleteFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFirebaseLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListFirebaseLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListFirebaseLinks() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_ListFirebaseLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFirebaseLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGlobalSiteTag : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGlobalSiteTag() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_GetGlobalSiteTag() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGlobalSiteTag(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::GlobalSiteTag>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateGoogleAdsLink() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_CreateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateGoogleAdsLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::GoogleAdsLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateGoogleAdsLink() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_UpdateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGoogleAdsLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::GoogleAdsLink>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteGoogleAdsLink() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_DeleteGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteGoogleAdsLink(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListGoogleAdsLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListGoogleAdsLinks() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_ListGoogleAdsLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListGoogleAdsLinks(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDataSharingSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDataSharingSettings() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_GetDataSharingSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataSharingSettings(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::DataSharingSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_GetMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMeasurementProtocolSecret(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListMeasurementProtocolSecrets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListMeasurementProtocolSecrets() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_ListMeasurementProtocolSecrets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMeasurementProtocolSecrets(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_CreateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMeasurementProtocolSecret(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_DeleteMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMeasurementProtocolSecret(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_UpdateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMeasurementProtocolSecret(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchChangeHistoryEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchChangeHistoryEvents() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_SearchChangeHistoryEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchChangeHistoryEvents(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_GetGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGoogleSignalsSettings(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_UpdateGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGoogleSignalsSettings(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateConversionEvent() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_CreateConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateConversionEvent(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ConversionEvent>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConversionEvent() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_GetConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConversionEvent(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ConversionEvent>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteConversionEvent() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_DeleteConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteConversionEvent(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListConversionEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListConversionEvents() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_ListConversionEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConversionEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConversionEvents(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCustomDimension() {
      ::grpc::Service::MarkMethodAsync(58);
    }
    ~WithAsyncMethod_CreateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCustomDimension(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::CustomDimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCustomDimension() {
      ::grpc::Service::MarkMethodAsync(59);
    }
    ~WithAsyncMethod_UpdateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCustomDimension(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::CustomDimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCustomDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCustomDimensions() {
      ::grpc::Service::MarkMethodAsync(60);
    }
    ~WithAsyncMethod_ListCustomDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomDimensions(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCustomDimensions(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ArchiveCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ArchiveCustomDimension() {
      ::grpc::Service::MarkMethodAsync(61);
    }
    ~WithAsyncMethod_ArchiveCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestArchiveCustomDimension(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCustomDimension() {
      ::grpc::Service::MarkMethodAsync(62);
    }
    ~WithAsyncMethod_GetCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomDimension(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::CustomDimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(62, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCustomMetric() {
      ::grpc::Service::MarkMethodAsync(63);
    }
    ~WithAsyncMethod_CreateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCustomMetric(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::CustomMetric>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(63, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCustomMetric() {
      ::grpc::Service::MarkMethodAsync(64);
    }
    ~WithAsyncMethod_UpdateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCustomMetric(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::CustomMetric>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(64, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCustomMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCustomMetrics() {
      ::grpc::Service::MarkMethodAsync(65);
    }
    ~WithAsyncMethod_ListCustomMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomMetrics(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCustomMetrics(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(65, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ArchiveCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ArchiveCustomMetric() {
      ::grpc::Service::MarkMethodAsync(66);
    }
    ~WithAsyncMethod_ArchiveCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestArchiveCustomMetric(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(66, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCustomMetric() {
      ::grpc::Service::MarkMethodAsync(67);
    }
    ~WithAsyncMethod_GetCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomMetric(::grpc::ServerContext* context, ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::analytics::admin::v1alpha::CustomMetric>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(67, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetAccount<WithAsyncMethod_ListAccounts<WithAsyncMethod_DeleteAccount<WithAsyncMethod_UpdateAccount<WithAsyncMethod_ProvisionAccountTicket<WithAsyncMethod_ListAccountSummaries<WithAsyncMethod_GetProperty<WithAsyncMethod_ListProperties<WithAsyncMethod_CreateProperty<WithAsyncMethod_DeleteProperty<WithAsyncMethod_UpdateProperty<WithAsyncMethod_GetUserLink<WithAsyncMethod_BatchGetUserLinks<WithAsyncMethod_ListUserLinks<WithAsyncMethod_AuditUserLinks<WithAsyncMethod_CreateUserLink<WithAsyncMethod_BatchCreateUserLinks<WithAsyncMethod_UpdateUserLink<WithAsyncMethod_BatchUpdateUserLinks<WithAsyncMethod_DeleteUserLink<WithAsyncMethod_BatchDeleteUserLinks<WithAsyncMethod_GetWebDataStream<WithAsyncMethod_DeleteWebDataStream<WithAsyncMethod_UpdateWebDataStream<WithAsyncMethod_CreateWebDataStream<WithAsyncMethod_ListWebDataStreams<WithAsyncMethod_GetIosAppDataStream<WithAsyncMethod_DeleteIosAppDataStream<WithAsyncMethod_UpdateIosAppDataStream<WithAsyncMethod_ListIosAppDataStreams<WithAsyncMethod_GetAndroidAppDataStream<WithAsyncMethod_DeleteAndroidAppDataStream<WithAsyncMethod_UpdateAndroidAppDataStream<WithAsyncMethod_ListAndroidAppDataStreams<WithAsyncMethod_GetEnhancedMeasurementSettings<WithAsyncMethod_UpdateEnhancedMeasurementSettings<WithAsyncMethod_CreateFirebaseLink<WithAsyncMethod_UpdateFirebaseLink<WithAsyncMethod_DeleteFirebaseLink<WithAsyncMethod_ListFirebaseLinks<WithAsyncMethod_GetGlobalSiteTag<WithAsyncMethod_CreateGoogleAdsLink<WithAsyncMethod_UpdateGoogleAdsLink<WithAsyncMethod_DeleteGoogleAdsLink<WithAsyncMethod_ListGoogleAdsLinks<WithAsyncMethod_GetDataSharingSettings<WithAsyncMethod_GetMeasurementProtocolSecret<WithAsyncMethod_ListMeasurementProtocolSecrets<WithAsyncMethod_CreateMeasurementProtocolSecret<WithAsyncMethod_DeleteMeasurementProtocolSecret<WithAsyncMethod_UpdateMeasurementProtocolSecret<WithAsyncMethod_SearchChangeHistoryEvents<WithAsyncMethod_GetGoogleSignalsSettings<WithAsyncMethod_UpdateGoogleSignalsSettings<WithAsyncMethod_CreateConversionEvent<WithAsyncMethod_GetConversionEvent<WithAsyncMethod_DeleteConversionEvent<WithAsyncMethod_ListConversionEvents<WithAsyncMethod_CreateCustomDimension<WithAsyncMethod_UpdateCustomDimension<WithAsyncMethod_ListCustomDimensions<WithAsyncMethod_ArchiveCustomDimension<WithAsyncMethod_GetCustomDimension<WithAsyncMethod_CreateCustomMetric<WithAsyncMethod_UpdateCustomMetric<WithAsyncMethod_ListCustomMetrics<WithAsyncMethod_ArchiveCustomMetric<WithAsyncMethod_GetCustomMetric<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAccount() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response) { return this->GetAccount(context, request, response); }));}
    void SetMessageAllocatorFor_GetAccount(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAccounts() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListAccountsRequest* request, ::google::analytics::admin::v1alpha::ListAccountsResponse* response) { return this->ListAccounts(context, request, response); }));}
    void SetMessageAllocatorFor_ListAccounts(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccounts(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAccounts(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteAccount() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* request, ::google::protobuf::Empty* response) { return this->DeleteAccount(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteAccount(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAccount() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* request, ::google::analytics::admin::v1alpha::Account* response) { return this->UpdateAccount(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAccount(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ProvisionAccountTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ProvisionAccountTicket() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* request, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* response) { return this->ProvisionAccountTicket(context, request, response); }));}
    void SetMessageAllocatorFor_ProvisionAccountTicket(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ProvisionAccountTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvisionAccountTicket(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAccountSummaries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAccountSummaries() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* request, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* response) { return this->ListAccountSummaries(context, request, response); }));}
    void SetMessageAllocatorFor_ListAccountSummaries(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAccountSummaries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccountSummaries(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAccountSummaries(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProperty() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetPropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) { return this->GetProperty(context, request, response); }));}
    void SetMessageAllocatorFor_GetProperty(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListProperties() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* request, ::google::analytics::admin::v1alpha::ListPropertiesResponse* response) { return this->ListProperties(context, request, response); }));}
    void SetMessageAllocatorFor_ListProperties(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateProperty() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) { return this->CreateProperty(context, request, response); }));}
    void SetMessageAllocatorFor_CreateProperty(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteProperty() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) { return this->DeleteProperty(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteProperty(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateProperty() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* request, ::google::analytics::admin::v1alpha::Property* response) { return this->UpdateProperty(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateProperty(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserLink() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response) { return this->GetUserLink(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchGetUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchGetUserLinks() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* response) { return this->BatchGetUserLinks(context, request, response); }));}
    void SetMessageAllocatorFor_BatchGetUserLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchGetUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchGetUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListUserLinks() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* request, ::google::analytics::admin::v1alpha::ListUserLinksResponse* response) { return this->ListUserLinks(context, request, response); }));}
    void SetMessageAllocatorFor_ListUserLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AuditUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AuditUserLinks() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* request, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* response) { return this->AuditUserLinks(context, request, response); }));}
    void SetMessageAllocatorFor_AuditUserLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AuditUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuditUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuditUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateUserLink() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response) { return this->CreateUserLink(context, request, response); }));}
    void SetMessageAllocatorFor_CreateUserLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchCreateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchCreateUserLinks() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* response) { return this->BatchCreateUserLinks(context, request, response); }));}
    void SetMessageAllocatorFor_BatchCreateUserLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchCreateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchCreateUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateUserLink() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* request, ::google::analytics::admin::v1alpha::UserLink* response) { return this->UpdateUserLink(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUserLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchUpdateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchUpdateUserLinks() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* request, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* response) { return this->BatchUpdateUserLinks(context, request, response); }));}
    void SetMessageAllocatorFor_BatchUpdateUserLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchUpdateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchUpdateUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteUserLink() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* request, ::google::protobuf::Empty* response) { return this->DeleteUserLink(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteUserLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchDeleteUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchDeleteUserLinks() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* request, ::google::protobuf::Empty* response) { return this->BatchDeleteUserLinks(context, request, response); }));}
    void SetMessageAllocatorFor_BatchDeleteUserLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchDeleteUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchDeleteUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetWebDataStream() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response) { return this->GetWebDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_GetWebDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteWebDataStream() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* request, ::google::protobuf::Empty* response) { return this->DeleteWebDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteWebDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateWebDataStream() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response) { return this->UpdateWebDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateWebDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateWebDataStream() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* request, ::google::analytics::admin::v1alpha::WebDataStream* response) { return this->CreateWebDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_CreateWebDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListWebDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListWebDataStreams() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* response) { return this->ListWebDataStreams(context, request, response); }));}
    void SetMessageAllocatorFor_ListWebDataStreams(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListWebDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWebDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListWebDataStreams(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetIosAppDataStream() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) { return this->GetIosAppDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_GetIosAppDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetIosAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteIosAppDataStream() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* request, ::google::protobuf::Empty* response) { return this->DeleteIosAppDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteIosAppDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteIosAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateIosAppDataStream() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::IosAppDataStream* response) { return this->UpdateIosAppDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateIosAppDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateIosAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListIosAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListIosAppDataStreams() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* response) { return this->ListIosAppDataStreams(context, request, response); }));}
    void SetMessageAllocatorFor_ListIosAppDataStreams(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListIosAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListIosAppDataStreams(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAndroidAppDataStream() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) { return this->GetAndroidAppDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_GetAndroidAppDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAndroidAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteAndroidAppDataStream() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* request, ::google::protobuf::Empty* response) { return this->DeleteAndroidAppDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteAndroidAppDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAndroidAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAndroidAppDataStream() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* request, ::google::analytics::admin::v1alpha::AndroidAppDataStream* response) { return this->UpdateAndroidAppDataStream(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAndroidAppDataStream(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAndroidAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAndroidAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAndroidAppDataStreams() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* request, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* response) { return this->ListAndroidAppDataStreams(context, request, response); }));}
    void SetMessageAllocatorFor_ListAndroidAppDataStreams(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAndroidAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAndroidAppDataStreams(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) { return this->GetEnhancedMeasurementSettings(context, request, response); }));}
    void SetMessageAllocatorFor_GetEnhancedMeasurementSettings(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEnhancedMeasurementSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* request, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* response) { return this->UpdateEnhancedMeasurementSettings(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateEnhancedMeasurementSettings(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateEnhancedMeasurementSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateFirebaseLink() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response) { return this->CreateFirebaseLink(context, request, response); }));}
    void SetMessageAllocatorFor_CreateFirebaseLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateFirebaseLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateFirebaseLink() {
      ::grpc::Service::MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* request, ::google::analytics::admin::v1alpha::FirebaseLink* response) { return this->UpdateFirebaseLink(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateFirebaseLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateFirebaseLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteFirebaseLink() {
      ::grpc::Service::MarkMethodCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* request, ::google::protobuf::Empty* response) { return this->DeleteFirebaseLink(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteFirebaseLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFirebaseLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListFirebaseLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListFirebaseLinks() {
      ::grpc::Service::MarkMethodCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* request, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* response) { return this->ListFirebaseLinks(context, request, response); }));}
    void SetMessageAllocatorFor_ListFirebaseLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListFirebaseLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFirebaseLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGlobalSiteTag : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGlobalSiteTag() {
      ::grpc::Service::MarkMethodCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* request, ::google::analytics::admin::v1alpha::GlobalSiteTag* response) { return this->GetGlobalSiteTag(context, request, response); }));}
    void SetMessageAllocatorFor_GetGlobalSiteTag(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGlobalSiteTag() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGlobalSiteTag(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateGoogleAdsLink() {
      ::grpc::Service::MarkMethodCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) { return this->CreateGoogleAdsLink(context, request, response); }));}
    void SetMessageAllocatorFor_CreateGoogleAdsLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateGoogleAdsLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateGoogleAdsLink() {
      ::grpc::Service::MarkMethodCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* request, ::google::analytics::admin::v1alpha::GoogleAdsLink* response) { return this->UpdateGoogleAdsLink(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateGoogleAdsLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGoogleAdsLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteGoogleAdsLink() {
      ::grpc::Service::MarkMethodCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* request, ::google::protobuf::Empty* response) { return this->DeleteGoogleAdsLink(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteGoogleAdsLink(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteGoogleAdsLink(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListGoogleAdsLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListGoogleAdsLinks() {
      ::grpc::Service::MarkMethodCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* request, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* response) { return this->ListGoogleAdsLinks(context, request, response); }));}
    void SetMessageAllocatorFor_ListGoogleAdsLinks(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListGoogleAdsLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListGoogleAdsLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDataSharingSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDataSharingSettings() {
      ::grpc::Service::MarkMethodCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* request, ::google::analytics::admin::v1alpha::DataSharingSettings* response) { return this->GetDataSharingSettings(context, request, response); }));}
    void SetMessageAllocatorFor_GetDataSharingSettings(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDataSharingSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataSharingSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) { return this->GetMeasurementProtocolSecret(context, request, response); }));}
    void SetMessageAllocatorFor_GetMeasurementProtocolSecret(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListMeasurementProtocolSecrets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListMeasurementProtocolSecrets() {
      ::grpc::Service::MarkMethodCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* request, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* response) { return this->ListMeasurementProtocolSecrets(context, request, response); }));}
    void SetMessageAllocatorFor_ListMeasurementProtocolSecrets(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListMeasurementProtocolSecrets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMeasurementProtocolSecrets(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) { return this->CreateMeasurementProtocolSecret(context, request, response); }));}
    void SetMessageAllocatorFor_CreateMeasurementProtocolSecret(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* request, ::google::protobuf::Empty* response) { return this->DeleteMeasurementProtocolSecret(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteMeasurementProtocolSecret(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* request, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* response) { return this->UpdateMeasurementProtocolSecret(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateMeasurementProtocolSecret(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchChangeHistoryEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchChangeHistoryEvents() {
      ::grpc::Service::MarkMethodCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* request, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* response) { return this->SearchChangeHistoryEvents(context, request, response); }));}
    void SetMessageAllocatorFor_SearchChangeHistoryEvents(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchChangeHistoryEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchChangeHistoryEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) { return this->GetGoogleSignalsSettings(context, request, response); }));}
    void SetMessageAllocatorFor_GetGoogleSignalsSettings(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGoogleSignalsSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* request, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* response) { return this->UpdateGoogleSignalsSettings(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateGoogleSignalsSettings(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGoogleSignalsSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateConversionEvent() {
      ::grpc::Service::MarkMethodCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response) { return this->CreateConversionEvent(context, request, response); }));}
    void SetMessageAllocatorFor_CreateConversionEvent(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateConversionEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConversionEvent() {
      ::grpc::Service::MarkMethodCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* request, ::google::analytics::admin::v1alpha::ConversionEvent* response) { return this->GetConversionEvent(context, request, response); }));}
    void SetMessageAllocatorFor_GetConversionEvent(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConversionEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteConversionEvent() {
      ::grpc::Service::MarkMethodCallback(56,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* request, ::google::protobuf::Empty* response) { return this->DeleteConversionEvent(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteConversionEvent(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(56);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteConversionEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListConversionEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListConversionEvents() {
      ::grpc::Service::MarkMethodCallback(57,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* request, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* response) { return this->ListConversionEvents(context, request, response); }));}
    void SetMessageAllocatorFor_ListConversionEvents(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(57);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListConversionEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConversionEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListConversionEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateCustomDimension() {
      ::grpc::Service::MarkMethodCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response) { return this->CreateCustomDimension(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCustomDimension(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(58);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateCustomDimension() {
      ::grpc::Service::MarkMethodCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response) { return this->UpdateCustomDimension(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCustomDimension(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(59);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCustomDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCustomDimensions() {
      ::grpc::Service::MarkMethodCallback(60,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* request, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* response) { return this->ListCustomDimensions(context, request, response); }));}
    void SetMessageAllocatorFor_ListCustomDimensions(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(60);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCustomDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomDimensions(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCustomDimensions(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ArchiveCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ArchiveCustomDimension() {
      ::grpc::Service::MarkMethodCallback(61,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* request, ::google::protobuf::Empty* response) { return this->ArchiveCustomDimension(context, request, response); }));}
    void SetMessageAllocatorFor_ArchiveCustomDimension(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(61);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ArchiveCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ArchiveCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCustomDimension() {
      ::grpc::Service::MarkMethodCallback(62,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* request, ::google::analytics::admin::v1alpha::CustomDimension* response) { return this->GetCustomDimension(context, request, response); }));}
    void SetMessageAllocatorFor_GetCustomDimension(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(62);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateCustomMetric() {
      ::grpc::Service::MarkMethodCallback(63,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response) { return this->CreateCustomMetric(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCustomMetric(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(63);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateCustomMetric() {
      ::grpc::Service::MarkMethodCallback(64,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response) { return this->UpdateCustomMetric(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCustomMetric(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(64);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCustomMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCustomMetrics() {
      ::grpc::Service::MarkMethodCallback(65,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* request, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* response) { return this->ListCustomMetrics(context, request, response); }));}
    void SetMessageAllocatorFor_ListCustomMetrics(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(65);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCustomMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomMetrics(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCustomMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ArchiveCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ArchiveCustomMetric() {
      ::grpc::Service::MarkMethodCallback(66,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* request, ::google::protobuf::Empty* response) { return this->ArchiveCustomMetric(context, request, response); }));}
    void SetMessageAllocatorFor_ArchiveCustomMetric(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(66);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ArchiveCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ArchiveCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCustomMetric() {
      ::grpc::Service::MarkMethodCallback(67,
          new ::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* request, ::google::analytics::admin::v1alpha::CustomMetric* response) { return this->GetCustomMetric(context, request, response); }));}
    void SetMessageAllocatorFor_GetCustomMetric(
        ::grpc::MessageAllocator< ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(67);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetAccount<WithCallbackMethod_ListAccounts<WithCallbackMethod_DeleteAccount<WithCallbackMethod_UpdateAccount<WithCallbackMethod_ProvisionAccountTicket<WithCallbackMethod_ListAccountSummaries<WithCallbackMethod_GetProperty<WithCallbackMethod_ListProperties<WithCallbackMethod_CreateProperty<WithCallbackMethod_DeleteProperty<WithCallbackMethod_UpdateProperty<WithCallbackMethod_GetUserLink<WithCallbackMethod_BatchGetUserLinks<WithCallbackMethod_ListUserLinks<WithCallbackMethod_AuditUserLinks<WithCallbackMethod_CreateUserLink<WithCallbackMethod_BatchCreateUserLinks<WithCallbackMethod_UpdateUserLink<WithCallbackMethod_BatchUpdateUserLinks<WithCallbackMethod_DeleteUserLink<WithCallbackMethod_BatchDeleteUserLinks<WithCallbackMethod_GetWebDataStream<WithCallbackMethod_DeleteWebDataStream<WithCallbackMethod_UpdateWebDataStream<WithCallbackMethod_CreateWebDataStream<WithCallbackMethod_ListWebDataStreams<WithCallbackMethod_GetIosAppDataStream<WithCallbackMethod_DeleteIosAppDataStream<WithCallbackMethod_UpdateIosAppDataStream<WithCallbackMethod_ListIosAppDataStreams<WithCallbackMethod_GetAndroidAppDataStream<WithCallbackMethod_DeleteAndroidAppDataStream<WithCallbackMethod_UpdateAndroidAppDataStream<WithCallbackMethod_ListAndroidAppDataStreams<WithCallbackMethod_GetEnhancedMeasurementSettings<WithCallbackMethod_UpdateEnhancedMeasurementSettings<WithCallbackMethod_CreateFirebaseLink<WithCallbackMethod_UpdateFirebaseLink<WithCallbackMethod_DeleteFirebaseLink<WithCallbackMethod_ListFirebaseLinks<WithCallbackMethod_GetGlobalSiteTag<WithCallbackMethod_CreateGoogleAdsLink<WithCallbackMethod_UpdateGoogleAdsLink<WithCallbackMethod_DeleteGoogleAdsLink<WithCallbackMethod_ListGoogleAdsLinks<WithCallbackMethod_GetDataSharingSettings<WithCallbackMethod_GetMeasurementProtocolSecret<WithCallbackMethod_ListMeasurementProtocolSecrets<WithCallbackMethod_CreateMeasurementProtocolSecret<WithCallbackMethod_DeleteMeasurementProtocolSecret<WithCallbackMethod_UpdateMeasurementProtocolSecret<WithCallbackMethod_SearchChangeHistoryEvents<WithCallbackMethod_GetGoogleSignalsSettings<WithCallbackMethod_UpdateGoogleSignalsSettings<WithCallbackMethod_CreateConversionEvent<WithCallbackMethod_GetConversionEvent<WithCallbackMethod_DeleteConversionEvent<WithCallbackMethod_ListConversionEvents<WithCallbackMethod_CreateCustomDimension<WithCallbackMethod_UpdateCustomDimension<WithCallbackMethod_ListCustomDimensions<WithCallbackMethod_ArchiveCustomDimension<WithCallbackMethod_GetCustomDimension<WithCallbackMethod_CreateCustomMetric<WithCallbackMethod_UpdateCustomMetric<WithCallbackMethod_ListCustomMetrics<WithCallbackMethod_ArchiveCustomMetric<WithCallbackMethod_GetCustomMetric<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAccount() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAccounts() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccounts(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteAccount() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAccount() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ProvisionAccountTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ProvisionAccountTicket() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ProvisionAccountTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAccountSummaries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAccountSummaries() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListAccountSummaries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccountSummaries(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProperty() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListProperties() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateProperty() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_CreateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteProperty() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_DeleteProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateProperty() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_UpdateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserLink() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchGetUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchGetUserLinks() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_BatchGetUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListUserLinks() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ListUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AuditUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AuditUserLinks() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_AuditUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuditUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateUserLink() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_CreateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchCreateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchCreateUserLinks() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_BatchCreateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUserLink() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_UpdateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchUpdateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchUpdateUserLinks() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_BatchUpdateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteUserLink() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_DeleteUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchDeleteUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchDeleteUserLinks() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_BatchDeleteUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetWebDataStream() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_GetWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteWebDataStream() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_DeleteWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateWebDataStream() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_UpdateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateWebDataStream() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_CreateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListWebDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListWebDataStreams() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_ListWebDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWebDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetIosAppDataStream() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_GetIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteIosAppDataStream() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_DeleteIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateIosAppDataStream() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_UpdateIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListIosAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListIosAppDataStreams() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_ListIosAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAndroidAppDataStream() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GetAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteAndroidAppDataStream() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_DeleteAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAndroidAppDataStream() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_UpdateAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAndroidAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAndroidAppDataStreams() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_ListAndroidAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_GetEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_UpdateEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateFirebaseLink() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_CreateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateFirebaseLink() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_UpdateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteFirebaseLink() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_DeleteFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListFirebaseLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListFirebaseLinks() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_ListFirebaseLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGlobalSiteTag : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGlobalSiteTag() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_GetGlobalSiteTag() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateGoogleAdsLink() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_CreateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateGoogleAdsLink() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_UpdateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteGoogleAdsLink() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_DeleteGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListGoogleAdsLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListGoogleAdsLinks() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_ListGoogleAdsLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDataSharingSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDataSharingSettings() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_GetDataSharingSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_GetMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListMeasurementProtocolSecrets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListMeasurementProtocolSecrets() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_ListMeasurementProtocolSecrets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_CreateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_DeleteMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_UpdateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchChangeHistoryEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchChangeHistoryEvents() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_SearchChangeHistoryEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_GetGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_UpdateGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateConversionEvent() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_CreateConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConversionEvent() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_GetConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteConversionEvent() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_DeleteConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListConversionEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListConversionEvents() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_ListConversionEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConversionEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCustomDimension() {
      ::grpc::Service::MarkMethodGeneric(58);
    }
    ~WithGenericMethod_CreateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCustomDimension() {
      ::grpc::Service::MarkMethodGeneric(59);
    }
    ~WithGenericMethod_UpdateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCustomDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCustomDimensions() {
      ::grpc::Service::MarkMethodGeneric(60);
    }
    ~WithGenericMethod_ListCustomDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomDimensions(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ArchiveCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ArchiveCustomDimension() {
      ::grpc::Service::MarkMethodGeneric(61);
    }
    ~WithGenericMethod_ArchiveCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCustomDimension() {
      ::grpc::Service::MarkMethodGeneric(62);
    }
    ~WithGenericMethod_GetCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCustomMetric() {
      ::grpc::Service::MarkMethodGeneric(63);
    }
    ~WithGenericMethod_CreateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCustomMetric() {
      ::grpc::Service::MarkMethodGeneric(64);
    }
    ~WithGenericMethod_UpdateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCustomMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCustomMetrics() {
      ::grpc::Service::MarkMethodGeneric(65);
    }
    ~WithGenericMethod_ListCustomMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomMetrics(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ArchiveCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ArchiveCustomMetric() {
      ::grpc::Service::MarkMethodGeneric(66);
    }
    ~WithGenericMethod_ArchiveCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCustomMetric() {
      ::grpc::Service::MarkMethodGeneric(67);
    }
    ~WithGenericMethod_GetCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAccount() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAccounts() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccounts(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAccounts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteAccount() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAccount() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ProvisionAccountTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ProvisionAccountTicket() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ProvisionAccountTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvisionAccountTicket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAccountSummaries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAccountSummaries() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListAccountSummaries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccountSummaries(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAccountSummaries(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProperty() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListProperties() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProperties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateProperty() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_CreateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteProperty() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_DeleteProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateProperty() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_UpdateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserLink() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchGetUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchGetUserLinks() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_BatchGetUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchGetUserLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListUserLinks() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ListUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUserLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AuditUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AuditUserLinks() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_AuditUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuditUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuditUserLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateUserLink() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_CreateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUserLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchCreateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchCreateUserLinks() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_BatchCreateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchCreateUserLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUserLink() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_UpdateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUserLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchUpdateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchUpdateUserLinks() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_BatchUpdateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchUpdateUserLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteUserLink() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_DeleteUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUserLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchDeleteUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchDeleteUserLinks() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_BatchDeleteUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchDeleteUserLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetWebDataStream() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_GetWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWebDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteWebDataStream() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_DeleteWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteWebDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateWebDataStream() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_UpdateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateWebDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateWebDataStream() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_CreateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWebDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListWebDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListWebDataStreams() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_ListWebDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWebDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWebDataStreams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetIosAppDataStream() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_GetIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIosAppDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteIosAppDataStream() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_DeleteIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteIosAppDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateIosAppDataStream() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_UpdateIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateIosAppDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListIosAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListIosAppDataStreams() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_ListIosAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListIosAppDataStreams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAndroidAppDataStream() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_GetAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAndroidAppDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteAndroidAppDataStream() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_DeleteAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAndroidAppDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAndroidAppDataStream() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_UpdateAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAndroidAppDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAndroidAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAndroidAppDataStreams() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_ListAndroidAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAndroidAppDataStreams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_GetEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEnhancedMeasurementSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_UpdateEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateEnhancedMeasurementSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateFirebaseLink() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_CreateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateFirebaseLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateFirebaseLink() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_UpdateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateFirebaseLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteFirebaseLink() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_DeleteFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFirebaseLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListFirebaseLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListFirebaseLinks() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_ListFirebaseLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFirebaseLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGlobalSiteTag : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGlobalSiteTag() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_GetGlobalSiteTag() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGlobalSiteTag(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateGoogleAdsLink() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_CreateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateGoogleAdsLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateGoogleAdsLink() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_UpdateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGoogleAdsLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteGoogleAdsLink() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_DeleteGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteGoogleAdsLink(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListGoogleAdsLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListGoogleAdsLinks() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_ListGoogleAdsLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListGoogleAdsLinks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDataSharingSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDataSharingSettings() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_GetDataSharingSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataSharingSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_GetMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListMeasurementProtocolSecrets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListMeasurementProtocolSecrets() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_ListMeasurementProtocolSecrets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMeasurementProtocolSecrets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_CreateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_DeleteMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_UpdateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchChangeHistoryEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchChangeHistoryEvents() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_SearchChangeHistoryEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchChangeHistoryEvents(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_GetGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGoogleSignalsSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_UpdateGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGoogleSignalsSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateConversionEvent() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_CreateConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateConversionEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConversionEvent() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_GetConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConversionEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteConversionEvent() {
      ::grpc::Service::MarkMethodRaw(56);
    }
    ~WithRawMethod_DeleteConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteConversionEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListConversionEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListConversionEvents() {
      ::grpc::Service::MarkMethodRaw(57);
    }
    ~WithRawMethod_ListConversionEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConversionEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConversionEvents(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCustomDimension() {
      ::grpc::Service::MarkMethodRaw(58);
    }
    ~WithRawMethod_CreateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCustomDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCustomDimension() {
      ::grpc::Service::MarkMethodRaw(59);
    }
    ~WithRawMethod_UpdateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCustomDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCustomDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCustomDimensions() {
      ::grpc::Service::MarkMethodRaw(60);
    }
    ~WithRawMethod_ListCustomDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomDimensions(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCustomDimensions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ArchiveCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ArchiveCustomDimension() {
      ::grpc::Service::MarkMethodRaw(61);
    }
    ~WithRawMethod_ArchiveCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestArchiveCustomDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCustomDimension() {
      ::grpc::Service::MarkMethodRaw(62);
    }
    ~WithRawMethod_GetCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(62, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCustomMetric() {
      ::grpc::Service::MarkMethodRaw(63);
    }
    ~WithRawMethod_CreateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCustomMetric(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(63, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCustomMetric() {
      ::grpc::Service::MarkMethodRaw(64);
    }
    ~WithRawMethod_UpdateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCustomMetric(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(64, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCustomMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCustomMetrics() {
      ::grpc::Service::MarkMethodRaw(65);
    }
    ~WithRawMethod_ListCustomMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomMetrics(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCustomMetrics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(65, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ArchiveCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ArchiveCustomMetric() {
      ::grpc::Service::MarkMethodRaw(66);
    }
    ~WithRawMethod_ArchiveCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestArchiveCustomMetric(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(66, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCustomMetric() {
      ::grpc::Service::MarkMethodRaw(67);
    }
    ~WithRawMethod_GetCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomMetric(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(67, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAccount() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAccounts() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAccounts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccounts(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAccounts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteAccount() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAccount() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ProvisionAccountTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ProvisionAccountTicket() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ProvisionAccountTicket(context, request, response); }));
    }
    ~WithRawCallbackMethod_ProvisionAccountTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvisionAccountTicket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAccountSummaries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAccountSummaries() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAccountSummaries(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAccountSummaries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAccountSummaries(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAccountSummaries(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProperty() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListProperties() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListProperties(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateProperty() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteProperty() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateProperty() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserLink() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchGetUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchGetUserLinks() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchGetUserLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchGetUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchGetUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListUserLinks() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListUserLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AuditUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AuditUserLinks() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AuditUserLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_AuditUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuditUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuditUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateUserLink() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateUserLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchCreateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchCreateUserLinks() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchCreateUserLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchCreateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchCreateUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateUserLink() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUserLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchUpdateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchUpdateUserLinks() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchUpdateUserLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchUpdateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchUpdateUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteUserLink() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteUserLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUserLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchDeleteUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchDeleteUserLinks() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchDeleteUserLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchDeleteUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchDeleteUserLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetWebDataStream() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetWebDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteWebDataStream() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteWebDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateWebDataStream() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateWebDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateWebDataStream() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateWebDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateWebDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListWebDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListWebDataStreams() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListWebDataStreams(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListWebDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWebDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListWebDataStreams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetIosAppDataStream() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetIosAppDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetIosAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteIosAppDataStream() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteIosAppDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteIosAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateIosAppDataStream() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateIosAppDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateIosAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListIosAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListIosAppDataStreams() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListIosAppDataStreams(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListIosAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListIosAppDataStreams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAndroidAppDataStream() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAndroidAppDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAndroidAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteAndroidAppDataStream() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteAndroidAppDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAndroidAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAndroidAppDataStream() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAndroidAppDataStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAndroidAppDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAndroidAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAndroidAppDataStreams() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAndroidAppDataStreams(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAndroidAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAndroidAppDataStreams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEnhancedMeasurementSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEnhancedMeasurementSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateEnhancedMeasurementSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateEnhancedMeasurementSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateFirebaseLink() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateFirebaseLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateFirebaseLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateFirebaseLink() {
      ::grpc::Service::MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateFirebaseLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateFirebaseLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteFirebaseLink() {
      ::grpc::Service::MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteFirebaseLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFirebaseLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListFirebaseLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListFirebaseLinks() {
      ::grpc::Service::MarkMethodRawCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListFirebaseLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListFirebaseLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFirebaseLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGlobalSiteTag : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGlobalSiteTag() {
      ::grpc::Service::MarkMethodRawCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGlobalSiteTag(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGlobalSiteTag() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGlobalSiteTag(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateGoogleAdsLink() {
      ::grpc::Service::MarkMethodRawCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateGoogleAdsLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateGoogleAdsLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateGoogleAdsLink() {
      ::grpc::Service::MarkMethodRawCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateGoogleAdsLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGoogleAdsLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteGoogleAdsLink() {
      ::grpc::Service::MarkMethodRawCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteGoogleAdsLink(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteGoogleAdsLink(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListGoogleAdsLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListGoogleAdsLinks() {
      ::grpc::Service::MarkMethodRawCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListGoogleAdsLinks(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListGoogleAdsLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListGoogleAdsLinks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDataSharingSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDataSharingSettings() {
      ::grpc::Service::MarkMethodRawCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDataSharingSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDataSharingSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataSharingSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRawCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMeasurementProtocolSecret(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListMeasurementProtocolSecrets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListMeasurementProtocolSecrets() {
      ::grpc::Service::MarkMethodRawCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListMeasurementProtocolSecrets(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListMeasurementProtocolSecrets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMeasurementProtocolSecrets(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRawCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateMeasurementProtocolSecret(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRawCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteMeasurementProtocolSecret(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodRawCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateMeasurementProtocolSecret(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMeasurementProtocolSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchChangeHistoryEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchChangeHistoryEvents() {
      ::grpc::Service::MarkMethodRawCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchChangeHistoryEvents(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchChangeHistoryEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchChangeHistoryEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodRawCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGoogleSignalsSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGoogleSignalsSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodRawCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateGoogleSignalsSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGoogleSignalsSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateConversionEvent() {
      ::grpc::Service::MarkMethodRawCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateConversionEvent(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateConversionEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConversionEvent() {
      ::grpc::Service::MarkMethodRawCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConversionEvent(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConversionEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteConversionEvent() {
      ::grpc::Service::MarkMethodRawCallback(56,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteConversionEvent(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteConversionEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListConversionEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListConversionEvents() {
      ::grpc::Service::MarkMethodRawCallback(57,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListConversionEvents(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListConversionEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConversionEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListConversionEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateCustomDimension() {
      ::grpc::Service::MarkMethodRawCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCustomDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateCustomDimension() {
      ::grpc::Service::MarkMethodRawCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCustomDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCustomDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCustomDimensions() {
      ::grpc::Service::MarkMethodRawCallback(60,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCustomDimensions(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCustomDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomDimensions(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCustomDimensions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ArchiveCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ArchiveCustomDimension() {
      ::grpc::Service::MarkMethodRawCallback(61,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ArchiveCustomDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_ArchiveCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ArchiveCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCustomDimension() {
      ::grpc::Service::MarkMethodRawCallback(62,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCustomDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCustomDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateCustomMetric() {
      ::grpc::Service::MarkMethodRawCallback(63,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCustomMetric(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateCustomMetric() {
      ::grpc::Service::MarkMethodRawCallback(64,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCustomMetric(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCustomMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCustomMetrics() {
      ::grpc::Service::MarkMethodRawCallback(65,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCustomMetrics(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCustomMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCustomMetrics(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCustomMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ArchiveCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ArchiveCustomMetric() {
      ::grpc::Service::MarkMethodRawCallback(66,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ArchiveCustomMetric(context, request, response); }));
    }
    ~WithRawCallbackMethod_ArchiveCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ArchiveCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCustomMetric() {
      ::grpc::Service::MarkMethodRawCallback(67,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCustomMetric(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCustomMetric(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAccount() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetAccountRequest, ::google::analytics::admin::v1alpha::Account>* streamer) {
                       return this->StreamedGetAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetAccountRequest,::google::analytics::admin::v1alpha::Account>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAccounts() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListAccountsRequest, ::google::analytics::admin::v1alpha::ListAccountsResponse>* streamer) {
                       return this->StreamedListAccounts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAccounts(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAccounts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListAccountsRequest,::google::analytics::admin::v1alpha::ListAccountsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteAccount() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteAccountRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAccountRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteAccountRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAccount() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateAccountRequest, ::google::analytics::admin::v1alpha::Account>* streamer) {
                       return this->StreamedUpdateAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAccount(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAccountRequest* /*request*/, ::google::analytics::admin::v1alpha::Account* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateAccountRequest,::google::analytics::admin::v1alpha::Account>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ProvisionAccountTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ProvisionAccountTicket() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* streamer) {
                       return this->StreamedProvisionAccountTicket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ProvisionAccountTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ProvisionAccountTicket(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest* /*request*/, ::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedProvisionAccountTicket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ProvisionAccountTicketRequest,::google::analytics::admin::v1alpha::ProvisionAccountTicketResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAccountSummaries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAccountSummaries() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListAccountSummariesRequest, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* streamer) {
                       return this->StreamedListAccountSummaries(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAccountSummaries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAccountSummaries(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAccountSummariesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAccountSummariesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAccountSummaries(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListAccountSummariesRequest,::google::analytics::admin::v1alpha::ListAccountSummariesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProperty() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetPropertyRequest, ::google::analytics::admin::v1alpha::Property>* streamer) {
                       return this->StreamedGetProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetPropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetPropertyRequest,::google::analytics::admin::v1alpha::Property>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListProperties() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListPropertiesRequest, ::google::analytics::admin::v1alpha::ListPropertiesResponse>* streamer) {
                       return this->StreamedListProperties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListPropertiesRequest* /*request*/, ::google::analytics::admin::v1alpha::ListPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProperties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListPropertiesRequest,::google::analytics::admin::v1alpha::ListPropertiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateProperty() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreatePropertyRequest, ::google::analytics::admin::v1alpha::Property>* streamer) {
                       return this->StreamedCreateProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreatePropertyRequest,::google::analytics::admin::v1alpha::Property>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteProperty() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeletePropertyRequest, ::google::analytics::admin::v1alpha::Property>* streamer) {
                       return this->StreamedDeleteProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeletePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeletePropertyRequest,::google::analytics::admin::v1alpha::Property>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateProperty() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdatePropertyRequest, ::google::analytics::admin::v1alpha::Property>* streamer) {
                       return this->StreamedUpdateProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProperty(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdatePropertyRequest* /*request*/, ::google::analytics::admin::v1alpha::Property* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdatePropertyRequest,::google::analytics::admin::v1alpha::Property>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserLink() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>* streamer) {
                       return this->StreamedGetUserLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetUserLinkRequest,::google::analytics::admin::v1alpha::UserLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchGetUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchGetUserLinks() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* streamer) {
                       return this->StreamedBatchGetUserLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchGetUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchGetUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchGetUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchGetUserLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::BatchGetUserLinksRequest,::google::analytics::admin::v1alpha::BatchGetUserLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListUserLinks() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListUserLinksRequest, ::google::analytics::admin::v1alpha::ListUserLinksResponse>* streamer) {
                       return this->StreamedListUserLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListUserLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListUserLinksRequest,::google::analytics::admin::v1alpha::ListUserLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AuditUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AuditUserLinks() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::AuditUserLinksRequest, ::google::analytics::admin::v1alpha::AuditUserLinksResponse>* streamer) {
                       return this->StreamedAuditUserLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AuditUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AuditUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::AuditUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::AuditUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAuditUserLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::AuditUserLinksRequest,::google::analytics::admin::v1alpha::AuditUserLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateUserLink() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>* streamer) {
                       return this->StreamedCreateUserLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUserLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateUserLinkRequest,::google::analytics::admin::v1alpha::UserLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchCreateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchCreateUserLinks() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* streamer) {
                       return this->StreamedBatchCreateUserLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchCreateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchCreateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchCreateUserLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::BatchCreateUserLinksRequest,::google::analytics::admin::v1alpha::BatchCreateUserLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUserLink() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateUserLinkRequest, ::google::analytics::admin::v1alpha::UserLink>* streamer) {
                       return this->StreamedUpdateUserLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateUserLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::UserLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUserLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateUserLinkRequest,::google::analytics::admin::v1alpha::UserLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchUpdateUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchUpdateUserLinks() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* streamer) {
                       return this->StreamedBatchUpdateUserLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchUpdateUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchUpdateUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchUpdateUserLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::BatchUpdateUserLinksRequest,::google::analytics::admin::v1alpha::BatchUpdateUserLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUserLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteUserLink() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteUserLinkRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteUserLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteUserLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUserLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteUserLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUserLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteUserLinkRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchDeleteUserLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchDeleteUserLinks() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedBatchDeleteUserLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchDeleteUserLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchDeleteUserLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchDeleteUserLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::BatchDeleteUserLinksRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetWebDataStream() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>* streamer) {
                       return this->StreamedGetWebDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWebDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetWebDataStreamRequest,::google::analytics::admin::v1alpha::WebDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteWebDataStream() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteWebDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteWebDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteWebDataStreamRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateWebDataStream() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>* streamer) {
                       return this->StreamedUpdateWebDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateWebDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateWebDataStreamRequest,::google::analytics::admin::v1alpha::WebDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateWebDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateWebDataStream() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest, ::google::analytics::admin::v1alpha::WebDataStream>* streamer) {
                       return this->StreamedCreateWebDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateWebDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateWebDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::WebDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateWebDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateWebDataStreamRequest,::google::analytics::admin::v1alpha::WebDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListWebDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListWebDataStreams() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* streamer) {
                       return this->StreamedListWebDataStreams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListWebDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListWebDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListWebDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListWebDataStreams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListWebDataStreamsRequest,::google::analytics::admin::v1alpha::ListWebDataStreamsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetIosAppDataStream() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>* streamer) {
                       return this->StreamedGetIosAppDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetIosAppDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetIosAppDataStreamRequest,::google::analytics::admin::v1alpha::IosAppDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteIosAppDataStream() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteIosAppDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteIosAppDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteIosAppDataStreamRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateIosAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateIosAppDataStream() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest, ::google::analytics::admin::v1alpha::IosAppDataStream>* streamer) {
                       return this->StreamedUpdateIosAppDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateIosAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateIosAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::IosAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateIosAppDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateIosAppDataStreamRequest,::google::analytics::admin::v1alpha::IosAppDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListIosAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListIosAppDataStreams() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* streamer) {
                       return this->StreamedListIosAppDataStreams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListIosAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListIosAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListIosAppDataStreams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListIosAppDataStreamsRequest,::google::analytics::admin::v1alpha::ListIosAppDataStreamsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAndroidAppDataStream() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>* streamer) {
                       return this->StreamedGetAndroidAppDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAndroidAppDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetAndroidAppDataStreamRequest,::google::analytics::admin::v1alpha::AndroidAppDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteAndroidAppDataStream() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteAndroidAppDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAndroidAppDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteAndroidAppDataStreamRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAndroidAppDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAndroidAppDataStream() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest, ::google::analytics::admin::v1alpha::AndroidAppDataStream>* streamer) {
                       return this->StreamedUpdateAndroidAppDataStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAndroidAppDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAndroidAppDataStream(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest* /*request*/, ::google::analytics::admin::v1alpha::AndroidAppDataStream* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAndroidAppDataStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateAndroidAppDataStreamRequest,::google::analytics::admin::v1alpha::AndroidAppDataStream>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAndroidAppDataStreams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAndroidAppDataStreams() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* streamer) {
                       return this->StreamedListAndroidAppDataStreams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAndroidAppDataStreams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAndroidAppDataStreams(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAndroidAppDataStreams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsRequest,::google::analytics::admin::v1alpha::ListAndroidAppDataStreamsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* streamer) {
                       return this->StreamedGetEnhancedMeasurementSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEnhancedMeasurementSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetEnhancedMeasurementSettingsRequest,::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateEnhancedMeasurementSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateEnhancedMeasurementSettings() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* streamer) {
                       return this->StreamedUpdateEnhancedMeasurementSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateEnhancedMeasurementSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateEnhancedMeasurementSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::EnhancedMeasurementSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateEnhancedMeasurementSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateEnhancedMeasurementSettingsRequest,::google::analytics::admin::v1alpha::EnhancedMeasurementSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateFirebaseLink() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>* streamer) {
                       return this->StreamedCreateFirebaseLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateFirebaseLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateFirebaseLinkRequest,::google::analytics::admin::v1alpha::FirebaseLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateFirebaseLink() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest, ::google::analytics::admin::v1alpha::FirebaseLink>* streamer) {
                       return this->StreamedUpdateFirebaseLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::FirebaseLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateFirebaseLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateFirebaseLinkRequest,::google::analytics::admin::v1alpha::FirebaseLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteFirebaseLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteFirebaseLink() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteFirebaseLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteFirebaseLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteFirebaseLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteFirebaseLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteFirebaseLinkRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListFirebaseLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListFirebaseLinks() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* streamer) {
                       return this->StreamedListFirebaseLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListFirebaseLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListFirebaseLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListFirebaseLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListFirebaseLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListFirebaseLinksRequest,::google::analytics::admin::v1alpha::ListFirebaseLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGlobalSiteTag : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGlobalSiteTag() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest, ::google::analytics::admin::v1alpha::GlobalSiteTag>* streamer) {
                       return this->StreamedGetGlobalSiteTag(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGlobalSiteTag() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGlobalSiteTag(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest* /*request*/, ::google::analytics::admin::v1alpha::GlobalSiteTag* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGlobalSiteTag(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetGlobalSiteTagRequest,::google::analytics::admin::v1alpha::GlobalSiteTag>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateGoogleAdsLink() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>* streamer) {
                       return this->StreamedCreateGoogleAdsLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateGoogleAdsLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateGoogleAdsLinkRequest,::google::analytics::admin::v1alpha::GoogleAdsLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateGoogleAdsLink() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest, ::google::analytics::admin::v1alpha::GoogleAdsLink>* streamer) {
                       return this->StreamedUpdateGoogleAdsLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleAdsLink* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateGoogleAdsLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateGoogleAdsLinkRequest,::google::analytics::admin::v1alpha::GoogleAdsLink>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteGoogleAdsLink : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteGoogleAdsLink() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteGoogleAdsLink(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteGoogleAdsLink() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteGoogleAdsLink(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteGoogleAdsLink(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteGoogleAdsLinkRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListGoogleAdsLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListGoogleAdsLinks() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* streamer) {
                       return this->StreamedListGoogleAdsLinks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListGoogleAdsLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListGoogleAdsLinks(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest* /*request*/, ::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListGoogleAdsLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListGoogleAdsLinksRequest,::google::analytics::admin::v1alpha::ListGoogleAdsLinksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDataSharingSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDataSharingSettings() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest, ::google::analytics::admin::v1alpha::DataSharingSettings>* streamer) {
                       return this->StreamedGetDataSharingSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDataSharingSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDataSharingSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::DataSharingSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDataSharingSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetDataSharingSettingsRequest,::google::analytics::admin::v1alpha::DataSharingSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* streamer) {
                       return this->StreamedGetMeasurementProtocolSecret(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetMeasurementProtocolSecretRequest,::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListMeasurementProtocolSecrets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListMeasurementProtocolSecrets() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* streamer) {
                       return this->StreamedListMeasurementProtocolSecrets(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListMeasurementProtocolSecrets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListMeasurementProtocolSecrets(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListMeasurementProtocolSecrets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsRequest,::google::analytics::admin::v1alpha::ListMeasurementProtocolSecretsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* streamer) {
                       return this->StreamedCreateMeasurementProtocolSecret(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateMeasurementProtocolSecretRequest,::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteMeasurementProtocolSecret(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteMeasurementProtocolSecretRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateMeasurementProtocolSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateMeasurementProtocolSecret() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* streamer) {
                       return this->StreamedUpdateMeasurementProtocolSecret(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateMeasurementProtocolSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateMeasurementProtocolSecret(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest* /*request*/, ::google::analytics::admin::v1alpha::MeasurementProtocolSecret* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateMeasurementProtocolSecret(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateMeasurementProtocolSecretRequest,::google::analytics::admin::v1alpha::MeasurementProtocolSecret>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchChangeHistoryEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchChangeHistoryEvents() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* streamer) {
                       return this->StreamedSearchChangeHistoryEvents(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchChangeHistoryEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchChangeHistoryEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchChangeHistoryEvents(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::SearchChangeHistoryEventsRequest,::google::analytics::admin::v1alpha::SearchChangeHistoryEventsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* streamer) {
                       return this->StreamedGetGoogleSignalsSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGoogleSignalsSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetGoogleSignalsSettingsRequest,::google::analytics::admin::v1alpha::GoogleSignalsSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateGoogleSignalsSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateGoogleSignalsSettings() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest, ::google::analytics::admin::v1alpha::GoogleSignalsSettings>* streamer) {
                       return this->StreamedUpdateGoogleSignalsSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateGoogleSignalsSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateGoogleSignalsSettings(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest* /*request*/, ::google::analytics::admin::v1alpha::GoogleSignalsSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateGoogleSignalsSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateGoogleSignalsSettingsRequest,::google::analytics::admin::v1alpha::GoogleSignalsSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateConversionEvent() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>* streamer) {
                       return this->StreamedCreateConversionEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateConversionEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateConversionEventRequest,::google::analytics::admin::v1alpha::ConversionEvent>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConversionEvent() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetConversionEventRequest, ::google::analytics::admin::v1alpha::ConversionEvent>* streamer) {
                       return this->StreamedGetConversionEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetConversionEventRequest* /*request*/, ::google::analytics::admin::v1alpha::ConversionEvent* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConversionEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetConversionEventRequest,::google::analytics::admin::v1alpha::ConversionEvent>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteConversionEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteConversionEvent() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::DeleteConversionEventRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteConversionEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteConversionEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteConversionEvent(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::DeleteConversionEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteConversionEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::DeleteConversionEventRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListConversionEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListConversionEvents() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListConversionEventsRequest, ::google::analytics::admin::v1alpha::ListConversionEventsResponse>* streamer) {
                       return this->StreamedListConversionEvents(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListConversionEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListConversionEvents(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListConversionEventsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListConversionEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListConversionEvents(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListConversionEventsRequest,::google::analytics::admin::v1alpha::ListConversionEventsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCustomDimension() {
      ::grpc::Service::MarkMethodStreamed(58,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>* streamer) {
                       return this->StreamedCreateCustomDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCustomDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateCustomDimensionRequest,::google::analytics::admin::v1alpha::CustomDimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCustomDimension() {
      ::grpc::Service::MarkMethodStreamed(59,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>* streamer) {
                       return this->StreamedUpdateCustomDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCustomDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateCustomDimensionRequest,::google::analytics::admin::v1alpha::CustomDimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCustomDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCustomDimensions() {
      ::grpc::Service::MarkMethodStreamed(60,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* streamer) {
                       return this->StreamedListCustomDimensions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCustomDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCustomDimensions(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomDimensionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCustomDimensions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListCustomDimensionsRequest,::google::analytics::admin::v1alpha::ListCustomDimensionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ArchiveCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ArchiveCustomDimension() {
      ::grpc::Service::MarkMethodStreamed(61,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedArchiveCustomDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ArchiveCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ArchiveCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedArchiveCustomDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ArchiveCustomDimensionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCustomDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCustomDimension() {
      ::grpc::Service::MarkMethodStreamed(62,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetCustomDimensionRequest, ::google::analytics::admin::v1alpha::CustomDimension>* streamer) {
                       return this->StreamedGetCustomDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCustomDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCustomDimension(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomDimensionRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomDimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCustomDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetCustomDimensionRequest,::google::analytics::admin::v1alpha::CustomDimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCustomMetric() {
      ::grpc::Service::MarkMethodStreamed(63,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::CreateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>* streamer) {
                       return this->StreamedCreateCustomMetric(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::CreateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCustomMetric(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::CreateCustomMetricRequest,::google::analytics::admin::v1alpha::CustomMetric>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCustomMetric() {
      ::grpc::Service::MarkMethodStreamed(64,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>* streamer) {
                       return this->StreamedUpdateCustomMetric(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCustomMetric(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::UpdateCustomMetricRequest,::google::analytics::admin::v1alpha::CustomMetric>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCustomMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCustomMetrics() {
      ::grpc::Service::MarkMethodStreamed(65,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ListCustomMetricsRequest, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* streamer) {
                       return this->StreamedListCustomMetrics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCustomMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCustomMetrics(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ListCustomMetricsRequest* /*request*/, ::google::analytics::admin::v1alpha::ListCustomMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCustomMetrics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ListCustomMetricsRequest,::google::analytics::admin::v1alpha::ListCustomMetricsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ArchiveCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ArchiveCustomMetric() {
      ::grpc::Service::MarkMethodStreamed(66,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedArchiveCustomMetric(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ArchiveCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ArchiveCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedArchiveCustomMetric(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::ArchiveCustomMetricRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCustomMetric : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCustomMetric() {
      ::grpc::Service::MarkMethodStreamed(67,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::analytics::admin::v1alpha::GetCustomMetricRequest, ::google::analytics::admin::v1alpha::CustomMetric>* streamer) {
                       return this->StreamedGetCustomMetric(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCustomMetric() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCustomMetric(::grpc::ServerContext* /*context*/, const ::google::analytics::admin::v1alpha::GetCustomMetricRequest* /*request*/, ::google::analytics::admin::v1alpha::CustomMetric* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCustomMetric(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::analytics::admin::v1alpha::GetCustomMetricRequest,::google::analytics::admin::v1alpha::CustomMetric>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetAccount<WithStreamedUnaryMethod_ListAccounts<WithStreamedUnaryMethod_DeleteAccount<WithStreamedUnaryMethod_UpdateAccount<WithStreamedUnaryMethod_ProvisionAccountTicket<WithStreamedUnaryMethod_ListAccountSummaries<WithStreamedUnaryMethod_GetProperty<WithStreamedUnaryMethod_ListProperties<WithStreamedUnaryMethod_CreateProperty<WithStreamedUnaryMethod_DeleteProperty<WithStreamedUnaryMethod_UpdateProperty<WithStreamedUnaryMethod_GetUserLink<WithStreamedUnaryMethod_BatchGetUserLinks<WithStreamedUnaryMethod_ListUserLinks<WithStreamedUnaryMethod_AuditUserLinks<WithStreamedUnaryMethod_CreateUserLink<WithStreamedUnaryMethod_BatchCreateUserLinks<WithStreamedUnaryMethod_UpdateUserLink<WithStreamedUnaryMethod_BatchUpdateUserLinks<WithStreamedUnaryMethod_DeleteUserLink<WithStreamedUnaryMethod_BatchDeleteUserLinks<WithStreamedUnaryMethod_GetWebDataStream<WithStreamedUnaryMethod_DeleteWebDataStream<WithStreamedUnaryMethod_UpdateWebDataStream<WithStreamedUnaryMethod_CreateWebDataStream<WithStreamedUnaryMethod_ListWebDataStreams<WithStreamedUnaryMethod_GetIosAppDataStream<WithStreamedUnaryMethod_DeleteIosAppDataStream<WithStreamedUnaryMethod_UpdateIosAppDataStream<WithStreamedUnaryMethod_ListIosAppDataStreams<WithStreamedUnaryMethod_GetAndroidAppDataStream<WithStreamedUnaryMethod_DeleteAndroidAppDataStream<WithStreamedUnaryMethod_UpdateAndroidAppDataStream<WithStreamedUnaryMethod_ListAndroidAppDataStreams<WithStreamedUnaryMethod_GetEnhancedMeasurementSettings<WithStreamedUnaryMethod_UpdateEnhancedMeasurementSettings<WithStreamedUnaryMethod_CreateFirebaseLink<WithStreamedUnaryMethod_UpdateFirebaseLink<WithStreamedUnaryMethod_DeleteFirebaseLink<WithStreamedUnaryMethod_ListFirebaseLinks<WithStreamedUnaryMethod_GetGlobalSiteTag<WithStreamedUnaryMethod_CreateGoogleAdsLink<WithStreamedUnaryMethod_UpdateGoogleAdsLink<WithStreamedUnaryMethod_DeleteGoogleAdsLink<WithStreamedUnaryMethod_ListGoogleAdsLinks<WithStreamedUnaryMethod_GetDataSharingSettings<WithStreamedUnaryMethod_GetMeasurementProtocolSecret<WithStreamedUnaryMethod_ListMeasurementProtocolSecrets<WithStreamedUnaryMethod_CreateMeasurementProtocolSecret<WithStreamedUnaryMethod_DeleteMeasurementProtocolSecret<WithStreamedUnaryMethod_UpdateMeasurementProtocolSecret<WithStreamedUnaryMethod_SearchChangeHistoryEvents<WithStreamedUnaryMethod_GetGoogleSignalsSettings<WithStreamedUnaryMethod_UpdateGoogleSignalsSettings<WithStreamedUnaryMethod_CreateConversionEvent<WithStreamedUnaryMethod_GetConversionEvent<WithStreamedUnaryMethod_DeleteConversionEvent<WithStreamedUnaryMethod_ListConversionEvents<WithStreamedUnaryMethod_CreateCustomDimension<WithStreamedUnaryMethod_UpdateCustomDimension<WithStreamedUnaryMethod_ListCustomDimensions<WithStreamedUnaryMethod_ArchiveCustomDimension<WithStreamedUnaryMethod_GetCustomDimension<WithStreamedUnaryMethod_CreateCustomMetric<WithStreamedUnaryMethod_UpdateCustomMetric<WithStreamedUnaryMethod_ListCustomMetrics<WithStreamedUnaryMethod_ArchiveCustomMetric<WithStreamedUnaryMethod_GetCustomMetric<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetAccount<WithStreamedUnaryMethod_ListAccounts<WithStreamedUnaryMethod_DeleteAccount<WithStreamedUnaryMethod_UpdateAccount<WithStreamedUnaryMethod_ProvisionAccountTicket<WithStreamedUnaryMethod_ListAccountSummaries<WithStreamedUnaryMethod_GetProperty<WithStreamedUnaryMethod_ListProperties<WithStreamedUnaryMethod_CreateProperty<WithStreamedUnaryMethod_DeleteProperty<WithStreamedUnaryMethod_UpdateProperty<WithStreamedUnaryMethod_GetUserLink<WithStreamedUnaryMethod_BatchGetUserLinks<WithStreamedUnaryMethod_ListUserLinks<WithStreamedUnaryMethod_AuditUserLinks<WithStreamedUnaryMethod_CreateUserLink<WithStreamedUnaryMethod_BatchCreateUserLinks<WithStreamedUnaryMethod_UpdateUserLink<WithStreamedUnaryMethod_BatchUpdateUserLinks<WithStreamedUnaryMethod_DeleteUserLink<WithStreamedUnaryMethod_BatchDeleteUserLinks<WithStreamedUnaryMethod_GetWebDataStream<WithStreamedUnaryMethod_DeleteWebDataStream<WithStreamedUnaryMethod_UpdateWebDataStream<WithStreamedUnaryMethod_CreateWebDataStream<WithStreamedUnaryMethod_ListWebDataStreams<WithStreamedUnaryMethod_GetIosAppDataStream<WithStreamedUnaryMethod_DeleteIosAppDataStream<WithStreamedUnaryMethod_UpdateIosAppDataStream<WithStreamedUnaryMethod_ListIosAppDataStreams<WithStreamedUnaryMethod_GetAndroidAppDataStream<WithStreamedUnaryMethod_DeleteAndroidAppDataStream<WithStreamedUnaryMethod_UpdateAndroidAppDataStream<WithStreamedUnaryMethod_ListAndroidAppDataStreams<WithStreamedUnaryMethod_GetEnhancedMeasurementSettings<WithStreamedUnaryMethod_UpdateEnhancedMeasurementSettings<WithStreamedUnaryMethod_CreateFirebaseLink<WithStreamedUnaryMethod_UpdateFirebaseLink<WithStreamedUnaryMethod_DeleteFirebaseLink<WithStreamedUnaryMethod_ListFirebaseLinks<WithStreamedUnaryMethod_GetGlobalSiteTag<WithStreamedUnaryMethod_CreateGoogleAdsLink<WithStreamedUnaryMethod_UpdateGoogleAdsLink<WithStreamedUnaryMethod_DeleteGoogleAdsLink<WithStreamedUnaryMethod_ListGoogleAdsLinks<WithStreamedUnaryMethod_GetDataSharingSettings<WithStreamedUnaryMethod_GetMeasurementProtocolSecret<WithStreamedUnaryMethod_ListMeasurementProtocolSecrets<WithStreamedUnaryMethod_CreateMeasurementProtocolSecret<WithStreamedUnaryMethod_DeleteMeasurementProtocolSecret<WithStreamedUnaryMethod_UpdateMeasurementProtocolSecret<WithStreamedUnaryMethod_SearchChangeHistoryEvents<WithStreamedUnaryMethod_GetGoogleSignalsSettings<WithStreamedUnaryMethod_UpdateGoogleSignalsSettings<WithStreamedUnaryMethod_CreateConversionEvent<WithStreamedUnaryMethod_GetConversionEvent<WithStreamedUnaryMethod_DeleteConversionEvent<WithStreamedUnaryMethod_ListConversionEvents<WithStreamedUnaryMethod_CreateCustomDimension<WithStreamedUnaryMethod_UpdateCustomDimension<WithStreamedUnaryMethod_ListCustomDimensions<WithStreamedUnaryMethod_ArchiveCustomDimension<WithStreamedUnaryMethod_GetCustomDimension<WithStreamedUnaryMethod_CreateCustomMetric<WithStreamedUnaryMethod_UpdateCustomMetric<WithStreamedUnaryMethod_ListCustomMetrics<WithStreamedUnaryMethod_ArchiveCustomMetric<WithStreamedUnaryMethod_GetCustomMetric<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1alpha
}  // namespace admin
}  // namespace analytics
}  // namespace google


#endif  // GRPC_google_2fanalytics_2fadmin_2fv1alpha_2fanalytics_5fadmin_2eproto__INCLUDED
